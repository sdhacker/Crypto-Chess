{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap a00b70ce625d47009c25","webpack:///./index.js","webpack:///./app/javascript/app.js","webpack:///./app/javascript/accounts.js","webpack:///./contract/Chess.sol","webpack:///./~/web3/index.js","webpack:///./~/web3/lib/web3.js","webpack:///./~/web3/lib/web3/requestmanager.js","webpack:///./~/web3/lib/web3/jsonrpc.js","webpack:///./~/web3/lib/utils/utils.js","webpack:///./~/web3/~/bignumber.js/bignumber.js","webpack:///./~/web3/lib/utils/sha3.js","webpack:///./~/crypto-js/index.js","webpack:///./~/crypto-js/core.js","webpack:///./~/crypto-js/x64-core.js","webpack:///./~/crypto-js/lib-typedarrays.js","webpack:///./~/crypto-js/enc-utf16.js","webpack:///./~/crypto-js/enc-base64.js","webpack:///./~/crypto-js/md5.js","webpack:///./~/crypto-js/sha1.js","webpack:///./~/crypto-js/sha256.js","webpack:///./~/crypto-js/sha224.js","webpack:///./~/crypto-js/sha512.js","webpack:///./~/crypto-js/sha384.js","webpack:///./~/crypto-js/sha3.js","webpack:///./~/crypto-js/ripemd160.js","webpack:///./~/crypto-js/hmac.js","webpack:///./~/crypto-js/pbkdf2.js","webpack:///./~/crypto-js/evpkdf.js","webpack:///./~/crypto-js/cipher-core.js","webpack:///./~/crypto-js/mode-cfb.js","webpack:///./~/crypto-js/mode-ctr.js","webpack:///./~/crypto-js/mode-ctr-gladman.js","webpack:///./~/crypto-js/mode-ofb.js","webpack:///./~/crypto-js/mode-ecb.js","webpack:///./~/crypto-js/pad-ansix923.js","webpack:///./~/crypto-js/pad-iso10126.js","webpack:///./~/crypto-js/pad-iso97971.js","webpack:///./~/crypto-js/pad-zeropadding.js","webpack:///./~/crypto-js/pad-nopadding.js","webpack:///./~/crypto-js/format-hex.js","webpack:///./~/crypto-js/aes.js","webpack:///./~/crypto-js/tripledes.js","webpack:///./~/crypto-js/rc4.js","webpack:///./~/crypto-js/rabbit.js","webpack:///./~/crypto-js/rabbit-legacy.js","webpack:///./~/utf8/utf8.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/web3/lib/utils/config.js","webpack:///./~/web3/lib/web3/errors.js","webpack:///./~/web3/lib/web3/iban.js","webpack:///./~/web3/lib/web3/methods/eth.js","webpack:///./~/web3/lib/web3/formatters.js","webpack:///./~/web3/lib/web3/method.js","webpack:///./~/web3/lib/web3/property.js","webpack:///./~/web3/lib/web3/contract.js","webpack:///./~/web3/lib/solidity/coder.js","webpack:///./~/web3/lib/solidity/formatters.js","webpack:///./~/web3/lib/solidity/param.js","webpack:///./~/web3/lib/solidity/address.js","webpack:///./~/web3/lib/solidity/type.js","webpack:///./~/web3/lib/solidity/bool.js","webpack:///./~/web3/lib/solidity/int.js","webpack:///./~/web3/lib/solidity/uint.js","webpack:///./~/web3/lib/solidity/dynamicbytes.js","webpack:///./~/web3/lib/solidity/string.js","webpack:///./~/web3/lib/solidity/real.js","webpack:///./~/web3/lib/solidity/ureal.js","webpack:///./~/web3/lib/solidity/bytes.js","webpack:///./~/web3/lib/web3/event.js","webpack:///./~/web3/lib/web3/filter.js","webpack:///./~/web3/lib/web3/methods/watches.js","webpack:///./~/web3/lib/web3/function.js","webpack:///./~/web3/lib/web3/allevents.js","webpack:///./~/web3/lib/web3/syncing.js","webpack:///./~/web3/lib/web3/namereg.js","webpack:///./~/web3/lib/contracts/GlobalRegistrar.json","webpack:///./~/web3/lib/contracts/ICAPRegistrar.json","webpack:///./~/web3/lib/web3/transfer.js","webpack:///./~/web3/lib/contracts/SmartExchange.json","webpack:///./~/web3/lib/web3/methods/db.js","webpack:///./~/web3/lib/web3/methods/shh.js","webpack:///./~/web3/lib/web3/methods/net.js","webpack:///./~/web3/lib/web3/methods/personal.js","webpack:///./~/web3/lib/web3/settings.js","webpack:///./~/web3/lib/version.json","webpack:///./~/web3/lib/web3/extend.js","webpack:///./~/web3/lib/web3/batch.js","webpack:///./~/web3/lib/web3/httpprovider.js","webpack:///./~/web3/lib/utils/browser-xhr.js","webpack:///./~/web3/lib/web3/ipcprovider.js","webpack:///./app/javascript/navigation.js","webpack:///./app/javascript/gameStatesFactory.js","webpack:///./app/javascript/gamesFactory.js","webpack:///./app/javascript/utils/fen-conversion.js","webpack:///./app/config.js","webpack:///./~/chess.js/chess.js","webpack:///./~/web3-shh-dropin-for-proxy/shh.js","webpack:///./~/socket.io-client/lib/index.js","webpack:///./~/socket.io-client/lib/url.js","webpack:///./~/parseuri/index.js","webpack:///./~/socket.io-client/~/debug/browser.js","webpack:///./~/process/browser.js","webpack:///./~/socket.io-client/~/debug/debug.js","webpack:///./~/socket.io-client/~/ms/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/debug/browser.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/debug/debug.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/ms/index.js","webpack:///./~/json3/lib/json3.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/binary.js","webpack:///./~/isarray/index.js","webpack:///./~/socket.io-client/~/socket.io-parser/is-buffer.js","webpack:///./~/socket.io-client/lib/manager.js","webpack:///./~/engine.io-client/index.js","webpack:///./~/engine.io-client/lib/index.js","webpack:///./~/engine.io-client/lib/socket.js","webpack:///./~/engine.io-client/lib/transports/index.js","webpack:///./~/engine.io-client/lib/xmlhttprequest.js","webpack:///./~/has-cors/index.js","webpack:///./~/engine.io-client/lib/transports/polling-xhr.js","webpack:///./~/engine.io-client/lib/transports/polling.js","webpack:///./~/engine.io-client/lib/transport.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/browser.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/keys.js","webpack:///./~/has-binary/index.js","webpack:///./~/arraybuffer.slice/index.js","webpack:///./~/after/index.js","webpack:///./~/wtf-8/wtf-8.js","webpack:///./~/engine.io-client/~/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./~/blob/index.js","webpack:///./~/engine.io-client/~/component-emitter/index.js","webpack:///./~/parseqs/index.js","webpack:///./~/component-inherit/index.js","webpack:///./~/yeast/index.js","webpack:///./~/engine.io-client/~/debug/browser.js","webpack:///./~/engine.io-client/~/debug/debug.js","webpack:///./~/engine.io-client/~/ms/index.js","webpack:///./~/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./~/engine.io-client/lib/transports/websocket.js","webpack:///./~/indexof/index.js","webpack:///./~/parsejson/index.js","webpack:///./~/socket.io-client/lib/socket.js","webpack:///./~/socket.io-client/~/component-emitter/index.js","webpack:///./~/to-array/index.js","webpack:///./~/socket.io-client/lib/on.js","webpack:///./~/component-bind/index.js","webpack:///./~/backo2/index.js","webpack:///./~/web3-shh-dropin-for-proxy/~/uuid/uuid.js","webpack:///./~/web3-shh-dropin-for-proxy/~/uuid/rng-browser.js","webpack:///./app/javascript/cryptoFactory.js","webpack:///./contract/Auth.sol","webpack:///./app/javascript/welcome.js","webpack:///./app/javascript/messages.js","webpack:///./app/javascript/initializeGame.js","webpack:///./app/javascript/joinGame.js","webpack:///./app/javascript/playGame.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","angular","_Chess","factory","accounts","availableAccounts","mist","window","navigator","userAgent","indexOf","web3","eth","slice","Math","floor","length","defaultAccount","selectedAccount","selectedAccountName","getBalance","account","fromWei","toDigits","toString","getEloScore","Chess","toNumber","e","getBlockie","background-image","blockies","create","seed","toDataURL","isSelectedAccount","setSelectedAccount","name","substr","selectOrCreateAccount","$event","preventDefault","requestAccount","jQuery","show","selectAccount","$","fadeOut","controller","$scope","document","ready","click","Web3","currentProvider","providers","HttpProvider","Auth","contract","constant","inputs","type","outputs","at","ELO","ChessLogic","anonymous","indexed","TurnBasedGame","provider","this","_requestManager","RequestManager","Eth","db","DB","shh","Shh","net","Net","personal","Personal","settings","Settings","version","api","IpcProvider","_extend","extend","properties","Iban","utils","sha3","Batch","Property","prototype","setProvider","reset","keepIsSyncing","toHex","toAscii","toUtf8","fromAscii","fromUtf8","toDecimal","fromDecimal","toBigNumber","toWei","isAddress","isChecksumAddress","toChecksumAddress","isIBAN","fromICAP","icap","iban","address","getter","inputFormatter","isConnected","createBatch","Jsonrpc","errors","polls","timeout","send","data","console","error","InvalidProvider","payload","getInstance","toPayload","method","params","result","isValidResponse","InvalidResponse","sendAsync","callback","err","sendBatch","toBatchPayload","results","isArray","startPolling","pollId","uninstall","poll","stopPolling","Object","keys","clearTimeout","key","setTimeout","bind","ETH_POLLING_TIMEOUT","pollsData","pollsIds","push","pollsIdMap","forEach","load","index","self","map","filter","valid","arguments","callee","_singletonInstance","messageId","instance","jsonrpc","response","undefined","messages","message","BigNumber","utf8","unitMap","noether","wei","kwei","Kwei","babbage","femtoether","mwei","Mwei","lovelace","picoether","gwei","Gwei","shannon","nanoether","nano","szabo","microether","micro","finney","milliether","milli","ether","kether","grand","mether","gether","tether","padLeft","string","chars","sign","Array","join","padRight","hex","str","i","l","substring","code","parseInt","String","fromCharCode","decode","encode","charCodeAt","n","transformToFullName","json","typeName","extractDisplayName","extractTypeName","replace","value","number","lessThan","val","isBoolean","isBigNumber","isObject","JSON","stringify","isString","isFinite","getValueOfUnit","unit","toLowerCase","unitValue","Error","returnValue","dividedBy","times","toTwosComplement","bigNumber","plus","isStrictAddress","test","addressHash","toUpperCase","checksumAddress","toAddress","object","constructor","isFunction","isJson","parse","__WEBPACK_AMD_DEFINE_RESULT__","global","another","configObj","b","num","len","x","ERRORS","raise","isValidInt","round","DECIMAL_PLACES","ROUNDING_MODE","RegExp","ALPHABET","parseNumeric","s","tooManyDigits","convertBase","isNumeric","search","MAX_EXP","MIN_EXP","LOG_BASE","baseOut","baseIn","d","k","r","xc","y","dp","rm","POW_PRECISION","pow","toBaseOut","toFixedPoint","coeffToString","pop","div","unshift","charAt","format","caller","c0","ne","roundingMode","TO_EXP_NEG","toExponential","maxOrMin","args","intValidatorWithErrors","min","max","truncate","normalise","j","msg","sd","ni","rd","pows10","POWS_TEN","out","mathceil","mathfloor","BASE","P","ONE","TO_EXP_POS","CRYPTO","MODULO_MODE","FORMAT","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","v","a","o","has","hasOwnProperty","MAX","intValidatorNoErrors","notBool","crypto","lt","gt","random","pow2_53","random53bitInt","rand","getRandomValues","Uint32Array","randomBytes","copy","shift","multiply","base","temp","xlo","xhi","carry","klo","SQRT_BASE","khi","compare","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","NaN","bitFloor","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","ceil","comparedTo","decimalPlaces","dividedToIntegerBy","divToInt","equals","eq","greaterThan","greaterThanOrEqualTo","gte","isInteger","isInt","isNegative","isNeg","isZero","lessThanOrEqualTo","lte","minus","sub","t","xLTy","xe","ye","reverse","modulo","mod","negated","neg","add","precision","z","MAX_SAFE_INTEGER","squareRoot","sqrt","rep","half","mul","xcL","ycL","ylo","yhi","zc","sqrtBase","toFixed","toFormat","arr","split","g1","g2","intPart","fractionPart","intDigits","toFraction","md","d0","d2","exp","n0","n1","d1","toPower","parseFloat","toPrecision","truncated","trunc","valueOf","toJSON","obj","arrL","CryptoJS","options","encoding","enc","Hex","outputLength","root","undef","F","subtype","C","C_lib","lib","Base","overrides","mixIn","init","$super","apply","propertyName","clone","WordArray","words","sigBytes","encoder","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","rcache","m_w","m_z","mask","_r","C_enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","offset","_doProcessBlock","processedWords","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","hash","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","X32WordArray","C_x64","x64","Word","high","low","toX32","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","ArrayBuffer","superInit","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","swapEndian","word","Utf16","Utf16BE","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","parseLoop","base64Str","base64StrLength","reverseMap","bits1","bits2","Base64","_map","base64Chars","byte1","byte2","byte3","triplet","paddingChar","_reverseMap","paddingIndex","FF","GG","HH","II","T","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","HmacMD5","W","SHA1","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","SHA224","HmacSHA224","X64Word_create","X64Word","X64WordArray","SHA512","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","al","bh","bl","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","Wi","Wih","Wil","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1l","t1h","t2l","t2h","HmacSHA512","SHA384","HmacSHA384","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newX","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","state","_state","nBlockSizeLanes","M2i","M2i1","lane","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","f1","f2","f3","f4","f5","rotl","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","ar","br","cr","dr","er","hr","zl","zr","sl","sr","HmacRIPEMD160","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","PBKDF2","keySize","iterations","compute","password","salt","derivedKey","blockIndex","derivedKeyWords","blockIndexWords","block","blockWords","blockWordsLength","intermediate","intermediateWords","EvpKDF","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","process","dataUpdate","finalProcessedData","ivSize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","encrypt","decrypt","ciphertext","C_mode","StreamCipher","finalProcessedBlocks","mode","BlockCipherMode","iv","Encryptor","Decryptor","_cipher","_iv","CBC","xorBlock","_prevBlock","processBlock","encryptBlock","thisBlock","decryptBlock","C_pad","pad","Pkcs7","nPaddingBytes","paddingWord","paddingWords","padding","unpad","CipherParams","BlockCipher","modeCreator","_mode","__creator","cipherParams","formatter","C_format","OpenSSLFormatter","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","plaintext","C_kdf","kdf","OpenSSLKdf","execute","derivedParams","CFB","generateKeystreamAndEncrypt","keystream","CTR","counter","_counter","CTRGladman","incWord","b1","b2","b3","incCounter","OFB","_keystream","ECB","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","input","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","sx","x2","x4","x8","RCON","AES","_nRounds","_keyPriorReset","keyWords","nRounds","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","s0","s1","s2","s3","t0","t3","exchangeLR","_lBlock","_rBlock","exchangeRL","PC1","PC2","BIT_SHIFTS","SBOX_P","0","268435456","536870912","805306368","1073741824","1342177280","1610612736","1879048192","2147483648","2415919104","2684354560","2952790016","3221225472","3489660928","3758096384","4026531840","134217728","402653184","671088640","939524096","1207959552","1476395008","1744830464","2013265920","2281701376","2550136832","2818572288","3087007744","3355443200","3623878656","3892314112","4160749568","1","268435457","536870913","805306369","1073741825","1342177281","1610612737","1879048193","2147483649","2415919105","2684354561","2952790017","3221225473","3489660929","3758096385","4026531841","134217729","402653185","671088641","939524097","1207959553","1476395009","1744830465","2013265921","2281701377","2550136833","2818572289","3087007745","3355443201","3623878657","3892314113","4160749569","16777216","33554432","50331648","67108864","83886080","100663296","117440512","150994944","167772160","184549376","201326592","218103808","234881024","251658240","8388608","25165824","41943040","58720256","75497472","92274688","109051904","125829120","142606336","159383552","176160768","192937984","209715200","226492416","243269632","260046848","285212672","301989888","318767104","335544320","352321536","369098752","385875968","419430400","436207616","452984832","469762048","486539264","503316480","520093696","276824064","293601280","310378496","327155712","343932928","360710144","377487360","394264576","411041792","427819008","444596224","461373440","478150656","494927872","511705088","528482304","1048576","2097152","3145728","4194304","5242880","6291456","7340032","9437184","10485760","11534336","12582912","13631488","14680064","15728640","524288","1572864","2621440","3670016","4718592","5767168","6815744","7864320","8912896","9961472","11010048","12058624","13107200","14155776","15204352","16252928","17825792","18874368","19922944","20971520","22020096","23068672","24117248","26214400","27262976","28311552","29360128","30408704","31457280","32505856","17301504","18350080","19398656","20447232","21495808","22544384","23592960","24641536","25690112","26738688","27787264","28835840","29884416","30932992","31981568","33030144","65536","131072","196608","262144","327680","393216","458752","589824","655360","720896","786432","851968","917504","983040","32768","98304","163840","229376","294912","360448","425984","491520","557056","622592","688128","753664","819200","884736","950272","1015808","1114112","1179648","1245184","1310720","1376256","1441792","1507328","1638400","1703936","1769472","1835008","1900544","1966080","2031616","1081344","1146880","1212416","1277952","1343488","1409024","1474560","1540096","1605632","1671168","1736704","1802240","1867776","1933312","1998848","2064384","4096","8192","12288","16384","20480","24576","28672","36864","40960","45056","49152","53248","57344","61440","2048","6144","10240","14336","18432","22528","26624","30720","34816","38912","43008","47104","51200","55296","59392","63488","69632","73728","77824","81920","86016","90112","94208","102400","106496","110592","114688","118784","122880","126976","67584","71680","75776","79872","83968","88064","92160","96256","100352","104448","108544","112640","116736","120832","124928","129024","256","512","768","1024","1280","1536","1792","2304","2560","2816","3072","3328","3584","3840","128","384","640","896","1152","1408","1664","1920","2176","2432","2688","2944","3200","3456","3712","3968","4352","4608","4864","5120","5376","5632","5888","6400","6656","6912","7168","7424","7680","7936","4224","4480","4736","4992","5248","5504","5760","6016","6272","6528","6784","7040","7296","7552","7808","8064","16","32","48","64","80","96","112","144","160","176","192","208","224","240","8","24","40","56","72","88","104","120","136","152","168","184","200","216","232","248","272","288","304","320","336","352","368","400","416","432","448","464","480","496","264","280","296","312","328","344","360","376","392","408","424","440","456","472","488","504","2","3","4","5","6","7","9","10","11","12","13","14","15","2147483650","2147483651","2147483652","2147483653","2147483654","2147483655","2147483656","2147483657","2147483658","2147483659","2147483660","2147483661","2147483662","2147483663","17","18","19","20","21","22","23","25","26","27","28","29","30","31","2147483664","2147483665","2147483666","2147483667","2147483668","2147483669","2147483670","2147483671","2147483672","2147483673","2147483674","2147483675","2147483676","2147483677","2147483678","2147483679","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","lBlock","rBlock","TripleDES","_des1","_des2","_des3","generateKeystreamWord","S","_S","_i","_j","keystreamWord","RC4","keySigBytes","keyByteIndex","keyByte","RC4Drop","drop","nextState","X","_X","_C","C_","_b","gx","ga","gb","G","Rabbit","IV","IV_0","IV_1","i0","i2","i1","i3","RabbitLegacy","ucs2decode","extra","output","ucs2encode","array","stringFromCharCode","checkScalarValue","createByte","encodeCodePoint","symbol","utf8encode","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte4","utf8decode","tmp","freeExports","freeGlobal","webpackPolyfill","deprecate","paths","children","ETH_UNITS","ETH_PADDING","ETH_SIGNATURE_LENGTH","ETH_BIGNUMBER_ROUNDING_MODE","defaultBlock","InvalidNumberOfParams","InvalidConnection","host","bytes","iso13616Prepare","A","Z","mod9710","remainder","_iban","fromAddress","asBn","base36","padded","fromBban","bban","countryCode","checkDigit","createIndirect","institution","identifier","isValid","isDirect","isIndirect","checksum","client","methods","attachToObject","setRequestManager","sendIBANTransaction","transfer","formatters","Method","Contract","watches","Filter","IsSyncing","namereg","blockCall","transactionFromBlockCall","uncleCall","getBlockTransactionCountCall","uncleCountCall","defineProperty","get","set","inputAddressFormatter","inputDefaultBlockNumberFormatter","outputFormatter","outputBigNumberFormatter","getStorageAt","getCode","getBlock","inputBlockNumberFormatter","outputBlockFormatter","getUncle","getCompilers","getBlockTransactionCount","getBlockUncleCount","getTransaction","outputTransactionFormatter","getTransactionFromBlock","getTransactionReceipt","outputTransactionReceiptFormatter","getTransactionCount","sendRawTransaction","sendTransaction","inputTransactionFormatter","inputCallFormatter","estimateGas","compileSolidity","compileLLL","compileSerpent","submitWork","getWork","outputSyncingFormatter","abi","fil","outputLogFormatter","icapNamereg","isSyncing","isPredefinedBlockNumber","blockNumber","from","to","tx","transactionIndex","nonce","gas","gasPrice","receipt","cumulativeGasUsed","gasUsed","logs","log","gasLimit","size","timestamp","difficulty","totalDifficulty","transactions","item","logIndex","inputPostFormatter","post","ttl","workToProve","priority","topics","topic","outputPostFormatter","expiry","sent","workProved","startingBlock","currentBlock","highestBlock","requestManager","getCall","extractCallback","validateArgs","formatInput","formatOutput","func","buildCall","request","setter","arg","proto","buildGet","enumerable","names","asyncGetterName","buildAsyncGet","property","coder","SolidityEvent","SolidityFunction","AllEvents","encodeConstructorParams","types","encodeParams","addFunctionsToContract","_eth","attachToContract","addEventsToContract","events","All","checkForContractAddress","count","callbackFired","stopWatching","transactionHash","contractAddress","ContractFactory","new","last","getData","SolidityTypeAddress","SolidityTypeBool","SolidityTypeInt","SolidityTypeUInt","SolidityTypeDynamicBytes","SolidityTypeString","SolidityTypeReal","SolidityTypeUReal","SolidityTypeBytes","SolidityCoder","_types","_requireType","solidityType","isType","encodeParam","param","solidityTypes","getSolidityTypes","encodeds","dynamicOffset","reduce","acc","staticPartLength","roundedStaticPartLength","encodeMultiWithOffset","isDynamic","isDynamicArray","isDynamicType","formatInputInt","encodeWithOffset","encoded","nestedName","nestedStaticPartLength","previousLength","additionalOffset","isStaticArray","decodeParam","decodeParams","offsets","getOffsets","lengths","SolidityParam","formatInputBytes","formatInputDynamicBytes","formatInputString","formatInputBool","formatInputReal","signedIsNegative","formatOutputInt","staticPart","formatOutputUInt","formatOutputReal","formatOutputUReal","formatOutputBool","formatOutputBytes","formatOutputDynamicBytes","dynamicPart","formatOutputString","formatOutputAddress","dynamicPartLength","withOffset","combine","offsetAsBytes","encodeList","totalOffset","offsetParams","SolidityType","_inputFormatter","_outputFormatter","match","staticArrayLength","nestedTypes","arrayOffset","arrayStart","roundedNestedStaticPartLength","roundedLength","matches","_params","_name","_address","_anonymous","displayName","signature","indexedTopics","argTopics","indexedData","indexedParams","notIndexedData","notIndexedParams","event","current","toTopic","getOptions","fromBlock","toBlock","getLogsAtStart","pollFilter","onMessage","callbacks","implementation","filterId","getLogsCallbacks","pollFilters","newFilter","cb","watch","uninstallFilter","getLogs","res","newFilterCall","_inputTypes","_outputTypes","_constant","extractDefaultBlock","unpackOutput","transaction","AllSolidityEvents","_json","eventTopic","warn","allEvents","pollSyncing","sync","lastSyncState","addCallback","globalRegistrarAbi","icapRegistrarAbi","globalNameregAddress","icapNameregAddress","exchangeAbi","transferToAddress","addr","deposit","putString","getString","putHex","getHex","newIdentity","hasIdentity","newGroup","addToGroup","newAccount","unlockAccount","ex","extension","extendedObject","requests","XMLHttpRequest","Meteor","isServer","Npm","require","prepareRequest","async","open","setRequestHeader","responseText","onreadystatechange","readyState","path","_this","responseCallbacks","connection","connect","on","_timeout","_parseResponse","returnValues","dechunkedData","lastChunk","lastChunkTimeout","_addResponseCallback","writable","writeSync","write","$routeProvider","$provide","pages","welcomePage","initializeGamePage","joinGamePage","playGamePage","$route","navigation","isActivePage","page","activePage","isActiveGame","game","gameId","goto","parameter","location","when","templateUrl","otherwise","redirectTo","games","list","isMist","menu","clear","position","selected","$watch","newGames","oldGames","oldGameIds","_loop","accountId","opponent","oldGameIndex","menuName","username","remove","_typeof","Symbol","iterator","gameStates","selfMoves","opponentMoves","lastMoveNumber","lastMoveTime","getMoveNumberFromState","initializeGame","addSelfMove","moveFrom","moveTo","newState","moveNumber","Date","getTime","updateLocalStorage","addOpponentMove","moveSignature","newStateSignature","delete","getSelfMoves","getLastSelfMove","getSelfMove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","currentMove","currentMoveNumber","return","getPreviousOpponentMove","getLastOpponentMove","isBlockchainStateNewer","blockchainState","getCurrentGameState","blockchainMoveNumber","getLastMovePackage","lastSelfMove","lastSelfMoveNumber","opponentMove","opponentMoveNumber","getLastLocalState","lastOpponentMove","lastOpponentMoveNumber","getLastBlockchainState","blockchainGameState","element","getLastMoveTime","getLastMoveNumber","localStorage","setItem","toJson","fetchFromLocalStorage","movesInLocalStorage","_interopRequireDefault","__esModule","default","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","TypeError","_fenConversion","_config","_config2","ChessJS","shhFactory","proxyUri","shhTopic","appId","TIMEOUT_ACK","timeouts","ack","$rootScope","register","openGames","viewingGame","getGame","find","removeGame","parseContractGameArray","playerWhite","getWhitePlayer","player1","player2","player1Alias","player2Alias","nextPlayer","winner","ended","pot","player1WonEther","player2WonEther","turnTime","timeoutStarted","timeoutState","convertGameToObject","contractGameObject","color","wonEther","chess","generateFen","turn","currentTimeout","listenForMoves","_m$payload","stateSignature","fromIndex","toIndex","opponentChessMove","move","promotion","lastMove","sendAck","toBackend","generateMapping","$broadcast","$apply","sendLastStateOrMoveToBlockchain","showWinner","claimWin","offerDraw","claimTimeout","confirmGameEnded","claimTimeoutEnded","claimEther","withdraw","sendMove","algebraicToIndex","identity","lastSentHash","solSha3","ackTimeout","lastAckHash","moveTimeout","_games$getValidMove","getValidMove","_games$getValidMove2","claimTimeoutEndedWithMove","_games$getValidMove3","_games$getValidMove4","moves","undo","_gameStates$getLastMo","_gameStates$getLastMo2","moveFromState","lastReceivedHash","moveEvents","arrived","_m$payload2","verify","stopListening","eventGameInitialized","eventGameJoined","p1accountId","p1username","p1color","p2accountId","p2username","p2color","gameIndex","eventGameStateChanged","eventMove","toFrontend","generateState","fen","player","eventGameEnded","gameInContract","eventGameClosed","openGameIndex","eventGameTimeoutStarted","in_checkmate","in_stalemate","in_draw","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","getGamesOfPlayer","currentGameId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","getOpenGameIds","openGameId","GameInitialized","GameJoined","GameStateChanged","Move","GameEnded","GameClosed","GameTimeoutStarted","generatePieceMapping","-6","-5","-4","-3","-2","-1","N","B","R","Q","alphabet","fenComponents","board","activeColor","castling","enPassant","fullMoveCounter","toState","whiteKing","blackKing","Number","halfMoveCounter","mapping","skip","zero","toPiece","keep_headers","kings","w","EMPTY","WHITE","ep_square","half_moves","move_number","history","header","update_setup","generate_fen","DEFAULT_POSITION","tokens","square","validate_fen","piece","is_digit","BLACK","put","algebraic","BITS","KSIDE_CASTLE","QSIDE_CASTLE","SQUARES","error_number","rows","sum_fields","previous_was_number","empty","a8","h1","cflags","epflags","set_header","SYMBOLS","sq","KING","build_move","flags","PROMOTION","captured","EP_CAPTURE","PAWN","generate_moves","add_move","rank","RANK_8","RANK_1","pieces","QUEEN","ROOK","BISHOP","KNIGHT","us","them","swap_color","second_rank","RANK_7","RANK_2","first_sq","last_sq","single_square","legal","PAWN_OFFSETS","NORMAL","BIG_PAWN","CAPTURE","PIECE_OFFSETS","castling_from","castling_to","attacked","legal_moves","make_move","king_attacked","undo_move","move_to_san","sloppy","disambiguator","get_disambiguator","in_check","stripped_san","difference","ATTACKS","SHIFTS","RAYS","blocked","insufficient_material","bishops","num_pieces","sq_color","sum","in_threefold_repetition","positions","repetition","ROOKS","flag","old","ambiguities","same_rank","same_file","ambig_from","ambig_to","ambig_piece","file","ascii","move_from_san","clean_move","make_pretty","ugly_move","san","FLAGS","dupe","trim","perft","depth","nodes","child_nodes","POSSIBLE_RESULTS","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","g5","h5","a4","b4","c4","d4","e4","g4","h4","a3","c3","d3","e3","g3","h3","a2","c2","e2","h2","a1","c1","e1","ugly_moves","verbose","game_over","row","pgn","newline","newline_char","max_width","header_exists","reversed_history","move_string","Result","current_width","load_pgn","has_keys","parse_pgn_header","header_obj","headers","header_regex","header_string","exec","ms","rav_regex","half_move","move_obj","pretty_move","square_color","sq_0x88","move_history","io","uuid","uri","watchers","socket","v4","emit","ev","fun","arrivedTopic","watcher","lookup","opts","parsed","url","source","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","debug","Manager","query","encodeQueryString","parser","managers","protocol","Socket","loc","parseuri","port","ipv6","href","re","parts","src","authority","ipv6uri","useColors","documentElement","style","firebug","exception","table","$1","formatArgs","namespace","humanize","diff","lastC","Function","save","namespaces","storage","removeItem","env","DEBUG","localstorage","chrome","local","colors","enable","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","run","Item","noop","nextTick","title","browser","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","selectColor","prevColor","disabled","enabled","curr","prevTime","prev","coerce","logFn","fn","skips","disable","stack","fmtShort","fmtLong","plural","long","Encoder","encodeAsString","nsp","BINARY_EVENT","BINARY_ACK","attachments","encodeAsBinary","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","packet","buffers","removeBlobs","Decoder","reconstructor","decodeString","buf","tryParse","BinaryReconstructor","reconPack","ERROR","Emitter","isBuf","CONNECT","DISCONNECT","EVENT","ACK","base64","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","short","runInContext","context","isSupported","serialized","stringifySupported","isExtended","getClass","parseSupported","SyntaxError","nativeJSON","isProperty","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","members","__proto__","original","parent","Properties","isConstructor","hasProperty","objectTypes","Escapes","92","34","leadingZeroes","toPaddedString","width","unicodePrefix","quote","useCharIndex","symbols","charCode","serialize","whitespace","indentation","className","date","time","hours","minutes","seconds","milliseconds","prefix","Index","Source","Unescapes","47","98","116","110","102","114","abort","lex","begin","isSigned","hasMembers","walk","isLoader","function","nodeType","previousJSON","isRestored","JSON3","noConflict","__webpack_amd_options__","mixin","addEventListener","_callbacks","removeEventListener","hasListeners","_deconstructPacket","placeholder","_placeholder","newData","packetData","_reconstructPacket","_removeBlobs","curKey","containingObject","Blob","File","pendingBlobs","fileReader","FileReader","onload","readAsArrayBuffer","Buffer","isBuffer","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","jitter","connecting","lastPing","packetBuffer","decoder","autoConnect","eio","emitAll","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","close","onping","onpong","ondata","ondecoded","onerror","onConnecting","encodedPackets","processPacketQueue","subsLength","disconnect","onclose","reason","delay","duration","onreconnect","attempt","hostname","secure","agent","parseqs","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","parsejson","priorWebsocketSuccess","Transport","createTransport","EIO","transport","sid","setTransport","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","onOpen","onHandshake","setPing","filterUpgrades","onHeartbeat","ping","sendPacket","compress","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XHR","JSONP","websocket","hasCORS","XDomainRequest","Polling","requestTimeout","Request","isBinary","unloadHandler","inherit","doWrite","req","sendXhr","doPoll","onData","pollXhr","setDisableHeaderCheck","responseType","withCredentials","hasXDR","onLoad","status","requestsCount","onSuccess","fromError","contentType","getResponseHeader","ui8Arr","dataArray","idx","attachEvent","hasXHR2","yeast","doOpen","onPause","total","decodePayload","doClose","packets","callbackfn","encodePayload","schema","b64","description","decodePacket","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","encodePacket","encodeBlob","dontSendBlobs","blob","tryDecode","ary","each","after","eachWithIndex","base64encoder","hasBinary","sliceBuffer","isAndroid","isPhantomJS","pong","packetslist","readAsDataURL","b64data","typed","basic","btoa","decodeBase64Packet","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","decodePayloadAsBinary","chr","ret","totalLength","resultArray","bufferIndex","ab","view","lenStr","binaryIdentifier","lengthAry","bufferTail","numberTooLong","tailArray","msgLength","_hasBinary","arraybuffer","start","end","abv","ii","err_cb","proxy","bail","wtf8encode","wtf8decode","wtf8","encoded1","encoded2","encoded3","encoded4","bufferLength","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","qs","qry","pairs","pair","decoded","now","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","complete","initIframe","html","iframeId","area","top","left","target","setAttribute","action","submit","WS","usingBrowserWebSocket","BrowserWebSocket","WebSocket","NodeWebSocket","MozWebSocket","check","protocols","ws","supports","addEventListeners","onmessage","rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","hasBin","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","parserType","onpacket","onconnect","onevent","onack","ondisconnect","emitBuffered","deviation","oct","_hexToByte","unparse","bth","_byteToHex","v1","clockseq","_clockseq","msecs","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","rnds","rng","_rng","_seedBytes","msCrypto","_rnds8","_rnds","_toConsumableArray","arr2","_Auth","leftPad","nr","_len","msgHash","defaultBoard","text","verifySig","MESSAGE_TIMEOUTS","success","$timeout","$on","etherbet","initGame","startcolor","turntime","$valid","joinGame","setSelectedGame","isSelectedGame","lightItUp","xWhite","yWhite","xBlack","yBlack","playerBlack","checkOpenGame","updateGameInfo","gameStatus","gamePgn","pieceSelected","notationSquare","movesNotation","movesPosition","ChessUtils","convertNotationSquareToIndex","updateBoardState","chessMove","highlights","fromW","toW","fromB","toB","lastFrom","removeClass","lastTo","addClass","userColor","enableUserInput","pieceMoveOffChain","initChessboard","Chessboard","eventHandlers","onPieceSelected","onMove","setOrientation","ORIENTATION","black","getGameId","isOpenGame","Resign","SoliChess","gameIsWon","gameIsLost","gameIsDraw","gameIsActive","gameCanClaimWin","gameCanOfferDraw","timeoutDatePlus2TurnTime","gameCanClaimTimeout","gameCanConfirmDraw","gameCanConfirmLoose","gameCanClaimTimeoutEnded","timeoutDatePlusTurnTime","gameHasClaimableEther","closeGame","closePlayerGame","directive","$interval","scope","template","link","timeLeft","interval","cancel"],"mappings":"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","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/bundles/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(8);\n\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(9);\n\t\n\t//require('./app/javascript/metamask.js');\n\t\n\t__webpack_require__(18);\n\t__webpack_require__(19);\n\t__webpack_require__(107);\n\t__webpack_require__(108);\n\t__webpack_require__(109);\n\t__webpack_require__(169);\n\t__webpack_require__(171);\n\t__webpack_require__(172);\n\t__webpack_require__(173);\n\t__webpack_require__(174);\n\t__webpack_require__(175);\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/* global angular */\n\t\n\tangular.module('dappChess', ['ngRoute', 'ngAnimate']);\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Chess = __webpack_require__(20);\n\t\n\tangular.module('dappChess').factory('accounts', function () {\n\t  var accounts = {\n\t    // Use the first 5 accounts for mist or firefox and the last 5 for other browsers\n\t    availableAccounts: typeof mist !== 'undefined' || window.navigator.userAgent.indexOf('Firefox') !== -1 ? _Chess.web3.eth.accounts.slice(0, Math.floor(_Chess.web3.eth.accounts.length / 2)) : _Chess.web3.eth.accounts.slice(Math.floor(_Chess.web3.eth.accounts.length / 2), _Chess.web3.eth.accounts.length),\n\t\n\t    defaultAccount: _Chess.web3.eth.defaultAccount, selectedAccount: null,\n\t    selectedAccountName: null,\n\t\n\t    // Get ether balance with 4 digit precision\n\t    getBalance: function getBalance(account) {\n\t      if (_Chess.web3.eth.accounts.indexOf(account) !== -1) {\n\t        return _Chess.web3.fromWei(_Chess.web3.eth.getBalance(account), 'ether').toDigits(20, 3).toString(10);\n\t      }\n\t\n\t      return false;\n\t    },\n\t\n\t    getEloScore: function getEloScore(account) {\n\t      if (typeof account !== 'undefined' && account !== null) {\n\t        try {\n\t          return _Chess.Chess.getEloScore(account).toNumber();\n\t        } catch (e) {\n\t          return 100;\n\t        }\n\t      }\n\t      return 0;\n\t    },\n\t    getBlockie: function getBlockie(account) {\n\t      if (account) {\n\t        return {\n\t          'background-image': 'url(\\'' + blockies.create({\n\t            seed: account\n\t          }).toDataURL() + '\\')'\n\t        };\n\t      } else {\n\t        return {};\n\t      }\n\t    }\n\t  };\n\t  accounts.isSelectedAccount = function (account) {\n\t    return accounts.selectedAccount === account;\n\t  };\n\t  accounts.setSelectedAccount = function (account, name) {\n\t    accounts.selectedAccount = account;\n\t    if (name) {\n\t      accounts.selectedAccountName = name;\n\t    } else {\n\t      accounts.selectedAccountName = accounts.selectedAccount.substr(0, 7) + '...' + accounts.selectedAccount.substr(-7, 7);\n\t    }\n\t  };\n\t  accounts.selectOrCreateAccount = function ($event) {\n\t    $event.preventDefault();\n\t\n\t    if (typeof mist !== 'undefined') {\n\t      accounts.setSelectedAccount(mist.requestAccount());\n\t    } else {\n\t      jQuery('#overlay').show();\n\t      jQuery('#selectAccountLayer').show();\n\t    }\n\t  };\n\t  accounts.selectAccount = function (account, name) {\n\t    if (name) {\n\t      accounts.setSelectedAccount(account, name);\n\t    } else {\n\t      accounts.setSelectedAccount(account);\n\t    }\n\t    $('#selectAccountLayer').fadeOut();\n\t    $('#overlay').fadeOut();\n\t  };\n\t  return accounts;\n\t}).controller('accountsCtrl', function (accounts, $scope) {\n\t  $scope.accounts = accounts;\n\t}); /* global angular, mist, blockies */\n\t\n\t\n\tjQuery(document).ready(function ($) {\n\t  $('#overlay').click(function () {\n\t    $('#layers  div.layer').fadeOut();\n\t    $('#overlay').fadeOut();\n\t  });\n\t});\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Web3 Helper\r\n\t * Returns initialized web3 instance\r\n\t *\r\n\t * @author: U-Zyn Chua <chua@uzyn.com>\r\n\t */\r\n\tvar Web3 = __webpack_require__(21);\r\n\tvar web3;\r\n\tif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n\t web3 = new Web3(window.web3.currentProvider);\r\n\t} else {\r\n\t web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n\t}\r\n\t\n\tmodule.exports = {\n\t\"Auth\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"verifySig\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"}]).at(\"0x17e88bb6dab0b74d32a109cb85a691d22403e508\"),\n\t\"ELO\": web3.eth.contract([{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"abs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ELO.Scores storage\"},{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"setScore\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"ELO.Scores storage\"},{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ELO.Scores storage\"},{\"name\":\"player1\",\"type\":\"address\"},{\"name\":\"player2\",\"type\":\"address\"},{\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"recordResult\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"difference\",\"type\":\"int256\"},{\"name\":\"resultA\",\"type\":\"int256\"}],\"name\":\"getScoreChange\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"type\":\"function\"}]).at(\"0xa4874f20c069029ee4154cab035aa80468eb0692\"),\n\t\"ChessLogic\": web3.eth.contract([{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"newState\",\"type\":\"int8[128]\"},{\"name\":\"nextPlayerColor\",\"type\":\"int8\"}],\"name\":\"setState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"abs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"nextPlayerColor\",\"type\":\"int8\"}],\"name\":\"setupState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"boolToInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"},{\"name\":\"fromFigure\",\"type\":\"int8\"},{\"name\":\"toFigure\",\"type\":\"int8\"},{\"name\":\"movingPlayerColor\",\"type\":\"int8\"}],\"name\":\"validateMove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"direction\",\"type\":\"int8\"},{\"name\":\"start\",\"type\":\"int8\"}],\"name\":\"getFirstFigure\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"movingPlayerColor\",\"type\":\"int8\"}],\"name\":\"getOwnKing\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"},{\"name\":\"isWhite\",\"type\":\"bool\"}],\"name\":\"move\",\"outputs\":[],\"type\":\"function\"}]).at(\"0x929da938e8a88afd84082dbd593ec949639cd41c\"),\n\t\"Chess\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"openGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimWin\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"rejectCurrentPlayerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getEloScore\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"isGameEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"state\",\"type\":\"int8[128]\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"},{\"name\":\"sigState\",\"type\":\"bytes\"}],\"name\":\"moveFromState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"playAsWhite\",\"type\":\"bool\"},{\"name\":\"turnTime\",\"type\":\"uint256\"}],\"name\":\"initGame\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"getCurrentGameState\",\"outputs\":[{\"name\":\"\",\"type\":\"int8[128]\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"state\",\"type\":\"int8[128]\"},{\"name\":\"nextPlayer\",\"type\":\"address\"}],\"name\":\"setGameState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"head\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"confirmGameEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeoutEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"gamesOfPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeout\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"getWhitePlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"claimTimeoutEndedWithMove\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"verifySig\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOpenGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"Resign\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"offerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"player2Alias\",\"type\":\"string\"}],\"name\":\"joinGame\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamesOfPlayersHeads\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getGamesOfPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"games\",\"outputs\":[{\"name\":\"player1\",\"type\":\"address\"},{\"name\":\"player2\",\"type\":\"address\"},{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"player2Alias\",\"type\":\"string\"},{\"name\":\"nextPlayer\",\"type\":\"address\"},{\"name\":\"winner\",\"type\":\"address\"},{\"name\":\"ended\",\"type\":\"bool\"},{\"name\":\"pot\",\"type\":\"uint256\"},{\"name\":\"player1Winnings\",\"type\":\"uint256\"},{\"name\":\"player2Winnings\",\"type\":\"uint256\"},{\"name\":\"turnTime\",\"type\":\"uint256\"},{\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"name\":\"timeoutState\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"closePlayerGame\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[{\"name\":\"enableDebugging\",\"type\":\"bool\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"player1Alias\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"playerWhite\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"turnTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"GameInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"player1Alias\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"player2\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"player2Alias\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"playerWhite\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"GameJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"int8[128]\"}],\"name\":\"GameStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"Move\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"EloScoreUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeoutState\",\"type\":\"int8\"}],\"name\":\"GameTimeoutStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameDrawOfferRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value3\",\"type\":\"uint256\"}],\"name\":\"DebugInts\",\"type\":\"event\"}]).at(\"0x5b4e71e1be8436a1d46108f2f64a49394c668c60\"),\n\t\"TurnBasedGame\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"openGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimWin\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"rejectCurrentPlayerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"isGameEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"playAsWhite\",\"type\":\"bool\"},{\"name\":\"turnTime\",\"type\":\"uint256\"}],\"name\":\"initGame\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"head\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"confirmGameEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeoutEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"gamesOfPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeout\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOpenGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"Resign\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"offerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"player2Alias\",\"type\":\"string\"}],\"name\":\"joinGame\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamesOfPlayersHeads\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getGamesOfPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"games\",\"outputs\":[{\"name\":\"player1\",\"type\":\"address\"},{\"name\":\"player2\",\"type\":\"address\"},{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"player2Alias\",\"type\":\"string\"},{\"name\":\"nextPlayer\",\"type\":\"address\"},{\"name\":\"winner\",\"type\":\"address\"},{\"name\":\"ended\",\"type\":\"bool\"},{\"name\":\"pot\",\"type\":\"uint256\"},{\"name\":\"player1Winnings\",\"type\":\"uint256\"},{\"name\":\"player2Winnings\",\"type\":\"uint256\"},{\"name\":\"turnTime\",\"type\":\"uint256\"},{\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"name\":\"timeoutState\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"closePlayerGame\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[{\"name\":\"enableDebugging\",\"type\":\"bool\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeoutState\",\"type\":\"int8\"}],\"name\":\"GameTimeoutStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameDrawOfferRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value3\",\"type\":\"uint256\"}],\"name\":\"DebugInts\",\"type\":\"event\"}]).at(\"0x3443d685a09176c2cdd2c38a24c14b19382a3115\"),\n\tweb3: web3\n\t};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Web3 = __webpack_require__(22);\n\t\n\t// dont override global variable\n\tif (typeof window !== 'undefined' && typeof window.Web3 === 'undefined') {\n\t    window.Web3 = Web3;\n\t}\n\t\n\tmodule.exports = Web3;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file web3.js\n\t * @authors:\n\t *   Jeffrey Wilcke <jeff@ethdev.com>\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t *   Marian Oancea <marian@ethdev.com>\n\t *   Fabian Vogelsteller <fabian@ethdev.com>\n\t *   Gav Wood <g@ethdev.com>\n\t * @date 2014\n\t */\n\t\n\tvar RequestManager = __webpack_require__(23);\n\tvar Iban = __webpack_require__(66);\n\tvar Eth = __webpack_require__(67);\n\tvar DB = __webpack_require__(96);\n\tvar Shh = __webpack_require__(97);\n\tvar Net = __webpack_require__(98);\n\tvar Personal = __webpack_require__(99);\n\tvar Settings = __webpack_require__(100);\n\tvar version = __webpack_require__(101);\n\tvar utils = __webpack_require__(25);\n\tvar sha3 = __webpack_require__(27);\n\tvar extend = __webpack_require__(102);\n\tvar Batch = __webpack_require__(103);\n\tvar Property = __webpack_require__(70);\n\tvar HttpProvider = __webpack_require__(104);\n\tvar IpcProvider = __webpack_require__(106);\n\t\n\t\n\t\n\tfunction Web3 (provider) {\n\t    this._requestManager = new RequestManager(provider);\n\t    this.currentProvider = provider;\n\t    this.eth = new Eth(this);\n\t    this.db = new DB(this);\n\t    this.shh = new Shh(this);\n\t    this.net = new Net(this);\n\t    this.personal = new Personal(this);\n\t    this.settings = new Settings();\n\t    this.version = {\n\t        api: version.version\n\t    };\n\t    this.providers = {\n\t        HttpProvider: HttpProvider,\n\t        IpcProvider: IpcProvider\n\t    };\n\t    this._extend = extend(this);\n\t    this._extend({\n\t        properties: properties()\n\t    });\n\t}\n\t\n\t// expose providers on the class\n\tWeb3.providers = {\n\t    HttpProvider: HttpProvider,\n\t    IpcProvider: IpcProvider\n\t};\n\t\n\tWeb3.prototype.setProvider = function (provider) {\n\t    this._requestManager.setProvider(provider);\n\t    this.currentProvider = provider;\n\t};\n\t\n\tWeb3.prototype.reset = function (keepIsSyncing) {\n\t    this._requestManager.reset(keepIsSyncing);\n\t    this.settings = new Settings();\n\t};\n\t\n\tWeb3.prototype.toHex = utils.toHex;\n\tWeb3.prototype.toAscii = utils.toAscii;\n\tWeb3.prototype.toUtf8 = utils.toUtf8;\n\tWeb3.prototype.fromAscii = utils.fromAscii;\n\tWeb3.prototype.fromUtf8 = utils.fromUtf8;\n\tWeb3.prototype.toDecimal = utils.toDecimal;\n\tWeb3.prototype.fromDecimal = utils.fromDecimal;\n\tWeb3.prototype.toBigNumber = utils.toBigNumber;\n\tWeb3.prototype.toWei = utils.toWei;\n\tWeb3.prototype.fromWei = utils.fromWei;\n\tWeb3.prototype.isAddress = utils.isAddress;\n\tWeb3.prototype.isChecksumAddress = utils.isChecksumAddress;\n\tWeb3.prototype.toChecksumAddress = utils.toChecksumAddress;\n\tWeb3.prototype.isIBAN = utils.isIBAN;\n\tWeb3.prototype.sha3 = sha3;\n\t\n\t/**\n\t * Transforms direct icap to address\n\t */\n\tWeb3.prototype.fromICAP = function (icap) {\n\t    var iban = new Iban(icap);\n\t    return iban.address();\n\t};\n\t\n\tvar properties = function () {\n\t    return [\n\t        new Property({\n\t            name: 'version.node',\n\t            getter: 'web3_clientVersion'\n\t        }),\n\t        new Property({\n\t            name: 'version.network',\n\t            getter: 'net_version',\n\t            inputFormatter: utils.toDecimal\n\t        }),\n\t        new Property({\n\t            name: 'version.ethereum',\n\t            getter: 'eth_protocolVersion',\n\t            inputFormatter: utils.toDecimal\n\t        }),\n\t        new Property({\n\t            name: 'version.whisper',\n\t            getter: 'shh_version',\n\t            inputFormatter: utils.toDecimal\n\t        })\n\t    ];\n\t};\n\t\n\tWeb3.prototype.isConnected = function(){\n\t    return (this.currentProvider && this.currentProvider.isConnected());\n\t};\n\t\n\tWeb3.prototype.createBatch = function () {\n\t    return new Batch(this);\n\t};\n\t\n\tmodule.exports = Web3;\n\t\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file requestmanager.js\n\t * @author Jeffrey Wilcke <jeff@ethdev.com>\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @author Marian Oancea <marian@ethdev.com>\n\t * @author Fabian Vogelsteller <fabian@ethdev.com>\n\t * @author Gav Wood <g@ethdev.com>\n\t * @date 2014\n\t */\n\t\n\tvar Jsonrpc = __webpack_require__(24);\n\tvar utils = __webpack_require__(25);\n\tvar c = __webpack_require__(64);\n\tvar errors = __webpack_require__(65);\n\t\n\t/**\n\t * It's responsible for passing messages to providers\n\t * It's also responsible for polling the ethereum node for incoming messages\n\t * Default poll timeout is 1 second\n\t * Singleton\n\t */\n\tvar RequestManager = function (provider) {\n\t    this.provider = provider;\n\t    this.polls = {};\n\t    this.timeout = null;\n\t};\n\t\n\t/**\n\t * Should be used to synchronously send request\n\t *\n\t * @method send\n\t * @param {Object} data\n\t * @return {Object}\n\t */\n\tRequestManager.prototype.send = function (data) {\n\t    if (!this.provider) {\n\t        console.error(errors.InvalidProvider());\n\t        return null;\n\t    }\n\t\n\t    var payload = Jsonrpc.getInstance().toPayload(data.method, data.params);\n\t    var result = this.provider.send(payload);\n\t\n\t    if (!Jsonrpc.getInstance().isValidResponse(result)) {\n\t        throw errors.InvalidResponse(result);\n\t    }\n\t\n\t    return result.result;\n\t};\n\t\n\t/**\n\t * Should be used to asynchronously send request\n\t *\n\t * @method sendAsync\n\t * @param {Object} data\n\t * @param {Function} callback\n\t */\n\tRequestManager.prototype.sendAsync = function (data, callback) {\n\t    if (!this.provider) {\n\t        return callback(errors.InvalidProvider());\n\t    }\n\t\n\t    var payload = Jsonrpc.getInstance().toPayload(data.method, data.params);\n\t    this.provider.sendAsync(payload, function (err, result) {\n\t        if (err) {\n\t            return callback(err);\n\t        }\n\t        \n\t        if (!Jsonrpc.getInstance().isValidResponse(result)) {\n\t            return callback(errors.InvalidResponse(result));\n\t        }\n\t\n\t        callback(null, result.result);\n\t    });\n\t};\n\t\n\t/**\n\t * Should be called to asynchronously send batch request\n\t *\n\t * @method sendBatch\n\t * @param {Array} batch data\n\t * @param {Function} callback\n\t */\n\tRequestManager.prototype.sendBatch = function (data, callback) {\n\t    if (!this.provider) {\n\t        return callback(errors.InvalidProvider());\n\t    }\n\t\n\t    var payload = Jsonrpc.getInstance().toBatchPayload(data);\n\t\n\t    this.provider.sendAsync(payload, function (err, results) {\n\t        if (err) {\n\t            return callback(err);\n\t        }\n\t\n\t        if (!utils.isArray(results)) {\n\t            return callback(errors.InvalidResponse(results));\n\t        }\n\t\n\t        callback(err, results);\n\t    }); \n\t};\n\t\n\t/**\n\t * Should be used to set provider of request manager\n\t *\n\t * @method setProvider\n\t * @param {Object}\n\t */\n\tRequestManager.prototype.setProvider = function (p) {\n\t    this.provider = p;\n\t};\n\t\n\t/**\n\t * Should be used to start polling\n\t *\n\t * @method startPolling\n\t * @param {Object} data\n\t * @param {Number} pollId\n\t * @param {Function} callback\n\t * @param {Function} uninstall\n\t *\n\t * @todo cleanup number of params\n\t */\n\tRequestManager.prototype.startPolling = function (data, pollId, callback, uninstall) {\n\t    this.polls[pollId] = {data: data, id: pollId, callback: callback, uninstall: uninstall};\n\t\n\t\n\t    // start polling\n\t    if (!this.timeout) {\n\t        this.poll();\n\t    }\n\t};\n\t\n\t/**\n\t * Should be used to stop polling for filter with given id\n\t *\n\t * @method stopPolling\n\t * @param {Number} pollId\n\t */\n\tRequestManager.prototype.stopPolling = function (pollId) {\n\t    delete this.polls[pollId];\n\t\n\t    // stop polling\n\t    if(Object.keys(this.polls).length === 0 && this.timeout) {\n\t        clearTimeout(this.timeout);\n\t        this.timeout = null;\n\t    }\n\t};\n\t\n\t/**\n\t * Should be called to reset the polling mechanism of the request manager\n\t *\n\t * @method reset\n\t */\n\tRequestManager.prototype.reset = function (keepIsSyncing) {\n\t    /*jshint maxcomplexity:5 */\n\t\n\t    for (var key in this.polls) {\n\t        // remove all polls, except sync polls,\n\t        // they need to be removed manually by calling syncing.stopWatching()\n\t        if(!keepIsSyncing || key.indexOf('syncPoll_') === -1) {\n\t            this.polls[key].uninstall();\n\t            delete this.polls[key];\n\t        }\n\t    }\n\t\n\t    // stop polling\n\t    if(Object.keys(this.polls).length === 0 && this.timeout) {\n\t        clearTimeout(this.timeout);\n\t        this.timeout = null;\n\t    }\n\t};\n\t\n\t/**\n\t * Should be called to poll for changes on filter with given id\n\t *\n\t * @method poll\n\t */\n\tRequestManager.prototype.poll = function () {\n\t    /*jshint maxcomplexity: 6 */\n\t    this.timeout = setTimeout(this.poll.bind(this), c.ETH_POLLING_TIMEOUT);\n\t\n\t    if (Object.keys(this.polls).length === 0) {\n\t        return;\n\t    }\n\t\n\t    if (!this.provider) {\n\t        console.error(errors.InvalidProvider());\n\t        return;\n\t    }\n\t\n\t    var pollsData = [];\n\t    var pollsIds = [];\n\t    for (var key in this.polls) {\n\t        pollsData.push(this.polls[key].data);\n\t        pollsIds.push(key);\n\t    }\n\t\n\t    if (pollsData.length === 0) {\n\t        return;\n\t    }\n\t\n\t    var payload = Jsonrpc.getInstance().toBatchPayload(pollsData);\n\t    \n\t    // map the request id to they poll id\n\t    var pollsIdMap = {};\n\t    payload.forEach(function(load, index){\n\t        pollsIdMap[load.id] = pollsIds[index];\n\t    });\n\t\n\t\n\t    var self = this;\n\t    this.provider.sendAsync(payload, function (error, results) {\n\t\n\t\n\t        // TODO: console log?\n\t        if (error) {\n\t            return;\n\t        }\n\t\n\t        if (!utils.isArray(results)) {\n\t            throw errors.InvalidResponse(results);\n\t        }\n\t        results.map(function (result) {\n\t            var id = pollsIdMap[result.id];\n\t\n\t            // make sure the filter is still installed after arrival of the request\n\t            if (self.polls[id]) {\n\t                result.callback = self.polls[id].callback;\n\t                return result;\n\t            } else\n\t                return false;\n\t        }).filter(function (result) {\n\t            return !!result; \n\t        }).filter(function (result) {\n\t            var valid = Jsonrpc.getInstance().isValidResponse(result);\n\t            if (!valid) {\n\t                result.callback(errors.InvalidResponse(result));\n\t            }\n\t            return valid;\n\t        }).forEach(function (result) {\n\t            result.callback(null, result.result);\n\t        });\n\t    });\n\t};\n\t\n\tmodule.exports = RequestManager;\n\t\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file jsonrpc.js\n\t * @authors:\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar Jsonrpc = function () {\n\t    // singleton pattern\n\t    if (arguments.callee._singletonInstance) {\n\t        return arguments.callee._singletonInstance;\n\t    }\n\t    arguments.callee._singletonInstance = this;\n\t\n\t    this.messageId = 1;\n\t};\n\t\n\t/**\n\t * @return {Jsonrpc} singleton\n\t */\n\tJsonrpc.getInstance = function () {\n\t    var instance = new Jsonrpc();\n\t    return instance;\n\t};\n\t\n\t/**\n\t * Should be called to valid json create payload object\n\t *\n\t * @method toPayload\n\t * @param {Function} method of jsonrpc call, required\n\t * @param {Array} params, an array of method params, optional\n\t * @returns {Object} valid jsonrpc payload object\n\t */\n\tJsonrpc.prototype.toPayload = function (method, params) {\n\t    if (!method)\n\t        console.error('jsonrpc method should be specified!');\n\t\n\t    return {\n\t        jsonrpc: '2.0',\n\t        method: method,\n\t        params: params || [],\n\t        id: this.messageId++\n\t    };\n\t};\n\t\n\t/**\n\t * Should be called to check if jsonrpc response is valid\n\t *\n\t * @method isValidResponse\n\t * @param {Object}\n\t * @returns {Boolean} true if response is valid, otherwise false\n\t */\n\tJsonrpc.prototype.isValidResponse = function (response) {\n\t    return !!response &&\n\t        !response.error &&\n\t        response.jsonrpc === '2.0' &&\n\t        typeof response.id === 'number' &&\n\t        response.result !== undefined; // only undefined is not valid json object\n\t};\n\t\n\t/**\n\t * Should be called to create batch payload object\n\t *\n\t * @method toBatchPayload\n\t * @param {Array} messages, an array of objects with method (required) and params (optional) fields\n\t * @returns {Array} batch payload\n\t */\n\tJsonrpc.prototype.toBatchPayload = function (messages) {\n\t    var self = this;\n\t    return messages.map(function (message) {\n\t        return self.toPayload(message.method, message.params);\n\t    });\n\t};\n\t\n\tmodule.exports = Jsonrpc;\n\t\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file utils.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\t/**\n\t * Utils\n\t *\n\t * @module utils\n\t */\n\t\n\t/**\n\t * Utility functions\n\t *\n\t * @class [utils] utils\n\t * @constructor\n\t */\n\t\n\t\n\tvar BigNumber = __webpack_require__(26);\n\tvar sha3 = __webpack_require__(27);\n\tvar utf8 = __webpack_require__(62);\n\t\n\tvar unitMap = {\n\t    'noether':      '0',    \n\t    'wei':          '1',\n\t    'kwei':         '1000',\n\t    'Kwei':         '1000',\n\t    'babbage':      '1000',\n\t    'femtoether':   '1000',\n\t    'mwei':         '1000000',\n\t    'Mwei':         '1000000',\n\t    'lovelace':     '1000000',\n\t    'picoether':    '1000000',\n\t    'gwei':         '1000000000',\n\t    'Gwei':         '1000000000',\n\t    'shannon':      '1000000000',\n\t    'nanoether':    '1000000000',\n\t    'nano':         '1000000000',\n\t    'szabo':        '1000000000000',\n\t    'microether':   '1000000000000',\n\t    'micro':        '1000000000000',\n\t    'finney':       '1000000000000000',\n\t    'milliether':    '1000000000000000',\n\t    'milli':         '1000000000000000',\n\t    'ether':        '1000000000000000000',\n\t    'kether':       '1000000000000000000000',\n\t    'grand':        '1000000000000000000000',\n\t    'mether':       '1000000000000000000000000',\n\t    'gether':       '1000000000000000000000000000',\n\t    'tether':       '1000000000000000000000000000000'\n\t};\n\t\n\t/**\n\t * Should be called to pad string to expected length\n\t *\n\t * @method padLeft\n\t * @param {String} string to be padded\n\t * @param {Number} characters that result string should have\n\t * @param {String} sign, by default 0\n\t * @returns {String} right aligned string\n\t */\n\tvar padLeft = function (string, chars, sign) {\n\t    return new Array(chars - string.length + 1).join(sign ? sign : \"0\") + string;\n\t};\n\t\n\t/**\n\t * Should be called to pad string to expected length\n\t *\n\t * @method padRight\n\t * @param {String} string to be padded\n\t * @param {Number} characters that result string should have\n\t * @param {String} sign, by default 0\n\t * @returns {String} right aligned string\n\t */\n\tvar padRight = function (string, chars, sign) {\n\t    return string + (new Array(chars - string.length + 1).join(sign ? sign : \"0\"));\n\t};\n\t\n\t/**\n\t * Should be called to get utf8 from it's hex representation\n\t *\n\t * @method toUtf8\n\t * @param {String} string in hex\n\t * @returns {String} ascii string representation of hex value\n\t */\n\tvar toUtf8 = function(hex) {\n\t// Find termination\n\t    var str = \"\";\n\t    var i = 0, l = hex.length;\n\t    if (hex.substring(0, 2) === '0x') {\n\t        i = 2;\n\t    }\n\t    for (; i < l; i+=2) {\n\t        var code = parseInt(hex.substr(i, 2), 16);\n\t        if (code === 0)\n\t            break;\n\t        str += String.fromCharCode(code);\n\t    }\n\t\n\t    return utf8.decode(str);\n\t};\n\t\n\t/**\n\t * Should be called to get ascii from it's hex representation\n\t *\n\t * @method toAscii\n\t * @param {String} string in hex\n\t * @returns {String} ascii string representation of hex value\n\t */\n\tvar toAscii = function(hex) {\n\t// Find termination\n\t    var str = \"\";\n\t    var i = 0, l = hex.length;\n\t    if (hex.substring(0, 2) === '0x') {\n\t        i = 2;\n\t    }\n\t    for (; i < l; i+=2) {\n\t        var code = parseInt(hex.substr(i, 2), 16);\n\t        str += String.fromCharCode(code);\n\t    }\n\t\n\t    return str;\n\t};\n\t\n\t/**\n\t * Should be called to get hex representation (prefixed by 0x) of utf8 string\n\t *\n\t * @method fromUtf8\n\t * @param {String} string\n\t * @param {Number} optional padding\n\t * @returns {String} hex representation of input string\n\t */\n\tvar fromUtf8 = function(str) {\n\t    str = utf8.encode(str);\n\t    var hex = \"\";\n\t    for(var i = 0; i < str.length; i++) {\n\t        var code = str.charCodeAt(i);\n\t        if (code === 0)\n\t            break;\n\t        var n = code.toString(16);\n\t        hex += n.length < 2 ? '0' + n : n;\n\t    }\n\t\n\t    return \"0x\" + hex;\n\t};\n\t\n\t/**\n\t * Should be called to get hex representation (prefixed by 0x) of ascii string\n\t *\n\t * @method fromAscii\n\t * @param {String} string\n\t * @param {Number} optional padding\n\t * @returns {String} hex representation of input string\n\t */\n\tvar fromAscii = function(str) {\n\t    var hex = \"\";\n\t    for(var i = 0; i < str.length; i++) {\n\t        var code = str.charCodeAt(i);\n\t        var n = code.toString(16);\n\t        hex += n.length < 2 ? '0' + n : n;\n\t    }\n\t\n\t    return \"0x\" + hex;\n\t};\n\t\n\t/**\n\t * Should be used to create full function/event name from json abi\n\t *\n\t * @method transformToFullName\n\t * @param {Object} json-abi\n\t * @return {String} full fnction/event name\n\t */\n\tvar transformToFullName = function (json) {\n\t    if (json.name.indexOf('(') !== -1) {\n\t        return json.name;\n\t    }\n\t\n\t    var typeName = json.inputs.map(function(i){return i.type; }).join();\n\t    return json.name + '(' + typeName + ')';\n\t};\n\t\n\t/**\n\t * Should be called to get display name of contract function\n\t *\n\t * @method extractDisplayName\n\t * @param {String} name of function/event\n\t * @returns {String} display name for function/event eg. multiply(uint256) -> multiply\n\t */\n\tvar extractDisplayName = function (name) {\n\t    var length = name.indexOf('(');\n\t    return length !== -1 ? name.substr(0, length) : name;\n\t};\n\t\n\t/// @returns overloaded part of function/event name\n\tvar extractTypeName = function (name) {\n\t    /// TODO: make it invulnerable\n\t    var length = name.indexOf('(');\n\t    return length !== -1 ? name.substr(length + 1, name.length - 1 - (length + 1)).replace(' ', '') : \"\";\n\t};\n\t\n\t/**\n\t * Converts value to it's decimal representation in string\n\t *\n\t * @method toDecimal\n\t * @param {String|Number|BigNumber}\n\t * @return {String}\n\t */\n\tvar toDecimal = function (value) {\n\t    return toBigNumber(value).toNumber();\n\t};\n\t\n\t/**\n\t * Converts value to it's hex representation\n\t *\n\t * @method fromDecimal\n\t * @param {String|Number|BigNumber}\n\t * @return {String}\n\t */\n\tvar fromDecimal = function (value) {\n\t    var number = toBigNumber(value);\n\t    var result = number.toString(16);\n\t\n\t    return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n\t};\n\t\n\t/**\n\t * Auto converts any given value into it's hex representation.\n\t *\n\t * And even stringifys objects before.\n\t *\n\t * @method toHex\n\t * @param {String|Number|BigNumber|Object}\n\t * @return {String}\n\t */\n\tvar toHex = function (val) {\n\t    /*jshint maxcomplexity: 8 */\n\t\n\t    if (isBoolean(val))\n\t        return fromDecimal(+val);\n\t\n\t    if (isBigNumber(val))\n\t        return fromDecimal(val);\n\t\n\t    if (isObject(val))\n\t        return fromUtf8(JSON.stringify(val));\n\t\n\t    // if its a negative number, pass it through fromDecimal\n\t    if (isString(val)) {\n\t        if (val.indexOf('-0x') === 0)\n\t            return fromDecimal(val);\n\t        else if(val.indexOf('0x') === 0)\n\t            return val;\n\t        else if (!isFinite(val))\n\t            return fromAscii(val);\n\t    }\n\t\n\t    return fromDecimal(val);\n\t};\n\t\n\t/**\n\t * Returns value of unit in Wei\n\t *\n\t * @method getValueOfUnit\n\t * @param {String} unit the unit to convert to, default ether\n\t * @returns {BigNumber} value of the unit (in Wei)\n\t * @throws error if the unit is not correct:w\n\t */\n\tvar getValueOfUnit = function (unit) {\n\t    unit = unit ? unit.toLowerCase() : 'ether';\n\t    var unitValue = unitMap[unit];\n\t    if (unitValue === undefined) {\n\t        throw new Error('This unit doesn\\'t exists, please use the one of the following units' + JSON.stringify(unitMap, null, 2));\n\t    }\n\t    return new BigNumber(unitValue, 10);\n\t};\n\t\n\t/**\n\t * Takes a number of wei and converts it to any other ether unit.\n\t *\n\t * Possible units are:\n\t *   SI Short   SI Full        Effigy       Other\n\t * - kwei       femtoether     babbage\n\t * - mwei       picoether      lovelace\n\t * - gwei       nanoether      shannon      nano\n\t * - --         microether     szabo        micro\n\t * - --         milliether     finney       milli\n\t * - ether      --             --\n\t * - kether                    --           grand\n\t * - mether\n\t * - gether\n\t * - tether\n\t *\n\t * @method fromWei\n\t * @param {Number|String} number can be a number, number string or a HEX of a decimal\n\t * @param {String} unit the unit to convert to, default ether\n\t * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n\t*/\n\tvar fromWei = function(number, unit) {\n\t    var returnValue = toBigNumber(number).dividedBy(getValueOfUnit(unit));\n\t\n\t    return isBigNumber(number) ? returnValue : returnValue.toString(10);\n\t};\n\t\n\t/**\n\t * Takes a number of a unit and converts it to wei.\n\t *\n\t * Possible units are:\n\t *   SI Short   SI Full        Effigy       Other\n\t * - kwei       femtoether     babbage\n\t * - mwei       picoether      lovelace\n\t * - gwei       nanoether      shannon      nano\n\t * - --         microether     szabo        micro\n\t * - --         microether     szabo        micro\n\t * - --         milliether     finney       milli\n\t * - ether      --             --\n\t * - kether                    --           grand\n\t * - mether\n\t * - gether\n\t * - tether\n\t *\n\t * @method toWei\n\t * @param {Number|String|BigNumber} number can be a number, number string or a HEX of a decimal\n\t * @param {String} unit the unit to convert from, default ether\n\t * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n\t*/\n\tvar toWei = function(number, unit) {\n\t    var returnValue = toBigNumber(number).times(getValueOfUnit(unit));\n\t\n\t    return isBigNumber(number) ? returnValue : returnValue.toString(10);\n\t};\n\t\n\t/**\n\t * Takes an input and transforms it into an bignumber\n\t *\n\t * @method toBigNumber\n\t * @param {Number|String|BigNumber} a number, string, HEX string or BigNumber\n\t * @return {BigNumber} BigNumber\n\t*/\n\tvar toBigNumber = function(number) {\n\t    /*jshint maxcomplexity:5 */\n\t    number = number || 0;\n\t    if (isBigNumber(number))\n\t        return number;\n\t\n\t    if (isString(number) && (number.indexOf('0x') === 0 || number.indexOf('-0x') === 0)) {\n\t        return new BigNumber(number.replace('0x',''), 16);\n\t    }\n\t\n\t    return new BigNumber(number.toString(10), 10);\n\t};\n\t\n\t/**\n\t * Takes and input transforms it into bignumber and if it is negative value, into two's complement\n\t *\n\t * @method toTwosComplement\n\t * @param {Number|String|BigNumber}\n\t * @return {BigNumber}\n\t */\n\tvar toTwosComplement = function (number) {\n\t    var bigNumber = toBigNumber(number);\n\t    if (bigNumber.lessThan(0)) {\n\t        return new BigNumber(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16).plus(bigNumber).plus(1);\n\t    }\n\t    return bigNumber;\n\t};\n\t\n\t/**\n\t * Checks if the given string is strictly an address\n\t *\n\t * @method isStrictAddress\n\t * @param {String} address the given HEX adress\n\t * @return {Boolean}\n\t*/\n\tvar isStrictAddress = function (address) {\n\t    return /^0x[0-9a-f]{40}$/i.test(address);\n\t};\n\t\n\t/**\n\t * Checks if the given string is an address\n\t *\n\t * @method isAddress\n\t * @param {String} address the given HEX adress\n\t * @return {Boolean}\n\t*/\n\tvar isAddress = function (address) {\n\t    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n\t        // check if it has the basic requirements of an address\n\t        return false;\n\t    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n\t        // If it's all small caps or all all caps, return true\n\t        return true;\n\t    } else {\n\t        // Otherwise check each case\n\t        return isChecksumAddress(address);\n\t    }\n\t};\n\t\n\t\n\t\n\t/**\n\t * Checks if the given string is a checksummed address\n\t *\n\t * @method isChecksumAddress\n\t * @param {String} address the given HEX adress\n\t * @return {Boolean}\n\t*/\n\tvar isChecksumAddress = function (address) {    \n\t    // Check each case\n\t    address = address.replace('0x','');\n\t    var addressHash = sha3(address.toLowerCase());\n\t\n\t    for (var i = 0; i < 40; i++ ) { \n\t        // the nth letter should be uppercase if the nth digit of casemap is 1\n\t        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;    \n\t};\n\t\n\t\n\t\n\t/**\n\t * Makes a checksum address\n\t *\n\t * @method toChecksumAddress\n\t * @param {String} address the given HEX adress\n\t * @return {String}\n\t*/\n\tvar toChecksumAddress = function (address) { \n\t    if (typeof address === 'undefined') return '';\n\t\n\t    address = address.toLowerCase().replace('0x','');\n\t    var addressHash = sha3(address);\n\t    var checksumAddress = '0x';\n\t\n\t    for (var i = 0; i < address.length; i++ ) { \n\t        // If ith character is 9 to f then make it uppercase \n\t        if (parseInt(addressHash[i], 16) > 7) {\n\t          checksumAddress += address[i].toUpperCase();\n\t        } else {\n\t            checksumAddress += address[i];\n\t        }\n\t    }\n\t    return checksumAddress;\n\t};\n\t\n\t/**\n\t * Transforms given string to valid 20 bytes-length addres with 0x prefix\n\t *\n\t * @method toAddress\n\t * @param {String} address\n\t * @return {String} formatted address\n\t */\n\tvar toAddress = function (address) {\n\t    if (isStrictAddress(address)) {\n\t        return address;\n\t    }\n\t\n\t    if (/^[0-9a-f]{40}$/.test(address)) {\n\t        return '0x' + address;\n\t    }\n\t\n\t    return '0x' + padLeft(toHex(address).substr(2), 40);\n\t};\n\t\n\t/**\n\t * Returns true if object is BigNumber, otherwise false\n\t *\n\t * @method isBigNumber\n\t * @param {Object}\n\t * @return {Boolean}\n\t */\n\tvar isBigNumber = function (object) {\n\t    return object instanceof BigNumber ||\n\t        (object && object.constructor && object.constructor.name === 'BigNumber');\n\t};\n\t\n\t/**\n\t * Returns true if object is string, otherwise false\n\t *\n\t * @method isString\n\t * @param {Object}\n\t * @return {Boolean}\n\t */\n\tvar isString = function (object) {\n\t    return typeof object === 'string' ||\n\t        (object && object.constructor && object.constructor.name === 'String');\n\t};\n\t\n\t/**\n\t * Returns true if object is function, otherwise false\n\t *\n\t * @method isFunction\n\t * @param {Object}\n\t * @return {Boolean}\n\t */\n\tvar isFunction = function (object) {\n\t    return typeof object === 'function';\n\t};\n\t\n\t/**\n\t * Returns true if object is Objet, otherwise false\n\t *\n\t * @method isObject\n\t * @param {Object}\n\t * @return {Boolean}\n\t */\n\tvar isObject = function (object) {\n\t    return typeof object === 'object';\n\t};\n\t\n\t/**\n\t * Returns true if object is boolean, otherwise false\n\t *\n\t * @method isBoolean\n\t * @param {Object}\n\t * @return {Boolean}\n\t */\n\tvar isBoolean = function (object) {\n\t    return typeof object === 'boolean';\n\t};\n\t\n\t/**\n\t * Returns true if object is array, otherwise false\n\t *\n\t * @method isArray\n\t * @param {Object}\n\t * @return {Boolean}\n\t */\n\tvar isArray = function (object) {\n\t    return object instanceof Array;\n\t};\n\t\n\t/**\n\t * Returns true if given string is valid json object\n\t *\n\t * @method isJson\n\t * @param {String}\n\t * @return {Boolean}\n\t */\n\tvar isJson = function (str) {\n\t    try {\n\t        return !!JSON.parse(str);\n\t    } catch (e) {\n\t        return false;\n\t    }\n\t};\n\t\n\tmodule.exports = {\n\t    padLeft: padLeft,\n\t    padRight: padRight,\n\t    toHex: toHex,\n\t    toDecimal: toDecimal,\n\t    fromDecimal: fromDecimal,\n\t    toUtf8: toUtf8,\n\t    toAscii: toAscii,\n\t    fromUtf8: fromUtf8,\n\t    fromAscii: fromAscii,\n\t    transformToFullName: transformToFullName,\n\t    extractDisplayName: extractDisplayName,\n\t    extractTypeName: extractTypeName,\n\t    toWei: toWei,\n\t    fromWei: fromWei,\n\t    toBigNumber: toBigNumber,\n\t    toTwosComplement: toTwosComplement,\n\t    toAddress: toAddress,\n\t    isBigNumber: isBigNumber,\n\t    isStrictAddress: isStrictAddress,\n\t    isAddress: isAddress,\n\t    isChecksumAddress: isChecksumAddress,\n\t    toChecksumAddress: toChecksumAddress,\n\t    isFunction: isFunction,\n\t    isString: isString,\n\t    isObject: isObject,\n\t    isBoolean: isBoolean,\n\t    isArray: isArray,\n\t    isJson: isJson\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*! bignumber.js v2.0.7 https://github.com/MikeMcl/bignumber.js/LICENCE */\r\n\t\r\n\t;(function (global) {\r\n\t    'use strict';\r\n\t\r\n\t    /*\r\n\t      bignumber.js v2.0.7\r\n\t      A JavaScript library for arbitrary-precision arithmetic.\r\n\t      https://github.com/MikeMcl/bignumber.js\r\n\t      Copyright (c) 2015 Michael Mclaughlin <M8ch88l@gmail.com>\r\n\t      MIT Expat Licence\r\n\t    */\r\n\t\r\n\t\r\n\t    var BigNumber, crypto, parseNumeric,\r\n\t        isNumeric = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\t        mathceil = Math.ceil,\r\n\t        mathfloor = Math.floor,\r\n\t        notBool = ' not a boolean or binary digit',\r\n\t        roundingMode = 'rounding mode',\r\n\t        tooManyDigits = 'number type has more than 15 significant digits',\r\n\t        ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',\r\n\t        BASE = 1e14,\r\n\t        LOG_BASE = 14,\r\n\t        MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n\t        // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n\t        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n\t        SQRT_BASE = 1e7,\r\n\t\r\n\t        /*\r\n\t         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n\t         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an\r\n\t         * exception is thrown (if ERRORS is true).\r\n\t         */\r\n\t        MAX = 1E9;                                   // 0 to MAX_INT32\r\n\t\r\n\t\r\n\t    /*\r\n\t     * Create and return a BigNumber constructor.\r\n\t     */\r\n\t    function another(configObj) {\r\n\t        var div,\r\n\t\r\n\t            // id tracks the caller function, so its name can be included in error messages.\r\n\t            id = 0,\r\n\t            P = BigNumber.prototype,\r\n\t            ONE = new BigNumber(1),\r\n\t\r\n\t\r\n\t            /********************************* EDITABLE DEFAULTS **********************************/\r\n\t\r\n\t\r\n\t            /*\r\n\t             * The default values below must be integers within the inclusive ranges stated.\r\n\t             * The values can also be changed at run-time using BigNumber.config.\r\n\t             */\r\n\t\r\n\t            // The maximum number of decimal places for operations involving division.\r\n\t            DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\t\r\n\t            /*\r\n\t             * The rounding mode used when rounding to the above decimal places, and when using\r\n\t             * toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n\t             * UP         0 Away from zero.\r\n\t             * DOWN       1 Towards zero.\r\n\t             * CEIL       2 Towards +Infinity.\r\n\t             * FLOOR      3 Towards -Infinity.\r\n\t             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n\t             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n\t             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n\t             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n\t             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n\t             */\r\n\t            ROUNDING_MODE = 4,                       // 0 to 8\r\n\t\r\n\t            // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\t\r\n\t            // The exponent value at and beneath which toString returns exponential notation.\r\n\t            // Number type: -7\r\n\t            TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\t\r\n\t            // The exponent value at and above which toString returns exponential notation.\r\n\t            // Number type: 21\r\n\t            TO_EXP_POS = 21,                         // 0 to MAX\r\n\t\r\n\t            // RANGE : [MIN_EXP, MAX_EXP]\r\n\t\r\n\t            // The minimum exponent value, beneath which underflow to zero occurs.\r\n\t            // Number type: -324  (5e-324)\r\n\t            MIN_EXP = -1e7,                          // -1 to -MAX\r\n\t\r\n\t            // The maximum exponent value, above which overflow to Infinity occurs.\r\n\t            // Number type:  308  (1.7976931348623157e+308)\r\n\t            // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n\t            MAX_EXP = 1e7,                           // 1 to MAX\r\n\t\r\n\t            // Whether BigNumber Errors are ever thrown.\r\n\t            ERRORS = true,                           // true or false\r\n\t\r\n\t            // Change to intValidatorNoErrors if ERRORS is false.\r\n\t            isValidInt = intValidatorWithErrors,     // intValidatorWithErrors/intValidatorNoErrors\r\n\t\r\n\t            // Whether to use cryptographically-secure random number generation, if available.\r\n\t            CRYPTO = false,                          // true or false\r\n\t\r\n\t            /*\r\n\t             * The modulo mode used when calculating the modulus: a mod n.\r\n\t             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n\t             * The remainder (r) is calculated as: r = a - n * q.\r\n\t             *\r\n\t             * UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n\t             * DOWN      1 The remainder has the same sign as the dividend.\r\n\t             *             This modulo mode is commonly known as 'truncated division' and is\r\n\t             *             equivalent to (a % n) in JavaScript.\r\n\t             * FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n\t             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n\t             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n\t             *             The remainder is always positive.\r\n\t             *\r\n\t             * The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n\t             * modes are commonly used for the modulus operation.\r\n\t             * Although the other rounding modes can also be used, they may not give useful results.\r\n\t             */\r\n\t            MODULO_MODE = 1,                         // 0 to 9\r\n\t\r\n\t            // The maximum number of significant digits of the result of the toPower operation.\r\n\t            // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n\t            POW_PRECISION = 100,                     // 0 to MAX\r\n\t\r\n\t            // The format specification used by the BigNumber.prototype.toFormat method.\r\n\t            FORMAT = {\r\n\t                decimalSeparator: '.',\r\n\t                groupSeparator: ',',\r\n\t                groupSize: 3,\r\n\t                secondaryGroupSize: 0,\r\n\t                fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n\t                fractionGroupSize: 0\r\n\t            };\r\n\t\r\n\t\r\n\t        /******************************************************************************************/\r\n\t\r\n\t\r\n\t        // CONSTRUCTOR\r\n\t\r\n\t\r\n\t        /*\r\n\t         * The BigNumber constructor and exported function.\r\n\t         * Create and return a new instance of a BigNumber object.\r\n\t         *\r\n\t         * n {number|string|BigNumber} A numeric value.\r\n\t         * [b] {number} The base of n. Integer, 2 to 64 inclusive.\r\n\t         */\r\n\t        function BigNumber( n, b ) {\r\n\t            var c, e, i, num, len, str,\r\n\t                x = this;\r\n\t\r\n\t            // Enable constructor usage without new.\r\n\t            if ( !( x instanceof BigNumber ) ) {\r\n\t\r\n\t                // 'BigNumber() constructor call without new: {n}'\r\n\t                if (ERRORS) raise( 26, 'constructor call without new', n );\r\n\t                return new BigNumber( n, b );\r\n\t            }\r\n\t\r\n\t            // 'new BigNumber() base not an integer: {b}'\r\n\t            // 'new BigNumber() base out of range: {b}'\r\n\t            if ( b == null || !isValidInt( b, 2, 64, id, 'base' ) ) {\r\n\t\r\n\t                // Duplicate.\r\n\t                if ( n instanceof BigNumber ) {\r\n\t                    x.s = n.s;\r\n\t                    x.e = n.e;\r\n\t                    x.c = ( n = n.c ) ? n.slice() : n;\r\n\t                    id = 0;\r\n\t                    return;\r\n\t                }\r\n\t\r\n\t                if ( ( num = typeof n == 'number' ) && n * 0 == 0 ) {\r\n\t                    x.s = 1 / n < 0 ? ( n = -n, -1 ) : 1;\r\n\t\r\n\t                    // Fast path for integers.\r\n\t                    if ( n === ~~n ) {\r\n\t                        for ( e = 0, i = n; i >= 10; i /= 10, e++ );\r\n\t                        x.e = e;\r\n\t                        x.c = [n];\r\n\t                        id = 0;\r\n\t                        return;\r\n\t                    }\r\n\t\r\n\t                    str = n + '';\r\n\t                } else {\r\n\t                    if ( !isNumeric.test( str = n + '' ) ) return parseNumeric( x, str, num );\r\n\t                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n\t                }\r\n\t            } else {\r\n\t                b = b | 0;\r\n\t                str = n + '';\r\n\t\r\n\t                // Ensure return value is rounded to DECIMAL_PLACES as with other bases.\r\n\t                // Allow exponential notation to be used with base 10 argument.\r\n\t                if ( b == 10 ) {\r\n\t                    x = new BigNumber( n instanceof BigNumber ? n : str );\r\n\t                    return round( x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE );\r\n\t                }\r\n\t\r\n\t                // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n\t                // Any number in exponential form will fail due to the [Ee][+-].\r\n\t                if ( ( num = typeof n == 'number' ) && n * 0 != 0 ||\r\n\t                  !( new RegExp( '^-?' + ( c = '[' + ALPHABET.slice( 0, b ) + ']+' ) +\r\n\t                    '(?:\\\\.' + c + ')?$',b < 37 ? 'i' : '' ) ).test(str) ) {\r\n\t                    return parseNumeric( x, str, num, b );\r\n\t                }\r\n\t\r\n\t                if (num) {\r\n\t                    x.s = 1 / n < 0 ? ( str = str.slice(1), -1 ) : 1;\r\n\t\r\n\t                    if ( ERRORS && str.replace( /^0\\.0*|\\./, '' ).length > 15 ) {\r\n\t\r\n\t                        // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n\t                        raise( id, tooManyDigits, n );\r\n\t                    }\r\n\t\r\n\t                    // Prevent later check for length on converted number.\r\n\t                    num = false;\r\n\t                } else {\r\n\t                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n\t                }\r\n\t\r\n\t                str = convertBase( str, 10, b, x.s );\r\n\t            }\r\n\t\r\n\t            // Decimal point?\r\n\t            if ( ( e = str.indexOf('.') ) > -1 ) str = str.replace( '.', '' );\r\n\t\r\n\t            // Exponential form?\r\n\t            if ( ( i = str.search( /e/i ) ) > 0 ) {\r\n\t\r\n\t                // Determine exponent.\r\n\t                if ( e < 0 ) e = i;\r\n\t                e += +str.slice( i + 1 );\r\n\t                str = str.substring( 0, i );\r\n\t            } else if ( e < 0 ) {\r\n\t\r\n\t                // Integer.\r\n\t                e = str.length;\r\n\t            }\r\n\t\r\n\t            // Determine leading zeros.\r\n\t            for ( i = 0; str.charCodeAt(i) === 48; i++ );\r\n\t\r\n\t            // Determine trailing zeros.\r\n\t            for ( len = str.length; str.charCodeAt(--len) === 48; );\r\n\t            str = str.slice( i, len + 1 );\r\n\t\r\n\t            if (str) {\r\n\t                len = str.length;\r\n\t\r\n\t                // Disallow numbers with over 15 significant digits if number type.\r\n\t                // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n\t                if ( num && ERRORS && len > 15 ) raise( id, tooManyDigits, x.s * n );\r\n\t\r\n\t                e = e - i - 1;\r\n\t\r\n\t                 // Overflow?\r\n\t                if ( e > MAX_EXP ) {\r\n\t\r\n\t                    // Infinity.\r\n\t                    x.c = x.e = null;\r\n\t\r\n\t                // Underflow?\r\n\t                } else if ( e < MIN_EXP ) {\r\n\t\r\n\t                    // Zero.\r\n\t                    x.c = [ x.e = 0 ];\r\n\t                } else {\r\n\t                    x.e = e;\r\n\t                    x.c = [];\r\n\t\r\n\t                    // Transform base\r\n\t\r\n\t                    // e is the base 10 exponent.\r\n\t                    // i is where to slice str to get the first element of the coefficient array.\r\n\t                    i = ( e + 1 ) % LOG_BASE;\r\n\t                    if ( e < 0 ) i += LOG_BASE;\r\n\t\r\n\t                    if ( i < len ) {\r\n\t                        if (i) x.c.push( +str.slice( 0, i ) );\r\n\t\r\n\t                        for ( len -= LOG_BASE; i < len; ) {\r\n\t                            x.c.push( +str.slice( i, i += LOG_BASE ) );\r\n\t                        }\r\n\t\r\n\t                        str = str.slice(i);\r\n\t                        i = LOG_BASE - str.length;\r\n\t                    } else {\r\n\t                        i -= len;\r\n\t                    }\r\n\t\r\n\t                    for ( ; i--; str += '0' );\r\n\t                    x.c.push( +str );\r\n\t                }\r\n\t            } else {\r\n\t\r\n\t                // Zero.\r\n\t                x.c = [ x.e = 0 ];\r\n\t            }\r\n\t\r\n\t            id = 0;\r\n\t        }\r\n\t\r\n\t\r\n\t        // CONSTRUCTOR PROPERTIES\r\n\t\r\n\t\r\n\t        BigNumber.another = another;\r\n\t\r\n\t        BigNumber.ROUND_UP = 0;\r\n\t        BigNumber.ROUND_DOWN = 1;\r\n\t        BigNumber.ROUND_CEIL = 2;\r\n\t        BigNumber.ROUND_FLOOR = 3;\r\n\t        BigNumber.ROUND_HALF_UP = 4;\r\n\t        BigNumber.ROUND_HALF_DOWN = 5;\r\n\t        BigNumber.ROUND_HALF_EVEN = 6;\r\n\t        BigNumber.ROUND_HALF_CEIL = 7;\r\n\t        BigNumber.ROUND_HALF_FLOOR = 8;\r\n\t        BigNumber.EUCLID = 9;\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Configure infrequently-changing library-wide settings.\r\n\t         *\r\n\t         * Accept an object or an argument list, with one or many of the following properties or\r\n\t         * parameters respectively:\r\n\t         *\r\n\t         *   DECIMAL_PLACES  {number}  Integer, 0 to MAX inclusive\r\n\t         *   ROUNDING_MODE   {number}  Integer, 0 to 8 inclusive\r\n\t         *   EXPONENTIAL_AT  {number|number[]}  Integer, -MAX to MAX inclusive or\r\n\t         *                                      [integer -MAX to 0 incl., 0 to MAX incl.]\r\n\t         *   RANGE           {number|number[]}  Non-zero integer, -MAX to MAX inclusive or\r\n\t         *                                      [integer -MAX to -1 incl., integer 1 to MAX incl.]\r\n\t         *   ERRORS          {boolean|number}   true, false, 1 or 0\r\n\t         *   CRYPTO          {boolean|number}   true, false, 1 or 0\r\n\t         *   MODULO_MODE     {number}           0 to 9 inclusive\r\n\t         *   POW_PRECISION   {number}           0 to MAX inclusive\r\n\t         *   FORMAT          {object}           See BigNumber.prototype.toFormat\r\n\t         *      decimalSeparator       {string}\r\n\t         *      groupSeparator         {string}\r\n\t         *      groupSize              {number}\r\n\t         *      secondaryGroupSize     {number}\r\n\t         *      fractionGroupSeparator {string}\r\n\t         *      fractionGroupSize      {number}\r\n\t         *\r\n\t         * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n\t         *\r\n\t         * E.g.\r\n\t         * BigNumber.config(20, 4) is equivalent to\r\n\t         * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n\t         *\r\n\t         * Ignore properties/parameters set to null or undefined.\r\n\t         * Return an object with the properties current values.\r\n\t         */\r\n\t        BigNumber.config = function () {\r\n\t            var v, p,\r\n\t                i = 0,\r\n\t                r = {},\r\n\t                a = arguments,\r\n\t                o = a[0],\r\n\t                has = o && typeof o == 'object'\r\n\t                  ? function () { if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null; }\r\n\t                  : function () { if ( a.length > i ) return ( v = a[i++] ) != null; };\r\n\t\r\n\t            // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n\t            // 'config() DECIMAL_PLACES not an integer: {v}'\r\n\t            // 'config() DECIMAL_PLACES out of range: {v}'\r\n\t            if ( has( p = 'DECIMAL_PLACES' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n\t                DECIMAL_PLACES = v | 0;\r\n\t            }\r\n\t            r[p] = DECIMAL_PLACES;\r\n\t\r\n\t            // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n\t            // 'config() ROUNDING_MODE not an integer: {v}'\r\n\t            // 'config() ROUNDING_MODE out of range: {v}'\r\n\t            if ( has( p = 'ROUNDING_MODE' ) && isValidInt( v, 0, 8, 2, p ) ) {\r\n\t                ROUNDING_MODE = v | 0;\r\n\t            }\r\n\t            r[p] = ROUNDING_MODE;\r\n\t\r\n\t            // EXPONENTIAL_AT {number|number[]}\r\n\t            // Integer, -MAX to MAX inclusive or [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n\t            // 'config() EXPONENTIAL_AT not an integer: {v}'\r\n\t            // 'config() EXPONENTIAL_AT out of range: {v}'\r\n\t            if ( has( p = 'EXPONENTIAL_AT' ) ) {\r\n\t\r\n\t                if ( isArray(v) ) {\r\n\t                    if ( isValidInt( v[0], -MAX, 0, 2, p ) && isValidInt( v[1], 0, MAX, 2, p ) ) {\r\n\t                        TO_EXP_NEG = v[0] | 0;\r\n\t                        TO_EXP_POS = v[1] | 0;\r\n\t                    }\r\n\t                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n\t                    TO_EXP_NEG = -( TO_EXP_POS = ( v < 0 ? -v : v ) | 0 );\r\n\t                }\r\n\t            }\r\n\t            r[p] = [ TO_EXP_NEG, TO_EXP_POS ];\r\n\t\r\n\t            // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n\t            // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n\t            // 'config() RANGE not an integer: {v}'\r\n\t            // 'config() RANGE cannot be zero: {v}'\r\n\t            // 'config() RANGE out of range: {v}'\r\n\t            if ( has( p = 'RANGE' ) ) {\r\n\t\r\n\t                if ( isArray(v) ) {\r\n\t                    if ( isValidInt( v[0], -MAX, -1, 2, p ) && isValidInt( v[1], 1, MAX, 2, p ) ) {\r\n\t                        MIN_EXP = v[0] | 0;\r\n\t                        MAX_EXP = v[1] | 0;\r\n\t                    }\r\n\t                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n\t                    if ( v | 0 ) MIN_EXP = -( MAX_EXP = ( v < 0 ? -v : v ) | 0 );\r\n\t                    else if (ERRORS) raise( 2, p + ' cannot be zero', v );\r\n\t                }\r\n\t            }\r\n\t            r[p] = [ MIN_EXP, MAX_EXP ];\r\n\t\r\n\t            // ERRORS {boolean|number} true, false, 1 or 0.\r\n\t            // 'config() ERRORS not a boolean or binary digit: {v}'\r\n\t            if ( has( p = 'ERRORS' ) ) {\r\n\t\r\n\t                if ( v === !!v || v === 1 || v === 0 ) {\r\n\t                    id = 0;\r\n\t                    isValidInt = ( ERRORS = !!v ) ? intValidatorWithErrors : intValidatorNoErrors;\r\n\t                } else if (ERRORS) {\r\n\t                    raise( 2, p + notBool, v );\r\n\t                }\r\n\t            }\r\n\t            r[p] = ERRORS;\r\n\t\r\n\t            // CRYPTO {boolean|number} true, false, 1 or 0.\r\n\t            // 'config() CRYPTO not a boolean or binary digit: {v}'\r\n\t            // 'config() crypto unavailable: {crypto}'\r\n\t            if ( has( p = 'CRYPTO' ) ) {\r\n\t\r\n\t                if ( v === !!v || v === 1 || v === 0 ) {\r\n\t                    CRYPTO = !!( v && crypto && typeof crypto == 'object' );\r\n\t                    if ( v && !CRYPTO && ERRORS ) raise( 2, 'crypto unavailable', crypto );\r\n\t                } else if (ERRORS) {\r\n\t                    raise( 2, p + notBool, v );\r\n\t                }\r\n\t            }\r\n\t            r[p] = CRYPTO;\r\n\t\r\n\t            // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n\t            // 'config() MODULO_MODE not an integer: {v}'\r\n\t            // 'config() MODULO_MODE out of range: {v}'\r\n\t            if ( has( p = 'MODULO_MODE' ) && isValidInt( v, 0, 9, 2, p ) ) {\r\n\t                MODULO_MODE = v | 0;\r\n\t            }\r\n\t            r[p] = MODULO_MODE;\r\n\t\r\n\t            // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n\t            // 'config() POW_PRECISION not an integer: {v}'\r\n\t            // 'config() POW_PRECISION out of range: {v}'\r\n\t            if ( has( p = 'POW_PRECISION' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n\t                POW_PRECISION = v | 0;\r\n\t            }\r\n\t            r[p] = POW_PRECISION;\r\n\t\r\n\t            // FORMAT {object}\r\n\t            // 'config() FORMAT not an object: {v}'\r\n\t            if ( has( p = 'FORMAT' ) ) {\r\n\t\r\n\t                if ( typeof v == 'object' ) {\r\n\t                    FORMAT = v;\r\n\t                } else if (ERRORS) {\r\n\t                    raise( 2, p + ' not an object', v );\r\n\t                }\r\n\t            }\r\n\t            r[p] = FORMAT;\r\n\t\r\n\t            return r;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the maximum of the arguments.\r\n\t         *\r\n\t         * arguments {number|string|BigNumber}\r\n\t         */\r\n\t        BigNumber.max = function () { return maxOrMin( arguments, P.lt ); };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the minimum of the arguments.\r\n\t         *\r\n\t         * arguments {number|string|BigNumber}\r\n\t         */\r\n\t        BigNumber.min = function () { return maxOrMin( arguments, P.gt ); };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n\t         * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n\t         * zeros are produced).\r\n\t         *\r\n\t         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n\t         *\r\n\t         * 'random() decimal places not an integer: {dp}'\r\n\t         * 'random() decimal places out of range: {dp}'\r\n\t         * 'random() crypto unavailable: {crypto}'\r\n\t         */\r\n\t        BigNumber.random = (function () {\r\n\t            var pow2_53 = 0x20000000000000;\r\n\t\r\n\t            // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n\t            // Check if Math.random() produces more than 32 bits of randomness.\r\n\t            // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n\t            // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n\t            var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n\t              ? function () { return mathfloor( Math.random() * pow2_53 ); }\r\n\t              : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n\t                  (Math.random() * 0x800000 | 0); };\r\n\t\r\n\t            return function (dp) {\r\n\t                var a, b, e, k, v,\r\n\t                    i = 0,\r\n\t                    c = [],\r\n\t                    rand = new BigNumber(ONE);\r\n\t\r\n\t                dp = dp == null || !isValidInt( dp, 0, MAX, 14 ) ? DECIMAL_PLACES : dp | 0;\r\n\t                k = mathceil( dp / LOG_BASE );\r\n\t\r\n\t                if (CRYPTO) {\r\n\t\r\n\t                    // Browsers supporting crypto.getRandomValues.\r\n\t                    if ( crypto && crypto.getRandomValues ) {\r\n\t\r\n\t                        a = crypto.getRandomValues( new Uint32Array( k *= 2 ) );\r\n\t\r\n\t                        for ( ; i < k; ) {\r\n\t\r\n\t                            // 53 bits:\r\n\t                            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n\t                            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n\t                            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n\t                            //                                     11111 11111111 11111111\r\n\t                            // 0x20000 is 2^21.\r\n\t                            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\t\r\n\t                            // Rejection sampling:\r\n\t                            // 0 <= v < 9007199254740992\r\n\t                            // Probability that v >= 9e15, is\r\n\t                            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n\t                            if ( v >= 9e15 ) {\r\n\t                                b = crypto.getRandomValues( new Uint32Array(2) );\r\n\t                                a[i] = b[0];\r\n\t                                a[i + 1] = b[1];\r\n\t                            } else {\r\n\t\r\n\t                                // 0 <= v <= 8999999999999999\r\n\t                                // 0 <= (v % 1e14) <= 99999999999999\r\n\t                                c.push( v % 1e14 );\r\n\t                                i += 2;\r\n\t                            }\r\n\t                        }\r\n\t                        i = k / 2;\r\n\t\r\n\t                    // Node.js supporting crypto.randomBytes.\r\n\t                    } else if ( crypto && crypto.randomBytes ) {\r\n\t\r\n\t                        // buffer\r\n\t                        a = crypto.randomBytes( k *= 7 );\r\n\t\r\n\t                        for ( ; i < k; ) {\r\n\t\r\n\t                            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n\t                            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n\t                            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n\t                            // 0 <= v < 9007199254740992\r\n\t                            v = ( ( a[i] & 31 ) * 0x1000000000000 ) + ( a[i + 1] * 0x10000000000 ) +\r\n\t                                  ( a[i + 2] * 0x100000000 ) + ( a[i + 3] * 0x1000000 ) +\r\n\t                                  ( a[i + 4] << 16 ) + ( a[i + 5] << 8 ) + a[i + 6];\r\n\t\r\n\t                            if ( v >= 9e15 ) {\r\n\t                                crypto.randomBytes(7).copy( a, i );\r\n\t                            } else {\r\n\t\r\n\t                                // 0 <= (v % 1e14) <= 99999999999999\r\n\t                                c.push( v % 1e14 );\r\n\t                                i += 7;\r\n\t                            }\r\n\t                        }\r\n\t                        i = k / 7;\r\n\t                    } else if (ERRORS) {\r\n\t                        raise( 14, 'crypto unavailable', crypto );\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                // Use Math.random: CRYPTO is false or crypto is unavailable and ERRORS is false.\r\n\t                if (!i) {\r\n\t\r\n\t                    for ( ; i < k; ) {\r\n\t                        v = random53bitInt();\r\n\t                        if ( v < 9e15 ) c[i++] = v % 1e14;\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                k = c[--i];\r\n\t                dp %= LOG_BASE;\r\n\t\r\n\t                // Convert trailing digits to zeros according to dp.\r\n\t                if ( k && dp ) {\r\n\t                    v = POWS_TEN[LOG_BASE - dp];\r\n\t                    c[i] = mathfloor( k / v ) * v;\r\n\t                }\r\n\t\r\n\t                // Remove trailing elements which are zero.\r\n\t                for ( ; c[i] === 0; c.pop(), i-- );\r\n\t\r\n\t                // Zero?\r\n\t                if ( i < 0 ) {\r\n\t                    c = [ e = 0 ];\r\n\t                } else {\r\n\t\r\n\t                    // Remove leading elements which are zero and adjust exponent accordingly.\r\n\t                    for ( e = -1 ; c[0] === 0; c.shift(), e -= LOG_BASE);\r\n\t\r\n\t                    // Count the digits of the first element of c to determine leading zeros, and...\r\n\t                    for ( i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\t\r\n\t                    // adjust the exponent accordingly.\r\n\t                    if ( i < LOG_BASE ) e -= LOG_BASE - i;\r\n\t                }\r\n\t\r\n\t                rand.e = e;\r\n\t                rand.c = c;\r\n\t                return rand;\r\n\t            };\r\n\t        })();\r\n\t\r\n\t\r\n\t        // PRIVATE FUNCTIONS\r\n\t\r\n\t\r\n\t        // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n\t        function convertBase( str, baseOut, baseIn, sign ) {\r\n\t            var d, e, k, r, x, xc, y,\r\n\t                i = str.indexOf( '.' ),\r\n\t                dp = DECIMAL_PLACES,\r\n\t                rm = ROUNDING_MODE;\r\n\t\r\n\t            if ( baseIn < 37 ) str = str.toLowerCase();\r\n\t\r\n\t            // Non-integer.\r\n\t            if ( i >= 0 ) {\r\n\t                k = POW_PRECISION;\r\n\t\r\n\t                // Unlimited precision.\r\n\t                POW_PRECISION = 0;\r\n\t                str = str.replace( '.', '' );\r\n\t                y = new BigNumber(baseIn);\r\n\t                x = y.pow( str.length - i );\r\n\t                POW_PRECISION = k;\r\n\t\r\n\t                // Convert str as if an integer, then restore the fraction part by dividing the\r\n\t                // result by its base raised to a power.\r\n\t                y.c = toBaseOut( toFixedPoint( coeffToString( x.c ), x.e ), 10, baseOut );\r\n\t                y.e = y.c.length;\r\n\t            }\r\n\t\r\n\t            // Convert the number as integer.\r\n\t            xc = toBaseOut( str, baseIn, baseOut );\r\n\t            e = k = xc.length;\r\n\t\r\n\t            // Remove trailing zeros.\r\n\t            for ( ; xc[--k] == 0; xc.pop() );\r\n\t            if ( !xc[0] ) return '0';\r\n\t\r\n\t            if ( i < 0 ) {\r\n\t                --e;\r\n\t            } else {\r\n\t                x.c = xc;\r\n\t                x.e = e;\r\n\t\r\n\t                // sign is needed for correct rounding.\r\n\t                x.s = sign;\r\n\t                x = div( x, y, dp, rm, baseOut );\r\n\t                xc = x.c;\r\n\t                r = x.r;\r\n\t                e = x.e;\r\n\t            }\r\n\t\r\n\t            d = e + dp + 1;\r\n\t\r\n\t            // The rounding digit, i.e. the digit to the right of the digit that may be rounded up.\r\n\t            i = xc[d];\r\n\t            k = baseOut / 2;\r\n\t            r = r || d < 0 || xc[d + 1] != null;\r\n\t\r\n\t            r = rm < 4 ? ( i != null || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n\t                       : i > k || i == k &&( rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n\t                         rm == ( x.s < 0 ? 8 : 7 ) );\r\n\t\r\n\t            if ( d < 1 || !xc[0] ) {\r\n\t\r\n\t                // 1^-dp or 0.\r\n\t                str = r ? toFixedPoint( '1', -dp ) : '0';\r\n\t            } else {\r\n\t                xc.length = d;\r\n\t\r\n\t                if (r) {\r\n\t\r\n\t                    // Rounding up may mean the previous digit has to be rounded up and so on.\r\n\t                    for ( --baseOut; ++xc[--d] > baseOut; ) {\r\n\t                        xc[d] = 0;\r\n\t\r\n\t                        if ( !d ) {\r\n\t                            ++e;\r\n\t                            xc.unshift(1);\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                // Determine trailing zeros.\r\n\t                for ( k = xc.length; !xc[--k]; );\r\n\t\r\n\t                // E.g. [4, 11, 15] becomes 4bf.\r\n\t                for ( i = 0, str = ''; i <= k; str += ALPHABET.charAt( xc[i++] ) );\r\n\t                str = toFixedPoint( str, e );\r\n\t            }\r\n\t\r\n\t            // The caller will add the sign.\r\n\t            return str;\r\n\t        }\r\n\t\r\n\t\r\n\t        // Perform division in the specified base. Called by div and convertBase.\r\n\t        div = (function () {\r\n\t\r\n\t            // Assume non-zero x and k.\r\n\t            function multiply( x, k, base ) {\r\n\t                var m, temp, xlo, xhi,\r\n\t                    carry = 0,\r\n\t                    i = x.length,\r\n\t                    klo = k % SQRT_BASE,\r\n\t                    khi = k / SQRT_BASE | 0;\r\n\t\r\n\t                for ( x = x.slice(); i--; ) {\r\n\t                    xlo = x[i] % SQRT_BASE;\r\n\t                    xhi = x[i] / SQRT_BASE | 0;\r\n\t                    m = khi * xlo + xhi * klo;\r\n\t                    temp = klo * xlo + ( ( m % SQRT_BASE ) * SQRT_BASE ) + carry;\r\n\t                    carry = ( temp / base | 0 ) + ( m / SQRT_BASE | 0 ) + khi * xhi;\r\n\t                    x[i] = temp % base;\r\n\t                }\r\n\t\r\n\t                if (carry) x.unshift(carry);\r\n\t\r\n\t                return x;\r\n\t            }\r\n\t\r\n\t            function compare( a, b, aL, bL ) {\r\n\t                var i, cmp;\r\n\t\r\n\t                if ( aL != bL ) {\r\n\t                    cmp = aL > bL ? 1 : -1;\r\n\t                } else {\r\n\t\r\n\t                    for ( i = cmp = 0; i < aL; i++ ) {\r\n\t\r\n\t                        if ( a[i] != b[i] ) {\r\n\t                            cmp = a[i] > b[i] ? 1 : -1;\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                return cmp;\r\n\t            }\r\n\t\r\n\t            function subtract( a, b, aL, base ) {\r\n\t                var i = 0;\r\n\t\r\n\t                // Subtract b from a.\r\n\t                for ( ; aL--; ) {\r\n\t                    a[aL] -= i;\r\n\t                    i = a[aL] < b[aL] ? 1 : 0;\r\n\t                    a[aL] = i * base + a[aL] - b[aL];\r\n\t                }\r\n\t\r\n\t                // Remove leading zeros.\r\n\t                for ( ; !a[0] && a.length > 1; a.shift() );\r\n\t            }\r\n\t\r\n\t            // x: dividend, y: divisor.\r\n\t            return function ( x, y, dp, rm, base ) {\r\n\t                var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n\t                    yL, yz,\r\n\t                    s = x.s == y.s ? 1 : -1,\r\n\t                    xc = x.c,\r\n\t                    yc = y.c;\r\n\t\r\n\t                // Either NaN, Infinity or 0?\r\n\t                if ( !xc || !xc[0] || !yc || !yc[0] ) {\r\n\t\r\n\t                    return new BigNumber(\r\n\t\r\n\t                      // Return NaN if either NaN, or both Infinity or 0.\r\n\t                      !x.s || !y.s || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :\r\n\t\r\n\t                        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n\t                        xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n\t                    );\r\n\t                }\r\n\t\r\n\t                q = new BigNumber(s);\r\n\t                qc = q.c = [];\r\n\t                e = x.e - y.e;\r\n\t                s = dp + e + 1;\r\n\t\r\n\t                if ( !base ) {\r\n\t                    base = BASE;\r\n\t                    e = bitFloor( x.e / LOG_BASE ) - bitFloor( y.e / LOG_BASE );\r\n\t                    s = s / LOG_BASE | 0;\r\n\t                }\r\n\t\r\n\t                // Result exponent may be one less then the current value of e.\r\n\t                // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n\t                for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );\r\n\t                if ( yc[i] > ( xc[i] || 0 ) ) e--;\r\n\t\r\n\t                if ( s < 0 ) {\r\n\t                    qc.push(1);\r\n\t                    more = true;\r\n\t                } else {\r\n\t                    xL = xc.length;\r\n\t                    yL = yc.length;\r\n\t                    i = 0;\r\n\t                    s += 2;\r\n\t\r\n\t                    // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\t\r\n\t                    n = mathfloor( base / ( yc[0] + 1 ) );\r\n\t\r\n\t                    // Not necessary, but to handle odd bases where yc[0] == ( base / 2 ) - 1.\r\n\t                    // if ( n > 1 || n++ == 1 && yc[0] < base / 2 ) {\r\n\t                    if ( n > 1 ) {\r\n\t                        yc = multiply( yc, n, base );\r\n\t                        xc = multiply( xc, n, base );\r\n\t                        yL = yc.length;\r\n\t                        xL = xc.length;\r\n\t                    }\r\n\t\r\n\t                    xi = yL;\r\n\t                    rem = xc.slice( 0, yL );\r\n\t                    remL = rem.length;\r\n\t\r\n\t                    // Add zeros to make remainder as long as divisor.\r\n\t                    for ( ; remL < yL; rem[remL++] = 0 );\r\n\t                    yz = yc.slice();\r\n\t                    yz.unshift(0);\r\n\t                    yc0 = yc[0];\r\n\t                    if ( yc[1] >= base / 2 ) yc0++;\r\n\t                    // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n\t                    // else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;\r\n\t\r\n\t                    do {\r\n\t                        n = 0;\r\n\t\r\n\t                        // Compare divisor and remainder.\r\n\t                        cmp = compare( yc, rem, yL, remL );\r\n\t\r\n\t                        // If divisor < remainder.\r\n\t                        if ( cmp < 0 ) {\r\n\t\r\n\t                            // Calculate trial digit, n.\r\n\t\r\n\t                            rem0 = rem[0];\r\n\t                            if ( yL != remL ) rem0 = rem0 * base + ( rem[1] || 0 );\r\n\t\r\n\t                            // n is how many times the divisor goes into the current remainder.\r\n\t                            n = mathfloor( rem0 / yc0 );\r\n\t\r\n\t                            //  Algorithm:\r\n\t                            //  1. product = divisor * trial digit (n)\r\n\t                            //  2. if product > remainder: product -= divisor, n--\r\n\t                            //  3. remainder -= product\r\n\t                            //  4. if product was < remainder at 2:\r\n\t                            //    5. compare new remainder and divisor\r\n\t                            //    6. If remainder > divisor: remainder -= divisor, n++\r\n\t\r\n\t                            if ( n > 1 ) {\r\n\t\r\n\t                                // n may be > base only when base is 3.\r\n\t                                if (n >= base) n = base - 1;\r\n\t\r\n\t                                // product = divisor * trial digit.\r\n\t                                prod = multiply( yc, n, base );\r\n\t                                prodL = prod.length;\r\n\t                                remL = rem.length;\r\n\t\r\n\t                                // Compare product and remainder.\r\n\t                                // If product > remainder.\r\n\t                                // Trial digit n too high.\r\n\t                                // n is 1 too high about 5% of the time, and is not known to have\r\n\t                                // ever been more than 1 too high.\r\n\t                                while ( compare( prod, rem, prodL, remL ) == 1 ) {\r\n\t                                    n--;\r\n\t\r\n\t                                    // Subtract divisor from product.\r\n\t                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );\r\n\t                                    prodL = prod.length;\r\n\t                                    cmp = 1;\r\n\t                                }\r\n\t                            } else {\r\n\t\r\n\t                                // n is 0 or 1, cmp is -1.\r\n\t                                // If n is 0, there is no need to compare yc and rem again below,\r\n\t                                // so change cmp to 1 to avoid it.\r\n\t                                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n\t                                if ( n == 0 ) {\r\n\t\r\n\t                                    // divisor < remainder, so n must be at least 1.\r\n\t                                    cmp = n = 1;\r\n\t                                }\r\n\t\r\n\t                                // product = divisor\r\n\t                                prod = yc.slice();\r\n\t                                prodL = prod.length;\r\n\t                            }\r\n\t\r\n\t                            if ( prodL < remL ) prod.unshift(0);\r\n\t\r\n\t                            // Subtract product from remainder.\r\n\t                            subtract( rem, prod, remL, base );\r\n\t                            remL = rem.length;\r\n\t\r\n\t                             // If product was < remainder.\r\n\t                            if ( cmp == -1 ) {\r\n\t\r\n\t                                // Compare divisor and new remainder.\r\n\t                                // If divisor < new remainder, subtract divisor from remainder.\r\n\t                                // Trial digit n too low.\r\n\t                                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n\t                                while ( compare( yc, rem, yL, remL ) < 1 ) {\r\n\t                                    n++;\r\n\t\r\n\t                                    // Subtract divisor from remainder.\r\n\t                                    subtract( rem, yL < remL ? yz : yc, remL, base );\r\n\t                                    remL = rem.length;\r\n\t                                }\r\n\t                            }\r\n\t                        } else if ( cmp === 0 ) {\r\n\t                            n++;\r\n\t                            rem = [0];\r\n\t                        } // else cmp === 1 and n will be 0\r\n\t\r\n\t                        // Add the next digit, n, to the result array.\r\n\t                        qc[i++] = n;\r\n\t\r\n\t                        // Update the remainder.\r\n\t                        if ( rem[0] ) {\r\n\t                            rem.push(xc[xi] || 0);\r\n\t                            remL = remL + 1;\r\n\t                        } else {\r\n\t                            rem = [ xc[xi] ];\r\n\t                            remL = 1;\r\n\t                        }\r\n\t                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );\r\n\t\r\n\t                    more = rem[0] != null;\r\n\t\r\n\t                    // Leading zero?\r\n\t                    if ( !qc[0] ) qc.shift();\r\n\t                }\r\n\t\r\n\t                if ( base == BASE ) {\r\n\t\r\n\t                    // To calculate q.e, first get the number of digits of qc[0].\r\n\t                    for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );\r\n\t                    round( q, dp + ( q.e = i + e * LOG_BASE - 1 ) + 1, rm, more );\r\n\t\r\n\t                // Caller is convertBase.\r\n\t                } else {\r\n\t                    q.e = e;\r\n\t                    q.r = +more;\r\n\t                }\r\n\t\r\n\t                return q;\r\n\t            };\r\n\t        })();\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n\t         * notation rounded to the specified decimal places or significant digits.\r\n\t         *\r\n\t         * n is a BigNumber.\r\n\t         * i is the index of the last digit required (i.e. the digit that may be rounded up).\r\n\t         * rm is the rounding mode.\r\n\t         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.\r\n\t         */\r\n\t        function format( n, i, rm, caller ) {\r\n\t            var c0, e, ne, len, str;\r\n\t\r\n\t            rm = rm != null && isValidInt( rm, 0, 8, caller, roundingMode )\r\n\t              ? rm | 0 : ROUNDING_MODE;\r\n\t\r\n\t            if ( !n.c ) return n.toString();\r\n\t            c0 = n.c[0];\r\n\t            ne = n.e;\r\n\t\r\n\t            if ( i == null ) {\r\n\t                str = coeffToString( n.c );\r\n\t                str = caller == 19 || caller == 24 && ne <= TO_EXP_NEG\r\n\t                  ? toExponential( str, ne )\r\n\t                  : toFixedPoint( str, ne );\r\n\t            } else {\r\n\t                n = round( new BigNumber(n), i, rm );\r\n\t\r\n\t                // n.e may have changed if the value was rounded up.\r\n\t                e = n.e;\r\n\t\r\n\t                str = coeffToString( n.c );\r\n\t                len = str.length;\r\n\t\r\n\t                // toPrecision returns exponential notation if the number of significant digits\r\n\t                // specified is less than the number of digits necessary to represent the integer\r\n\t                // part of the value in fixed-point notation.\r\n\t\r\n\t                // Exponential notation.\r\n\t                if ( caller == 19 || caller == 24 && ( i <= e || e <= TO_EXP_NEG ) ) {\r\n\t\r\n\t                    // Append zeros?\r\n\t                    for ( ; len < i; str += '0', len++ );\r\n\t                    str = toExponential( str, e );\r\n\t\r\n\t                // Fixed-point notation.\r\n\t                } else {\r\n\t                    i -= ne;\r\n\t                    str = toFixedPoint( str, e );\r\n\t\r\n\t                    // Append zeros?\r\n\t                    if ( e + 1 > len ) {\r\n\t                        if ( --i > 0 ) for ( str += '.'; i--; str += '0' );\r\n\t                    } else {\r\n\t                        i += e - len;\r\n\t                        if ( i > 0 ) {\r\n\t                            if ( e + 1 == len ) str += '.';\r\n\t                            for ( ; i--; str += '0' );\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return n.s < 0 && c0 ? '-' + str : str;\r\n\t        }\r\n\t\r\n\t\r\n\t        // Handle BigNumber.max and BigNumber.min.\r\n\t        function maxOrMin( args, method ) {\r\n\t            var m, n,\r\n\t                i = 0;\r\n\t\r\n\t            if ( isArray( args[0] ) ) args = args[0];\r\n\t            m = new BigNumber( args[0] );\r\n\t\r\n\t            for ( ; ++i < args.length; ) {\r\n\t                n = new BigNumber( args[i] );\r\n\t\r\n\t                // If any number is NaN, return NaN.\r\n\t                if ( !n.s ) {\r\n\t                    m = n;\r\n\t                    break;\r\n\t                } else if ( method.call( m, n ) ) {\r\n\t                    m = n;\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return m;\r\n\t        }\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if n is an integer in range, otherwise throw.\r\n\t         * Use for argument validation when ERRORS is true.\r\n\t         */\r\n\t        function intValidatorWithErrors( n, min, max, caller, name ) {\r\n\t            if ( n < min || n > max || n != truncate(n) ) {\r\n\t                raise( caller, ( name || 'decimal places' ) +\r\n\t                  ( n < min || n > max ? ' out of range' : ' not an integer' ), n );\r\n\t            }\r\n\t\r\n\t            return true;\r\n\t        }\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n\t         * Called by minus, plus and times.\r\n\t         */\r\n\t        function normalise( n, c, e ) {\r\n\t            var i = 1,\r\n\t                j = c.length;\r\n\t\r\n\t             // Remove trailing zeros.\r\n\t            for ( ; !c[--j]; c.pop() );\r\n\t\r\n\t            // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n\t            for ( j = c[0]; j >= 10; j /= 10, i++ );\r\n\t\r\n\t            // Overflow?\r\n\t            if ( ( e = i + e * LOG_BASE - 1 ) > MAX_EXP ) {\r\n\t\r\n\t                // Infinity.\r\n\t                n.c = n.e = null;\r\n\t\r\n\t            // Underflow?\r\n\t            } else if ( e < MIN_EXP ) {\r\n\t\r\n\t                // Zero.\r\n\t                n.c = [ n.e = 0 ];\r\n\t            } else {\r\n\t                n.e = e;\r\n\t                n.c = c;\r\n\t            }\r\n\t\r\n\t            return n;\r\n\t        }\r\n\t\r\n\t\r\n\t        // Handle values that fail the validity test in BigNumber.\r\n\t        parseNumeric = (function () {\r\n\t            var basePrefix = /^(-?)0([xbo])/i,\r\n\t                dotAfter = /^([^.]+)\\.$/,\r\n\t                dotBefore = /^\\.([^.]+)$/,\r\n\t                isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n\t                whitespaceOrPlus = /^\\s*\\+|^\\s+|\\s+$/g;\r\n\t\r\n\t            return function ( x, str, num, b ) {\r\n\t                var base,\r\n\t                    s = num ? str : str.replace( whitespaceOrPlus, '' );\r\n\t\r\n\t                // No exception on ±Infinity or NaN.\r\n\t                if ( isInfinityOrNaN.test(s) ) {\r\n\t                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n\t                } else {\r\n\t                    if ( !num ) {\r\n\t\r\n\t                        // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n\t                        s = s.replace( basePrefix, function ( m, p1, p2 ) {\r\n\t                            base = ( p2 = p2.toLowerCase() ) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n\t                            return !b || b == base ? p1 : m;\r\n\t                        });\r\n\t\r\n\t                        if (b) {\r\n\t                            base = b;\r\n\t\r\n\t                            // E.g. '1.' to '1', '.1' to '0.1'\r\n\t                            s = s.replace( dotAfter, '$1' ).replace( dotBefore, '0.$1' );\r\n\t                        }\r\n\t\r\n\t                        if ( str != s ) return new BigNumber( s, base );\r\n\t                    }\r\n\t\r\n\t                    // 'new BigNumber() not a number: {n}'\r\n\t                    // 'new BigNumber() not a base {b} number: {n}'\r\n\t                    if (ERRORS) raise( id, 'not a' + ( b ? ' base ' + b : '' ) + ' number', str );\r\n\t                    x.s = null;\r\n\t                }\r\n\t\r\n\t                x.c = x.e = null;\r\n\t                id = 0;\r\n\t            }\r\n\t        })();\r\n\t\r\n\t\r\n\t        // Throw a BigNumber Error.\r\n\t        function raise( caller, msg, val ) {\r\n\t            var error = new Error( [\r\n\t                'new BigNumber',     // 0\r\n\t                'cmp',               // 1\r\n\t                'config',            // 2\r\n\t                'div',               // 3\r\n\t                'divToInt',          // 4\r\n\t                'eq',                // 5\r\n\t                'gt',                // 6\r\n\t                'gte',               // 7\r\n\t                'lt',                // 8\r\n\t                'lte',               // 9\r\n\t                'minus',             // 10\r\n\t                'mod',               // 11\r\n\t                'plus',              // 12\r\n\t                'precision',         // 13\r\n\t                'random',            // 14\r\n\t                'round',             // 15\r\n\t                'shift',             // 16\r\n\t                'times',             // 17\r\n\t                'toDigits',          // 18\r\n\t                'toExponential',     // 19\r\n\t                'toFixed',           // 20\r\n\t                'toFormat',          // 21\r\n\t                'toFraction',        // 22\r\n\t                'pow',               // 23\r\n\t                'toPrecision',       // 24\r\n\t                'toString',          // 25\r\n\t                'BigNumber'          // 26\r\n\t            ][caller] + '() ' + msg + ': ' + val );\r\n\t\r\n\t            error.name = 'BigNumber Error';\r\n\t            id = 0;\r\n\t            throw error;\r\n\t        }\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n\t         * If r is truthy, it is known that there are more digits after the rounding digit.\r\n\t         */\r\n\t        function round( x, sd, rm, r ) {\r\n\t            var d, i, j, k, n, ni, rd,\r\n\t                xc = x.c,\r\n\t                pows10 = POWS_TEN;\r\n\t\r\n\t            // if x is not Infinity or NaN...\r\n\t            if (xc) {\r\n\t\r\n\t                // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n\t                // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n\t                // ni is the index of n within x.c.\r\n\t                // d is the number of digits of n.\r\n\t                // i is the index of rd within n including leading zeros.\r\n\t                // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n\t                out: {\r\n\t\r\n\t                    // Get the number of digits of the first element of xc.\r\n\t                    for ( d = 1, k = xc[0]; k >= 10; k /= 10, d++ );\r\n\t                    i = sd - d;\r\n\t\r\n\t                    // If the rounding digit is in the first element of xc...\r\n\t                    if ( i < 0 ) {\r\n\t                        i += LOG_BASE;\r\n\t                        j = sd;\r\n\t                        n = xc[ ni = 0 ];\r\n\t\r\n\t                        // Get the rounding digit at index j of n.\r\n\t                        rd = n / pows10[ d - j - 1 ] % 10 | 0;\r\n\t                    } else {\r\n\t                        ni = mathceil( ( i + 1 ) / LOG_BASE );\r\n\t\r\n\t                        if ( ni >= xc.length ) {\r\n\t\r\n\t                            if (r) {\r\n\t\r\n\t                                // Needed by sqrt.\r\n\t                                for ( ; xc.length <= ni; xc.push(0) );\r\n\t                                n = rd = 0;\r\n\t                                d = 1;\r\n\t                                i %= LOG_BASE;\r\n\t                                j = i - LOG_BASE + 1;\r\n\t                            } else {\r\n\t                                break out;\r\n\t                            }\r\n\t                        } else {\r\n\t                            n = k = xc[ni];\r\n\t\r\n\t                            // Get the number of digits of n.\r\n\t                            for ( d = 1; k >= 10; k /= 10, d++ );\r\n\t\r\n\t                            // Get the index of rd within n.\r\n\t                            i %= LOG_BASE;\r\n\t\r\n\t                            // Get the index of rd within n, adjusted for leading zeros.\r\n\t                            // The number of leading zeros of n is given by LOG_BASE - d.\r\n\t                            j = i - LOG_BASE + d;\r\n\t\r\n\t                            // Get the rounding digit at index j of n.\r\n\t                            rd = j < 0 ? 0 : n / pows10[ d - j - 1 ] % 10 | 0;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    r = r || sd < 0 ||\r\n\t\r\n\t                    // Are there any non-zero digits after the rounding digit?\r\n\t                    // The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right\r\n\t                    // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n\t                      xc[ni + 1] != null || ( j < 0 ? n : n % pows10[ d - j - 1 ] );\r\n\t\r\n\t                    r = rm < 4\r\n\t                      ? ( rd || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n\t                      : rd > 5 || rd == 5 && ( rm == 4 || r || rm == 6 &&\r\n\t\r\n\t                        // Check whether the digit to the left of the rounding digit is odd.\r\n\t                        ( ( i > 0 ? j > 0 ? n / pows10[ d - j ] : 0 : xc[ni - 1] ) % 10 ) & 1 ||\r\n\t                          rm == ( x.s < 0 ? 8 : 7 ) );\r\n\t\r\n\t                    if ( sd < 1 || !xc[0] ) {\r\n\t                        xc.length = 0;\r\n\t\r\n\t                        if (r) {\r\n\t\r\n\t                            // Convert sd to decimal places.\r\n\t                            sd -= x.e + 1;\r\n\t\r\n\t                            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n\t                            xc[0] = pows10[ sd % LOG_BASE ];\r\n\t                            x.e = -sd || 0;\r\n\t                        } else {\r\n\t\r\n\t                            // Zero.\r\n\t                            xc[0] = x.e = 0;\r\n\t                        }\r\n\t\r\n\t                        return x;\r\n\t                    }\r\n\t\r\n\t                    // Remove excess digits.\r\n\t                    if ( i == 0 ) {\r\n\t                        xc.length = ni;\r\n\t                        k = 1;\r\n\t                        ni--;\r\n\t                    } else {\r\n\t                        xc.length = ni + 1;\r\n\t                        k = pows10[ LOG_BASE - i ];\r\n\t\r\n\t                        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n\t                        // j > 0 means i > number of leading zeros of n.\r\n\t                        xc[ni] = j > 0 ? mathfloor( n / pows10[ d - j ] % pows10[j] ) * k : 0;\r\n\t                    }\r\n\t\r\n\t                    // Round up?\r\n\t                    if (r) {\r\n\t\r\n\t                        for ( ; ; ) {\r\n\t\r\n\t                            // If the digit to be rounded up is in the first element of xc...\r\n\t                            if ( ni == 0 ) {\r\n\t\r\n\t                                // i will be the length of xc[0] before k is added.\r\n\t                                for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );\r\n\t                                j = xc[0] += k;\r\n\t                                for ( k = 1; j >= 10; j /= 10, k++ );\r\n\t\r\n\t                                // if i != k the length has increased.\r\n\t                                if ( i != k ) {\r\n\t                                    x.e++;\r\n\t                                    if ( xc[0] == BASE ) xc[0] = 1;\r\n\t                                }\r\n\t\r\n\t                                break;\r\n\t                            } else {\r\n\t                                xc[ni] += k;\r\n\t                                if ( xc[ni] != BASE ) break;\r\n\t                                xc[ni--] = 0;\r\n\t                                k = 1;\r\n\t                            }\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    // Remove trailing zeros.\r\n\t                    for ( i = xc.length; xc[--i] === 0; xc.pop() );\r\n\t                }\r\n\t\r\n\t                // Overflow? Infinity.\r\n\t                if ( x.e > MAX_EXP ) {\r\n\t                    x.c = x.e = null;\r\n\t\r\n\t                // Underflow? Zero.\r\n\t                } else if ( x.e < MIN_EXP ) {\r\n\t                    x.c = [ x.e = 0 ];\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return x;\r\n\t        }\r\n\t\r\n\t\r\n\t        // PROTOTYPE/INSTANCE METHODS\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n\t         */\r\n\t        P.absoluteValue = P.abs = function () {\r\n\t            var x = new BigNumber(this);\r\n\t            if ( x.s < 0 ) x.s = 1;\r\n\t            return x;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n\t         * number in the direction of Infinity.\r\n\t         */\r\n\t        P.ceil = function () {\r\n\t            return round( new BigNumber(this), this.e + 1, 2 );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return\r\n\t         * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n\t         * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n\t         * 0 if they have the same value,\r\n\t         * or null if the value of either is NaN.\r\n\t         */\r\n\t        P.comparedTo = P.cmp = function ( y, b ) {\r\n\t            id = 1;\r\n\t            return compare( this, new BigNumber( y, b ) );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return the number of decimal places of the value of this BigNumber, or null if the value\r\n\t         * of this BigNumber is ±Infinity or NaN.\r\n\t         */\r\n\t        P.decimalPlaces = P.dp = function () {\r\n\t            var n, v,\r\n\t                c = this.c;\r\n\t\r\n\t            if ( !c ) return null;\r\n\t            n = ( ( v = c.length - 1 ) - bitFloor( this.e / LOG_BASE ) ) * LOG_BASE;\r\n\t\r\n\t            // Subtract the number of trailing zeros of the last number.\r\n\t            if ( v = c[v] ) for ( ; v % 10 == 0; v /= 10, n-- );\r\n\t            if ( n < 0 ) n = 0;\r\n\t\r\n\t            return n;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         *  n / 0 = I\r\n\t         *  n / N = N\r\n\t         *  n / I = 0\r\n\t         *  0 / n = 0\r\n\t         *  0 / 0 = N\r\n\t         *  0 / N = N\r\n\t         *  0 / I = 0\r\n\t         *  N / n = N\r\n\t         *  N / 0 = N\r\n\t         *  N / N = N\r\n\t         *  N / I = N\r\n\t         *  I / n = I\r\n\t         *  I / 0 = I\r\n\t         *  I / N = N\r\n\t         *  I / I = N\r\n\t         *\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n\t         * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n\t         */\r\n\t        P.dividedBy = P.div = function ( y, b ) {\r\n\t            id = 3;\r\n\t            return div( this, new BigNumber( y, b ), DECIMAL_PLACES, ROUNDING_MODE );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n\t         * BigNumber by the value of BigNumber(y, b).\r\n\t         */\r\n\t        P.dividedToIntegerBy = P.divToInt = function ( y, b ) {\r\n\t            id = 4;\r\n\t            return div( this, new BigNumber( y, b ), 0, 1 );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n\t         * otherwise returns false.\r\n\t         */\r\n\t        P.equals = P.eq = function ( y, b ) {\r\n\t            id = 5;\r\n\t            return compare( this, new BigNumber( y, b ) ) === 0;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n\t         * number in the direction of -Infinity.\r\n\t         */\r\n\t        P.floor = function () {\r\n\t            return round( new BigNumber(this), this.e + 1, 3 );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n\t         * otherwise returns false.\r\n\t         */\r\n\t        P.greaterThan = P.gt = function ( y, b ) {\r\n\t            id = 6;\r\n\t            return compare( this, new BigNumber( y, b ) ) > 0;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is greater than or equal to the value of\r\n\t         * BigNumber(y, b), otherwise returns false.\r\n\t         */\r\n\t        P.greaterThanOrEqualTo = P.gte = function ( y, b ) {\r\n\t            id = 7;\r\n\t            return ( b = compare( this, new BigNumber( y, b ) ) ) === 1 || b === 0;\r\n\t\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is a finite number, otherwise returns false.\r\n\t         */\r\n\t        P.isFinite = function () {\r\n\t            return !!this.c;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n\t         */\r\n\t        P.isInteger = P.isInt = function () {\r\n\t            return !!this.c && bitFloor( this.e / LOG_BASE ) > this.c.length - 2;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is NaN, otherwise returns false.\r\n\t         */\r\n\t        P.isNaN = function () {\r\n\t            return !this.s;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is negative, otherwise returns false.\r\n\t         */\r\n\t        P.isNegative = P.isNeg = function () {\r\n\t            return this.s < 0;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is 0 or -0, otherwise returns false.\r\n\t         */\r\n\t        P.isZero = function () {\r\n\t            return !!this.c && this.c[0] == 0;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n\t         * otherwise returns false.\r\n\t         */\r\n\t        P.lessThan = P.lt = function ( y, b ) {\r\n\t            id = 8;\r\n\t            return compare( this, new BigNumber( y, b ) ) < 0;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return true if the value of this BigNumber is less than or equal to the value of\r\n\t         * BigNumber(y, b), otherwise returns false.\r\n\t         */\r\n\t        P.lessThanOrEqualTo = P.lte = function ( y, b ) {\r\n\t            id = 9;\r\n\t            return ( b = compare( this, new BigNumber( y, b ) ) ) === -1 || b === 0;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         *  n - 0 = n\r\n\t         *  n - N = N\r\n\t         *  n - I = -I\r\n\t         *  0 - n = -n\r\n\t         *  0 - 0 = 0\r\n\t         *  0 - N = N\r\n\t         *  0 - I = -I\r\n\t         *  N - n = N\r\n\t         *  N - 0 = N\r\n\t         *  N - N = N\r\n\t         *  N - I = N\r\n\t         *  I - n = I\r\n\t         *  I - 0 = I\r\n\t         *  I - N = N\r\n\t         *  I - I = N\r\n\t         *\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n\t         * BigNumber(y, b).\r\n\t         */\r\n\t        P.minus = P.sub = function ( y, b ) {\r\n\t            var i, j, t, xLTy,\r\n\t                x = this,\r\n\t                a = x.s;\r\n\t\r\n\t            id = 10;\r\n\t            y = new BigNumber( y, b );\r\n\t            b = y.s;\r\n\t\r\n\t            // Either NaN?\r\n\t            if ( !a || !b ) return new BigNumber(NaN);\r\n\t\r\n\t            // Signs differ?\r\n\t            if ( a != b ) {\r\n\t                y.s = -b;\r\n\t                return x.plus(y);\r\n\t            }\r\n\t\r\n\t            var xe = x.e / LOG_BASE,\r\n\t                ye = y.e / LOG_BASE,\r\n\t                xc = x.c,\r\n\t                yc = y.c;\r\n\t\r\n\t            if ( !xe || !ye ) {\r\n\t\r\n\t                // Either Infinity?\r\n\t                if ( !xc || !yc ) return xc ? ( y.s = -b, y ) : new BigNumber( yc ? x : NaN );\r\n\t\r\n\t                // Either zero?\r\n\t                if ( !xc[0] || !yc[0] ) {\r\n\t\r\n\t                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n\t                    return yc[0] ? ( y.s = -b, y ) : new BigNumber( xc[0] ? x :\r\n\t\r\n\t                      // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n\t                      ROUNDING_MODE == 3 ? -0 : 0 );\r\n\t                }\r\n\t            }\r\n\t\r\n\t            xe = bitFloor(xe);\r\n\t            ye = bitFloor(ye);\r\n\t            xc = xc.slice();\r\n\t\r\n\t            // Determine which is the bigger number.\r\n\t            if ( a = xe - ye ) {\r\n\t\r\n\t                if ( xLTy = a < 0 ) {\r\n\t                    a = -a;\r\n\t                    t = xc;\r\n\t                } else {\r\n\t                    ye = xe;\r\n\t                    t = yc;\r\n\t                }\r\n\t\r\n\t                t.reverse();\r\n\t\r\n\t                // Prepend zeros to equalise exponents.\r\n\t                for ( b = a; b--; t.push(0) );\r\n\t                t.reverse();\r\n\t            } else {\r\n\t\r\n\t                // Exponents equal. Check digit by digit.\r\n\t                j = ( xLTy = ( a = xc.length ) < ( b = yc.length ) ) ? a : b;\r\n\t\r\n\t                for ( a = b = 0; b < j; b++ ) {\r\n\t\r\n\t                    if ( xc[b] != yc[b] ) {\r\n\t                        xLTy = xc[b] < yc[b];\r\n\t                        break;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            // x < y? Point xc to the array of the bigger number.\r\n\t            if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\t\r\n\t            b = ( j = yc.length ) - ( i = xc.length );\r\n\t\r\n\t            // Append zeros to xc if shorter.\r\n\t            // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n\t            if ( b > 0 ) for ( ; b--; xc[i++] = 0 );\r\n\t            b = BASE - 1;\r\n\t\r\n\t            // Subtract yc from xc.\r\n\t            for ( ; j > a; ) {\r\n\t\r\n\t                if ( xc[--j] < yc[j] ) {\r\n\t                    for ( i = j; i && !xc[--i]; xc[i] = b );\r\n\t                    --xc[i];\r\n\t                    xc[j] += BASE;\r\n\t                }\r\n\t\r\n\t                xc[j] -= yc[j];\r\n\t            }\r\n\t\r\n\t            // Remove leading zeros and adjust exponent accordingly.\r\n\t            for ( ; xc[0] == 0; xc.shift(), --ye );\r\n\t\r\n\t            // Zero?\r\n\t            if ( !xc[0] ) {\r\n\t\r\n\t                // Following IEEE 754 (2008) 6.3,\r\n\t                // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n\t                y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n\t                y.c = [ y.e = 0 ];\r\n\t                return y;\r\n\t            }\r\n\t\r\n\t            // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n\t            // for finite x and y.\r\n\t            return normalise( y, xc, ye );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         *   n % 0 =  N\r\n\t         *   n % N =  N\r\n\t         *   n % I =  n\r\n\t         *   0 % n =  0\r\n\t         *  -0 % n = -0\r\n\t         *   0 % 0 =  N\r\n\t         *   0 % N =  N\r\n\t         *   0 % I =  0\r\n\t         *   N % n =  N\r\n\t         *   N % 0 =  N\r\n\t         *   N % N =  N\r\n\t         *   N % I =  N\r\n\t         *   I % n =  N\r\n\t         *   I % 0 =  N\r\n\t         *   I % N =  N\r\n\t         *   I % I =  N\r\n\t         *\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n\t         * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n\t         */\r\n\t        P.modulo = P.mod = function ( y, b ) {\r\n\t            var q, s,\r\n\t                x = this;\r\n\t\r\n\t            id = 11;\r\n\t            y = new BigNumber( y, b );\r\n\t\r\n\t            // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n\t            if ( !x.c || !y.s || y.c && !y.c[0] ) {\r\n\t                return new BigNumber(NaN);\r\n\t\r\n\t            // Return x if y is Infinity or x is zero.\r\n\t            } else if ( !y.c || x.c && !x.c[0] ) {\r\n\t                return new BigNumber(x);\r\n\t            }\r\n\t\r\n\t            if ( MODULO_MODE == 9 ) {\r\n\t\r\n\t                // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n\t                // r = x - qy    where  0 <= r < abs(y)\r\n\t                s = y.s;\r\n\t                y.s = 1;\r\n\t                q = div( x, y, 0, 3 );\r\n\t                y.s = s;\r\n\t                q.s *= s;\r\n\t            } else {\r\n\t                q = div( x, y, 0, MODULO_MODE );\r\n\t            }\r\n\t\r\n\t            return x.minus( q.times(y) );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n\t         * i.e. multiplied by -1.\r\n\t         */\r\n\t        P.negated = P.neg = function () {\r\n\t            var x = new BigNumber(this);\r\n\t            x.s = -x.s || null;\r\n\t            return x;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         *  n + 0 = n\r\n\t         *  n + N = N\r\n\t         *  n + I = I\r\n\t         *  0 + n = n\r\n\t         *  0 + 0 = 0\r\n\t         *  0 + N = N\r\n\t         *  0 + I = I\r\n\t         *  N + n = N\r\n\t         *  N + 0 = N\r\n\t         *  N + N = N\r\n\t         *  N + I = N\r\n\t         *  I + n = I\r\n\t         *  I + 0 = I\r\n\t         *  I + N = N\r\n\t         *  I + I = I\r\n\t         *\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n\t         * BigNumber(y, b).\r\n\t         */\r\n\t        P.plus = P.add = function ( y, b ) {\r\n\t            var t,\r\n\t                x = this,\r\n\t                a = x.s;\r\n\t\r\n\t            id = 12;\r\n\t            y = new BigNumber( y, b );\r\n\t            b = y.s;\r\n\t\r\n\t            // Either NaN?\r\n\t            if ( !a || !b ) return new BigNumber(NaN);\r\n\t\r\n\t            // Signs differ?\r\n\t             if ( a != b ) {\r\n\t                y.s = -b;\r\n\t                return x.minus(y);\r\n\t            }\r\n\t\r\n\t            var xe = x.e / LOG_BASE,\r\n\t                ye = y.e / LOG_BASE,\r\n\t                xc = x.c,\r\n\t                yc = y.c;\r\n\t\r\n\t            if ( !xe || !ye ) {\r\n\t\r\n\t                // Return ±Infinity if either ±Infinity.\r\n\t                if ( !xc || !yc ) return new BigNumber( a / 0 );\r\n\t\r\n\t                // Either zero?\r\n\t                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n\t                if ( !xc[0] || !yc[0] ) return yc[0] ? y : new BigNumber( xc[0] ? x : a * 0 );\r\n\t            }\r\n\t\r\n\t            xe = bitFloor(xe);\r\n\t            ye = bitFloor(ye);\r\n\t            xc = xc.slice();\r\n\t\r\n\t            // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n\t            if ( a = xe - ye ) {\r\n\t                if ( a > 0 ) {\r\n\t                    ye = xe;\r\n\t                    t = yc;\r\n\t                } else {\r\n\t                    a = -a;\r\n\t                    t = xc;\r\n\t                }\r\n\t\r\n\t                t.reverse();\r\n\t                for ( ; a--; t.push(0) );\r\n\t                t.reverse();\r\n\t            }\r\n\t\r\n\t            a = xc.length;\r\n\t            b = yc.length;\r\n\t\r\n\t            // Point xc to the longer array, and b to the shorter length.\r\n\t            if ( a - b < 0 ) t = yc, yc = xc, xc = t, b = a;\r\n\t\r\n\t            // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n\t            for ( a = 0; b; ) {\r\n\t                a = ( xc[--b] = xc[b] + yc[b] + a ) / BASE | 0;\r\n\t                xc[b] %= BASE;\r\n\t            }\r\n\t\r\n\t            if (a) {\r\n\t                xc.unshift(a);\r\n\t                ++ye;\r\n\t            }\r\n\t\r\n\t            // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\t            // ye = MAX_EXP + 1 possible\r\n\t            return normalise( y, xc, ye );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return the number of significant digits of the value of this BigNumber.\r\n\t         *\r\n\t         * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n\t         */\r\n\t        P.precision = P.sd = function (z) {\r\n\t            var n, v,\r\n\t                x = this,\r\n\t                c = x.c;\r\n\t\r\n\t            // 'precision() argument not a boolean or binary digit: {z}'\r\n\t            if ( z != null && z !== !!z && z !== 1 && z !== 0 ) {\r\n\t                if (ERRORS) raise( 13, 'argument' + notBool, z );\r\n\t                if ( z != !!z ) z = null;\r\n\t            }\r\n\t\r\n\t            if ( !c ) return null;\r\n\t            v = c.length - 1;\r\n\t            n = v * LOG_BASE + 1;\r\n\t\r\n\t            if ( v = c[v] ) {\r\n\t\r\n\t                // Subtract the number of trailing zeros of the last element.\r\n\t                for ( ; v % 10 == 0; v /= 10, n-- );\r\n\t\r\n\t                // Add the number of digits of the first element.\r\n\t                for ( v = c[0]; v >= 10; v /= 10, n++ );\r\n\t            }\r\n\t\r\n\t            if ( z && x.e + 1 > n ) n = x.e + 1;\r\n\t\r\n\t            return n;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n\t         * dp decimal places using rounding mode rm, or to 0 and ROUNDING_MODE respectively if\r\n\t         * omitted.\r\n\t         *\r\n\t         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n\t         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n\t         *\r\n\t         * 'round() decimal places out of range: {dp}'\r\n\t         * 'round() decimal places not an integer: {dp}'\r\n\t         * 'round() rounding mode not an integer: {rm}'\r\n\t         * 'round() rounding mode out of range: {rm}'\r\n\t         */\r\n\t        P.round = function ( dp, rm ) {\r\n\t            var n = new BigNumber(this);\r\n\t\r\n\t            if ( dp == null || isValidInt( dp, 0, MAX, 15 ) ) {\r\n\t                round( n, ~~dp + this.e + 1, rm == null ||\r\n\t                  !isValidInt( rm, 0, 8, 15, roundingMode ) ? ROUNDING_MODE : rm | 0 );\r\n\t            }\r\n\t\r\n\t            return n;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n\t         * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n\t         *\r\n\t         * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n\t         *\r\n\t         * If k is out of range and ERRORS is false, the result will be ±0 if k < 0, or ±Infinity\r\n\t         * otherwise.\r\n\t         *\r\n\t         * 'shift() argument not an integer: {k}'\r\n\t         * 'shift() argument out of range: {k}'\r\n\t         */\r\n\t        P.shift = function (k) {\r\n\t            var n = this;\r\n\t            return isValidInt( k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 16, 'argument' )\r\n\t\r\n\t              // k < 1e+21, or truncate(k) will produce exponential notation.\r\n\t              ? n.times( '1e' + truncate(k) )\r\n\t              : new BigNumber( n.c && n.c[0] && ( k < -MAX_SAFE_INTEGER || k > MAX_SAFE_INTEGER )\r\n\t                ? n.s * ( k < 0 ? 0 : 1 / 0 )\r\n\t                : n );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         *  sqrt(-n) =  N\r\n\t         *  sqrt( N) =  N\r\n\t         *  sqrt(-I) =  N\r\n\t         *  sqrt( I) =  I\r\n\t         *  sqrt( 0) =  0\r\n\t         *  sqrt(-0) = -0\r\n\t         *\r\n\t         * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n\t         * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n\t         */\r\n\t        P.squareRoot = P.sqrt = function () {\r\n\t            var m, n, r, rep, t,\r\n\t                x = this,\r\n\t                c = x.c,\r\n\t                s = x.s,\r\n\t                e = x.e,\r\n\t                dp = DECIMAL_PLACES + 4,\r\n\t                half = new BigNumber('0.5');\r\n\t\r\n\t            // Negative/NaN/Infinity/zero?\r\n\t            if ( s !== 1 || !c || !c[0] ) {\r\n\t                return new BigNumber( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );\r\n\t            }\r\n\t\r\n\t            // Initial estimate.\r\n\t            s = Math.sqrt( +x );\r\n\t\r\n\t            // Math.sqrt underflow/overflow?\r\n\t            // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n\t            if ( s == 0 || s == 1 / 0 ) {\r\n\t                n = coeffToString(c);\r\n\t                if ( ( n.length + e ) % 2 == 0 ) n += '0';\r\n\t                s = Math.sqrt(n);\r\n\t                e = bitFloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );\r\n\t\r\n\t                if ( s == 1 / 0 ) {\r\n\t                    n = '1e' + e;\r\n\t                } else {\r\n\t                    n = s.toExponential();\r\n\t                    n = n.slice( 0, n.indexOf('e') + 1 ) + e;\r\n\t                }\r\n\t\r\n\t                r = new BigNumber(n);\r\n\t            } else {\r\n\t                r = new BigNumber( s + '' );\r\n\t            }\r\n\t\r\n\t            // Check for zero.\r\n\t            // r could be zero if MIN_EXP is changed after the this value was created.\r\n\t            // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n\t            // coeffToString to throw.\r\n\t            if ( r.c[0] ) {\r\n\t                e = r.e;\r\n\t                s = e + dp;\r\n\t                if ( s < 3 ) s = 0;\r\n\t\r\n\t                // Newton-Raphson iteration.\r\n\t                for ( ; ; ) {\r\n\t                    t = r;\r\n\t                    r = half.times( t.plus( div( x, t, dp, 1 ) ) );\r\n\t\r\n\t                    if ( coeffToString( t.c   ).slice( 0, s ) === ( n =\r\n\t                         coeffToString( r.c ) ).slice( 0, s ) ) {\r\n\t\r\n\t                        // The exponent of r may here be one less than the final result exponent,\r\n\t                        // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n\t                        // are indexed correctly.\r\n\t                        if ( r.e < e ) --s;\r\n\t                        n = n.slice( s - 3, s + 1 );\r\n\t\r\n\t                        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n\t                        // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n\t                        // iteration.\r\n\t                        if ( n == '9999' || !rep && n == '4999' ) {\r\n\t\r\n\t                            // On the first iteration only, check to see if rounding up gives the\r\n\t                            // exact result as the nines may infinitely repeat.\r\n\t                            if ( !rep ) {\r\n\t                                round( t, t.e + DECIMAL_PLACES + 2, 0 );\r\n\t\r\n\t                                if ( t.times(t).eq(x) ) {\r\n\t                                    r = t;\r\n\t                                    break;\r\n\t                                }\r\n\t                            }\r\n\t\r\n\t                            dp += 4;\r\n\t                            s += 4;\r\n\t                            rep = 1;\r\n\t                        } else {\r\n\t\r\n\t                            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n\t                            // result. If not, then there are further digits and m will be truthy.\r\n\t                            if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {\r\n\t\r\n\t                                // Truncate to the first rounding digit.\r\n\t                                round( r, r.e + DECIMAL_PLACES + 2, 1 );\r\n\t                                m = !r.times(r).eq(x);\r\n\t                            }\r\n\t\r\n\t                            break;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t\r\n\t            return round( r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         *  n * 0 = 0\r\n\t         *  n * N = N\r\n\t         *  n * I = I\r\n\t         *  0 * n = 0\r\n\t         *  0 * 0 = 0\r\n\t         *  0 * N = N\r\n\t         *  0 * I = N\r\n\t         *  N * n = N\r\n\t         *  N * 0 = N\r\n\t         *  N * N = N\r\n\t         *  N * I = N\r\n\t         *  I * n = I\r\n\t         *  I * 0 = N\r\n\t         *  I * N = N\r\n\t         *  I * I = I\r\n\t         *\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber times the value of\r\n\t         * BigNumber(y, b).\r\n\t         */\r\n\t        P.times = P.mul = function ( y, b ) {\r\n\t            var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n\t                base, sqrtBase,\r\n\t                x = this,\r\n\t                xc = x.c,\r\n\t                yc = ( id = 17, y = new BigNumber( y, b ) ).c;\r\n\t\r\n\t            // Either NaN, ±Infinity or ±0?\r\n\t            if ( !xc || !yc || !xc[0] || !yc[0] ) {\r\n\t\r\n\t                // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n\t                if ( !x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc ) {\r\n\t                    y.c = y.e = y.s = null;\r\n\t                } else {\r\n\t                    y.s *= x.s;\r\n\t\r\n\t                    // Return ±Infinity if either is ±Infinity.\r\n\t                    if ( !xc || !yc ) {\r\n\t                        y.c = y.e = null;\r\n\t\r\n\t                    // Return ±0 if either is ±0.\r\n\t                    } else {\r\n\t                        y.c = [0];\r\n\t                        y.e = 0;\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                return y;\r\n\t            }\r\n\t\r\n\t            e = bitFloor( x.e / LOG_BASE ) + bitFloor( y.e / LOG_BASE );\r\n\t            y.s *= x.s;\r\n\t            xcL = xc.length;\r\n\t            ycL = yc.length;\r\n\t\r\n\t            // Ensure xc points to longer array and xcL to its length.\r\n\t            if ( xcL < ycL ) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\t\r\n\t            // Initialise the result array with zeros.\r\n\t            for ( i = xcL + ycL, zc = []; i--; zc.push(0) );\r\n\t\r\n\t            base = BASE;\r\n\t            sqrtBase = SQRT_BASE;\r\n\t\r\n\t            for ( i = ycL; --i >= 0; ) {\r\n\t                c = 0;\r\n\t                ylo = yc[i] % sqrtBase;\r\n\t                yhi = yc[i] / sqrtBase | 0;\r\n\t\r\n\t                for ( k = xcL, j = i + k; j > i; ) {\r\n\t                    xlo = xc[--k] % sqrtBase;\r\n\t                    xhi = xc[k] / sqrtBase | 0;\r\n\t                    m = yhi * xlo + xhi * ylo;\r\n\t                    xlo = ylo * xlo + ( ( m % sqrtBase ) * sqrtBase ) + zc[j] + c;\r\n\t                    c = ( xlo / base | 0 ) + ( m / sqrtBase | 0 ) + yhi * xhi;\r\n\t                    zc[j--] = xlo % base;\r\n\t                }\r\n\t\r\n\t                zc[j] = c;\r\n\t            }\r\n\t\r\n\t            if (c) {\r\n\t                ++e;\r\n\t            } else {\r\n\t                zc.shift();\r\n\t            }\r\n\t\r\n\t            return normalise( y, zc, e );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n\t         * sd significant digits using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n\t         *\r\n\t         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n\t         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n\t         *\r\n\t         * 'toDigits() precision out of range: {sd}'\r\n\t         * 'toDigits() precision not an integer: {sd}'\r\n\t         * 'toDigits() rounding mode not an integer: {rm}'\r\n\t         * 'toDigits() rounding mode out of range: {rm}'\r\n\t         */\r\n\t        P.toDigits = function ( sd, rm ) {\r\n\t            var n = new BigNumber(this);\r\n\t            sd = sd == null || !isValidInt( sd, 1, MAX, 18, 'precision' ) ? null : sd | 0;\r\n\t            rm = rm == null || !isValidInt( rm, 0, 8, 18, roundingMode ) ? ROUNDING_MODE : rm | 0;\r\n\t            return sd ? round( n, sd, rm ) : n;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a string representing the value of this BigNumber in exponential notation and\r\n\t         * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n\t         *\r\n\t         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n\t         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n\t         *\r\n\t         * 'toExponential() decimal places not an integer: {dp}'\r\n\t         * 'toExponential() decimal places out of range: {dp}'\r\n\t         * 'toExponential() rounding mode not an integer: {rm}'\r\n\t         * 'toExponential() rounding mode out of range: {rm}'\r\n\t         */\r\n\t        P.toExponential = function ( dp, rm ) {\r\n\t            return format( this,\r\n\t              dp != null && isValidInt( dp, 0, MAX, 19 ) ? ~~dp + 1 : null, rm, 19 );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n\t         * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n\t         *\r\n\t         * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n\t         * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n\t         *\r\n\t         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n\t         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n\t         *\r\n\t         * 'toFixed() decimal places not an integer: {dp}'\r\n\t         * 'toFixed() decimal places out of range: {dp}'\r\n\t         * 'toFixed() rounding mode not an integer: {rm}'\r\n\t         * 'toFixed() rounding mode out of range: {rm}'\r\n\t         */\r\n\t        P.toFixed = function ( dp, rm ) {\r\n\t            return format( this, dp != null && isValidInt( dp, 0, MAX, 20 )\r\n\t              ? ~~dp + this.e + 1 : null, rm, 20 );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n\t         * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n\t         * of the FORMAT object (see BigNumber.config).\r\n\t         *\r\n\t         * FORMAT = {\r\n\t         *      decimalSeparator : '.',\r\n\t         *      groupSeparator : ',',\r\n\t         *      groupSize : 3,\r\n\t         *      secondaryGroupSize : 0,\r\n\t         *      fractionGroupSeparator : '\\xA0',    // non-breaking space\r\n\t         *      fractionGroupSize : 0\r\n\t         * };\r\n\t         *\r\n\t         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n\t         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n\t         *\r\n\t         * 'toFormat() decimal places not an integer: {dp}'\r\n\t         * 'toFormat() decimal places out of range: {dp}'\r\n\t         * 'toFormat() rounding mode not an integer: {rm}'\r\n\t         * 'toFormat() rounding mode out of range: {rm}'\r\n\t         */\r\n\t        P.toFormat = function ( dp, rm ) {\r\n\t            var str = format( this, dp != null && isValidInt( dp, 0, MAX, 21 )\r\n\t              ? ~~dp + this.e + 1 : null, rm, 21 );\r\n\t\r\n\t            if ( this.c ) {\r\n\t                var i,\r\n\t                    arr = str.split('.'),\r\n\t                    g1 = +FORMAT.groupSize,\r\n\t                    g2 = +FORMAT.secondaryGroupSize,\r\n\t                    groupSeparator = FORMAT.groupSeparator,\r\n\t                    intPart = arr[0],\r\n\t                    fractionPart = arr[1],\r\n\t                    isNeg = this.s < 0,\r\n\t                    intDigits = isNeg ? intPart.slice(1) : intPart,\r\n\t                    len = intDigits.length;\r\n\t\r\n\t                if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\t\r\n\t                if ( g1 > 0 && len > 0 ) {\r\n\t                    i = len % g1 || g1;\r\n\t                    intPart = intDigits.substr( 0, i );\r\n\t\r\n\t                    for ( ; i < len; i += g1 ) {\r\n\t                        intPart += groupSeparator + intDigits.substr( i, g1 );\r\n\t                    }\r\n\t\r\n\t                    if ( g2 > 0 ) intPart += groupSeparator + intDigits.slice(i);\r\n\t                    if (isNeg) intPart = '-' + intPart;\r\n\t                }\r\n\t\r\n\t                str = fractionPart\r\n\t                  ? intPart + FORMAT.decimalSeparator + ( ( g2 = +FORMAT.fractionGroupSize )\r\n\t                    ? fractionPart.replace( new RegExp( '\\\\d{' + g2 + '}\\\\B', 'g' ),\r\n\t                      '$&' + FORMAT.fractionGroupSeparator )\r\n\t                    : fractionPart )\r\n\t                  : intPart;\r\n\t            }\r\n\t\r\n\t            return str;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a string array representing the value of this BigNumber as a simple fraction with\r\n\t         * an integer numerator and an integer denominator. The denominator will be a positive\r\n\t         * non-zero value less than or equal to the specified maximum denominator. If a maximum\r\n\t         * denominator is not specified, the denominator will be the lowest value necessary to\r\n\t         * represent the number exactly.\r\n\t         *\r\n\t         * [md] {number|string|BigNumber} Integer >= 1 and < Infinity. The maximum denominator.\r\n\t         *\r\n\t         * 'toFraction() max denominator not an integer: {md}'\r\n\t         * 'toFraction() max denominator out of range: {md}'\r\n\t         */\r\n\t        P.toFraction = function (md) {\r\n\t            var arr, d0, d2, e, exp, n, n0, q, s,\r\n\t                k = ERRORS,\r\n\t                x = this,\r\n\t                xc = x.c,\r\n\t                d = new BigNumber(ONE),\r\n\t                n1 = d0 = new BigNumber(ONE),\r\n\t                d1 = n0 = new BigNumber(ONE);\r\n\t\r\n\t            if ( md != null ) {\r\n\t                ERRORS = false;\r\n\t                n = new BigNumber(md);\r\n\t                ERRORS = k;\r\n\t\r\n\t                if ( !( k = n.isInt() ) || n.lt(ONE) ) {\r\n\t\r\n\t                    if (ERRORS) {\r\n\t                        raise( 22,\r\n\t                          'max denominator ' + ( k ? 'out of range' : 'not an integer' ), md );\r\n\t                    }\r\n\t\r\n\t                    // ERRORS is false:\r\n\t                    // If md is a finite non-integer >= 1, round it to an integer and use it.\r\n\t                    md = !k && n.c && round( n, n.e + 1, 1 ).gte(ONE) ? n : null;\r\n\t                }\r\n\t            }\r\n\t\r\n\t            if ( !xc ) return x.toString();\r\n\t            s = coeffToString(xc);\r\n\t\r\n\t            // Determine initial denominator.\r\n\t            // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n\t            e = d.e = s.length - x.e - 1;\r\n\t            d.c[0] = POWS_TEN[ ( exp = e % LOG_BASE ) < 0 ? LOG_BASE + exp : exp ];\r\n\t            md = !md || n.cmp(d) > 0 ? ( e > 0 ? d : n1 ) : n;\r\n\t\r\n\t            exp = MAX_EXP;\r\n\t            MAX_EXP = 1 / 0;\r\n\t            n = new BigNumber(s);\r\n\t\r\n\t            // n0 = d1 = 0\r\n\t            n0.c[0] = 0;\r\n\t\r\n\t            for ( ; ; )  {\r\n\t                q = div( n, d, 0, 1 );\r\n\t                d2 = d0.plus( q.times(d1) );\r\n\t                if ( d2.cmp(md) == 1 ) break;\r\n\t                d0 = d1;\r\n\t                d1 = d2;\r\n\t                n1 = n0.plus( q.times( d2 = n1 ) );\r\n\t                n0 = d2;\r\n\t                d = n.minus( q.times( d2 = d ) );\r\n\t                n = d2;\r\n\t            }\r\n\t\r\n\t            d2 = div( md.minus(d0), d1, 0, 1 );\r\n\t            n0 = n0.plus( d2.times(n1) );\r\n\t            d0 = d0.plus( d2.times(d1) );\r\n\t            n0.s = n1.s = x.s;\r\n\t            e *= 2;\r\n\t\r\n\t            // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n\t            arr = div( n1, d1, e, ROUNDING_MODE ).minus(x).abs().cmp(\r\n\t                  div( n0, d0, e, ROUNDING_MODE ).minus(x).abs() ) < 1\r\n\t                    ? [ n1.toString(), d1.toString() ]\r\n\t                    : [ n0.toString(), d0.toString() ];\r\n\t\r\n\t            MAX_EXP = exp;\r\n\t            return arr;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return the value of this BigNumber converted to a number primitive.\r\n\t         */\r\n\t        P.toNumber = function () {\r\n\t            var x = this;\r\n\t\r\n\t            // Ensure zero has correct sign.\r\n\t            return +x || ( x.s ? x.s * 0 : NaN );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a BigNumber whose value is the value of this BigNumber raised to the power n.\r\n\t         * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n\t         * If POW_PRECISION is not 0, round to POW_PRECISION using ROUNDING_MODE.\r\n\t         *\r\n\t         * n {number} Integer, -9007199254740992 to 9007199254740992 inclusive.\r\n\t         * (Performs 54 loop iterations for n of 9007199254740992.)\r\n\t         *\r\n\t         * 'pow() exponent not an integer: {n}'\r\n\t         * 'pow() exponent out of range: {n}'\r\n\t         */\r\n\t        P.toPower = P.pow = function (n) {\r\n\t            var k, y,\r\n\t                i = mathfloor( n < 0 ? -n : +n ),\r\n\t                x = this;\r\n\t\r\n\t            // Pass ±Infinity to Math.pow if exponent is out of range.\r\n\t            if ( !isValidInt( n, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 23, 'exponent' ) &&\r\n\t              ( !isFinite(n) || i > MAX_SAFE_INTEGER && ( n /= 0 ) ||\r\n\t                parseFloat(n) != n && !( n = NaN ) ) ) {\r\n\t                return new BigNumber( Math.pow( +x, n ) );\r\n\t            }\r\n\t\r\n\t            // Truncating each coefficient array to a length of k after each multiplication equates\r\n\t            // to truncating significant digits to POW_PRECISION + [28, 41], i.e. there will be a\r\n\t            // minimum of 28 guard digits retained. (Using + 1.5 would give [9, 21] guard digits.)\r\n\t            k = POW_PRECISION ? mathceil( POW_PRECISION / LOG_BASE + 2 ) : 0;\r\n\t            y = new BigNumber(ONE);\r\n\t\r\n\t            for ( ; ; ) {\r\n\t\r\n\t                if ( i % 2 ) {\r\n\t                    y = y.times(x);\r\n\t                    if ( !y.c ) break;\r\n\t                    if ( k && y.c.length > k ) y.c.length = k;\r\n\t                }\r\n\t\r\n\t                i = mathfloor( i / 2 );\r\n\t                if ( !i ) break;\r\n\t\r\n\t                x = x.times(x);\r\n\t                if ( k && x.c && x.c.length > k ) x.c.length = k;\r\n\t            }\r\n\t\r\n\t            if ( n < 0 ) y = ONE.div(y);\r\n\t            return k ? round( y, POW_PRECISION, ROUNDING_MODE ) : y;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n\t         * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n\t         * necessary to represent the integer part of the value in fixed-point notation, then use\r\n\t         * exponential notation.\r\n\t         *\r\n\t         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n\t         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n\t         *\r\n\t         * 'toPrecision() precision not an integer: {sd}'\r\n\t         * 'toPrecision() precision out of range: {sd}'\r\n\t         * 'toPrecision() rounding mode not an integer: {rm}'\r\n\t         * 'toPrecision() rounding mode out of range: {rm}'\r\n\t         */\r\n\t        P.toPrecision = function ( sd, rm ) {\r\n\t            return format( this, sd != null && isValidInt( sd, 1, MAX, 24, 'precision' )\r\n\t              ? sd | 0 : null, rm, 24 );\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n\t         * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n\t         * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n\t         * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n\t         * TO_EXP_NEG, return exponential notation.\r\n\t         *\r\n\t         * [b] {number} Integer, 2 to 64 inclusive.\r\n\t         *\r\n\t         * 'toString() base not an integer: {b}'\r\n\t         * 'toString() base out of range: {b}'\r\n\t         */\r\n\t        P.toString = function (b) {\r\n\t            var str,\r\n\t                n = this,\r\n\t                s = n.s,\r\n\t                e = n.e;\r\n\t\r\n\t            // Infinity or NaN?\r\n\t            if ( e === null ) {\r\n\t\r\n\t                if (s) {\r\n\t                    str = 'Infinity';\r\n\t                    if ( s < 0 ) str = '-' + str;\r\n\t                } else {\r\n\t                    str = 'NaN';\r\n\t                }\r\n\t            } else {\r\n\t                str = coeffToString( n.c );\r\n\t\r\n\t                if ( b == null || !isValidInt( b, 2, 64, 25, 'base' ) ) {\r\n\t                    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n\t                      ? toExponential( str, e )\r\n\t                      : toFixedPoint( str, e );\r\n\t                } else {\r\n\t                    str = convertBase( toFixedPoint( str, e ), b | 0, 10, s );\r\n\t                }\r\n\t\r\n\t                if ( s < 0 && n.c[0] ) str = '-' + str;\r\n\t            }\r\n\t\r\n\t            return str;\r\n\t        };\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return a new BigNumber whose value is the value of this BigNumber truncated to a whole\r\n\t         * number.\r\n\t         */\r\n\t        P.truncated = P.trunc = function () {\r\n\t            return round( new BigNumber(this), this.e + 1, 1 );\r\n\t        };\r\n\t\r\n\t\r\n\t\r\n\t        /*\r\n\t         * Return as toString, but do not accept a base argument.\r\n\t         */\r\n\t        P.valueOf = P.toJSON = function () {\r\n\t            return this.toString();\r\n\t        };\r\n\t\r\n\t\r\n\t        // Aliases for BigDecimal methods.\r\n\t        //P.add = P.plus;         // P.add included above\r\n\t        //P.subtract = P.minus;   // P.sub included above\r\n\t        //P.multiply = P.times;   // P.mul included above\r\n\t        //P.divide = P.div;\r\n\t        //P.remainder = P.mod;\r\n\t        //P.compareTo = P.cmp;\r\n\t        //P.negate = P.neg;\r\n\t\r\n\t\r\n\t        if ( configObj != null ) BigNumber.config(configObj);\r\n\t\r\n\t        return BigNumber;\r\n\t    }\r\n\t\r\n\t\r\n\t    // PRIVATE HELPER FUNCTIONS\r\n\t\r\n\t\r\n\t    function bitFloor(n) {\r\n\t        var i = n | 0;\r\n\t        return n > 0 || n === i ? i : i - 1;\r\n\t    }\r\n\t\r\n\t\r\n\t    // Return a coefficient array as a string of base 10 digits.\r\n\t    function coeffToString(a) {\r\n\t        var s, z,\r\n\t            i = 1,\r\n\t            j = a.length,\r\n\t            r = a[0] + '';\r\n\t\r\n\t        for ( ; i < j; ) {\r\n\t            s = a[i++] + '';\r\n\t            z = LOG_BASE - s.length;\r\n\t            for ( ; z--; s = '0' + s );\r\n\t            r += s;\r\n\t        }\r\n\t\r\n\t        // Determine trailing zeros.\r\n\t        for ( j = r.length; r.charCodeAt(--j) === 48; );\r\n\t        return r.slice( 0, j + 1 || 1 );\r\n\t    }\r\n\t\r\n\t\r\n\t    // Compare the value of BigNumbers x and y.\r\n\t    function compare( x, y ) {\r\n\t        var a, b,\r\n\t            xc = x.c,\r\n\t            yc = y.c,\r\n\t            i = x.s,\r\n\t            j = y.s,\r\n\t            k = x.e,\r\n\t            l = y.e;\r\n\t\r\n\t        // Either NaN?\r\n\t        if ( !i || !j ) return null;\r\n\t\r\n\t        a = xc && !xc[0];\r\n\t        b = yc && !yc[0];\r\n\t\r\n\t        // Either zero?\r\n\t        if ( a || b ) return a ? b ? 0 : -j : i;\r\n\t\r\n\t        // Signs differ?\r\n\t        if ( i != j ) return i;\r\n\t\r\n\t        a = i < 0;\r\n\t        b = k == l;\r\n\t\r\n\t        // Either Infinity?\r\n\t        if ( !xc || !yc ) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\t\r\n\t        // Compare exponents.\r\n\t        if ( !b ) return k > l ^ a ? 1 : -1;\r\n\t\r\n\t        j = ( k = xc.length ) < ( l = yc.length ) ? k : l;\r\n\t\r\n\t        // Compare digit by digit.\r\n\t        for ( i = 0; i < j; i++ ) if ( xc[i] != yc[i] ) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\t\r\n\t        // Compare lengths.\r\n\t        return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n\t    }\r\n\t\r\n\t\r\n\t    /*\r\n\t     * Return true if n is a valid number in range, otherwise false.\r\n\t     * Use for argument validation when ERRORS is false.\r\n\t     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.\r\n\t     */\r\n\t    function intValidatorNoErrors( n, min, max ) {\r\n\t        return ( n = truncate(n) ) >= min && n <= max;\r\n\t    }\r\n\t\r\n\t\r\n\t    function isArray(obj) {\r\n\t        return Object.prototype.toString.call(obj) == '[object Array]';\r\n\t    }\r\n\t\r\n\t\r\n\t    /*\r\n\t     * Convert string of baseIn to an array of numbers of baseOut.\r\n\t     * Eg. convertBase('255', 10, 16) returns [15, 15].\r\n\t     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n\t     */\r\n\t    function toBaseOut( str, baseIn, baseOut ) {\r\n\t        var j,\r\n\t            arr = [0],\r\n\t            arrL,\r\n\t            i = 0,\r\n\t            len = str.length;\r\n\t\r\n\t        for ( ; i < len; ) {\r\n\t            for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );\r\n\t            arr[ j = 0 ] += ALPHABET.indexOf( str.charAt( i++ ) );\r\n\t\r\n\t            for ( ; j < arr.length; j++ ) {\r\n\t\r\n\t                if ( arr[j] > baseOut - 1 ) {\r\n\t                    if ( arr[j + 1] == null ) arr[j + 1] = 0;\r\n\t                    arr[j + 1] += arr[j] / baseOut | 0;\r\n\t                    arr[j] %= baseOut;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return arr.reverse();\r\n\t    }\r\n\t\r\n\t\r\n\t    function toExponential( str, e ) {\r\n\t        return ( str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str ) +\r\n\t          ( e < 0 ? 'e' : 'e+' ) + e;\r\n\t    }\r\n\t\r\n\t\r\n\t    function toFixedPoint( str, e ) {\r\n\t        var len, z;\r\n\t\r\n\t        // Negative exponent?\r\n\t        if ( e < 0 ) {\r\n\t\r\n\t            // Prepend zeros.\r\n\t            for ( z = '0.'; ++e; z += '0' );\r\n\t            str = z + str;\r\n\t\r\n\t        // Positive exponent\r\n\t        } else {\r\n\t            len = str.length;\r\n\t\r\n\t            // Append zeros.\r\n\t            if ( ++e > len ) {\r\n\t                for ( z = '0', e -= len; --e; z += '0' );\r\n\t                str += z;\r\n\t            } else if ( e < len ) {\r\n\t                str = str.slice( 0, e ) + '.' + str.slice(e);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        return str;\r\n\t    }\r\n\t\r\n\t\r\n\t    function truncate(n) {\r\n\t        n = parseFloat(n);\r\n\t        return n < 0 ? mathceil(n) : mathfloor(n);\r\n\t    }\r\n\t\r\n\t\r\n\t    // EXPORT\r\n\t\r\n\t\r\n\t    BigNumber = another();\r\n\t\r\n\t    // AMD.\r\n\t    if ( true ) {\r\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return BigNumber; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t    // Node and other environments that support module.exports.\r\n\t    } else if ( typeof module != 'undefined' && module.exports ) {\r\n\t        module.exports = BigNumber;\r\n\t        if ( !crypto ) try { crypto = require('crypto'); } catch (e) {}\r\n\t\r\n\t    // Browser.\r\n\t    } else {\r\n\t        global.BigNumber = BigNumber;\r\n\t    }\r\n\t})(this);\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file sha3.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar CryptoJS = __webpack_require__(28);\n\tvar sha3 = __webpack_require__(40);\n\t\n\tmodule.exports = function (value, options) {\n\t    if (options && options.encoding === 'hex') {\n\t        if (value.length > 2 && value.substr(0, 2) === '0x') {\n\t            value = value.substr(2);\n\t        }\n\t        value = CryptoJS.enc.Hex.parse(value);\n\t    }\n\t\n\t    return sha3(value, {\n\t        outputLength: 256\n\t    }).toString();\n\t};\n\t\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(30), __webpack_require__(31), __webpack_require__(32), __webpack_require__(33), __webpack_require__(34), __webpack_require__(35), __webpack_require__(36), __webpack_require__(37), __webpack_require__(38), __webpack_require__(39), __webpack_require__(40), __webpack_require__(41), __webpack_require__(42), __webpack_require__(43), __webpack_require__(44), __webpack_require__(45), __webpack_require__(46), __webpack_require__(47), __webpack_require__(48), __webpack_require__(49), __webpack_require__(50), __webpack_require__(51), __webpack_require__(52), __webpack_require__(53), __webpack_require__(54), __webpack_require__(55), __webpack_require__(56), __webpack_require__(57), __webpack_require__(58), __webpack_require__(59), __webpack_require__(60), __webpack_require__(61));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\troot.CryptoJS = factory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\treturn CryptoJS;\n\t\n\t}));\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory();\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\troot.CryptoJS = factory();\n\t\t}\n\t}(this, function () {\n\t\n\t\t/**\n\t\t * CryptoJS core components.\n\t\t */\n\t\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t\t    /*\n\t\t     * Local polyfil of Object.create\n\t\t     */\n\t\t    var create = Object.create || (function () {\n\t\t        function F() {};\n\t\n\t\t        return function (obj) {\n\t\t            var subtype;\n\t\n\t\t            F.prototype = obj;\n\t\n\t\t            subtype = new F();\n\t\n\t\t            F.prototype = null;\n\t\n\t\t            return subtype;\n\t\t        };\n\t\t    }())\n\t\n\t\t    /**\n\t\t     * CryptoJS namespace.\n\t\t     */\n\t\t    var C = {};\n\t\n\t\t    /**\n\t\t     * Library namespace.\n\t\t     */\n\t\t    var C_lib = C.lib = {};\n\t\n\t\t    /**\n\t\t     * Base object for prototypal inheritance.\n\t\t     */\n\t\t    var Base = C_lib.Base = (function () {\n\t\n\t\n\t\t        return {\n\t\t            /**\n\t\t             * Creates a new object that inherits from this object.\n\t\t             *\n\t\t             * @param {Object} overrides Properties to copy into the new object.\n\t\t             *\n\t\t             * @return {Object} The new object.\n\t\t             *\n\t\t             * @static\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t\t             *         field: 'value',\n\t\t             *\n\t\t             *         method: function () {\n\t\t             *         }\n\t\t             *     });\n\t\t             */\n\t\t            extend: function (overrides) {\n\t\t                // Spawn\n\t\t                var subtype = create(this);\n\t\n\t\t                // Augment\n\t\t                if (overrides) {\n\t\t                    subtype.mixIn(overrides);\n\t\t                }\n\t\n\t\t                // Create default initializer\n\t\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t\t                    subtype.init = function () {\n\t\t                        subtype.$super.init.apply(this, arguments);\n\t\t                    };\n\t\t                }\n\t\n\t\t                // Initializer's prototype is the subtype object\n\t\t                subtype.init.prototype = subtype;\n\t\n\t\t                // Reference supertype\n\t\t                subtype.$super = this;\n\t\n\t\t                return subtype;\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Extends this object and runs the init method.\n\t\t             * Arguments to create() will be passed to init().\n\t\t             *\n\t\t             * @return {Object} The new object.\n\t\t             *\n\t\t             * @static\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var instance = MyType.create();\n\t\t             */\n\t\t            create: function () {\n\t\t                var instance = this.extend();\n\t\t                instance.init.apply(instance, arguments);\n\t\n\t\t                return instance;\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Initializes a newly created object.\n\t\t             * Override this method to add some logic when your objects are created.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t\t             *         init: function () {\n\t\t             *             // ...\n\t\t             *         }\n\t\t             *     });\n\t\t             */\n\t\t            init: function () {\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Copies properties into this object.\n\t\t             *\n\t\t             * @param {Object} properties The properties to mix in.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     MyType.mixIn({\n\t\t             *         field: 'value'\n\t\t             *     });\n\t\t             */\n\t\t            mixIn: function (properties) {\n\t\t                for (var propertyName in properties) {\n\t\t                    if (properties.hasOwnProperty(propertyName)) {\n\t\t                        this[propertyName] = properties[propertyName];\n\t\t                    }\n\t\t                }\n\t\n\t\t                // IE won't copy toString using the loop above\n\t\t                if (properties.hasOwnProperty('toString')) {\n\t\t                    this.toString = properties.toString;\n\t\t                }\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Creates a copy of this object.\n\t\t             *\n\t\t             * @return {Object} The clone.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var clone = instance.clone();\n\t\t             */\n\t\t            clone: function () {\n\t\t                return this.init.prototype.extend(this);\n\t\t            }\n\t\t        };\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * An array of 32-bit words.\n\t\t     *\n\t\t     * @property {Array} words The array of 32-bit words.\n\t\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t\t     */\n\t\t    var WordArray = C_lib.WordArray = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created word array.\n\t\t         *\n\t\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t\t         */\n\t\t        init: function (words, sigBytes) {\n\t\t            words = this.words = words || [];\n\t\n\t\t            if (sigBytes != undefined) {\n\t\t                this.sigBytes = sigBytes;\n\t\t            } else {\n\t\t                this.sigBytes = words.length * 4;\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts this word array to a string.\n\t\t         *\n\t\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t\t         *\n\t\t         * @return {string} The stringified word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var string = wordArray + '';\n\t\t         *     var string = wordArray.toString();\n\t\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t\t         */\n\t\t        toString: function (encoder) {\n\t\t            return (encoder || Hex).stringify(this);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Concatenates a word array to this word array.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array to append.\n\t\t         *\n\t\t         * @return {WordArray} This word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     wordArray1.concat(wordArray2);\n\t\t         */\n\t\t        concat: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var thisWords = this.words;\n\t\t            var thatWords = wordArray.words;\n\t\t            var thisSigBytes = this.sigBytes;\n\t\t            var thatSigBytes = wordArray.sigBytes;\n\t\n\t\t            // Clamp excess bits\n\t\t            this.clamp();\n\t\n\t\t            // Concat\n\t\t            if (thisSigBytes % 4) {\n\t\t                // Copy one byte at a time\n\t\t                for (var i = 0; i < thatSigBytes; i++) {\n\t\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t\t                }\n\t\t            } else {\n\t\t                // Copy one word at a time\n\t\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t\t                }\n\t\t            }\n\t\t            this.sigBytes += thatSigBytes;\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Removes insignificant bits.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     wordArray.clamp();\n\t\t         */\n\t\t        clamp: function () {\n\t\t            // Shortcuts\n\t\t            var words = this.words;\n\t\t            var sigBytes = this.sigBytes;\n\t\n\t\t            // Clamp\n\t\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t\t            words.length = Math.ceil(sigBytes / 4);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this word array.\n\t\t         *\n\t\t         * @return {WordArray} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = wordArray.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\t            clone.words = this.words.slice(0);\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a word array filled with random bytes.\n\t\t         *\n\t\t         * @param {number} nBytes The number of random bytes to generate.\n\t\t         *\n\t\t         * @return {WordArray} The random word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t\t         */\n\t\t        random: function (nBytes) {\n\t\t            var words = [];\n\t\n\t\t            var r = (function (m_w) {\n\t\t                var m_w = m_w;\n\t\t                var m_z = 0x3ade68b1;\n\t\t                var mask = 0xffffffff;\n\t\n\t\t                return function () {\n\t\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t\t                    result /= 0x100000000;\n\t\t                    result += 0.5;\n\t\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t\t                }\n\t\t            });\n\t\n\t\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\t\n\t\t                rcache = _r() * 0x3ade67b7;\n\t\t                words.push((_r() * 0x100000000) | 0);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, nBytes);\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Encoder namespace.\n\t\t     */\n\t\t    var C_enc = C.enc = {};\n\t\n\t\t    /**\n\t\t     * Hex encoding strategy.\n\t\t     */\n\t\t    var Hex = C_enc.Hex = {\n\t\t        /**\n\t\t         * Converts a word array to a hex string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The hex string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var hexChars = [];\n\t\t            for (var i = 0; i < sigBytes; i++) {\n\t\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                hexChars.push((bite >>> 4).toString(16));\n\t\t                hexChars.push((bite & 0x0f).toString(16));\n\t\t            }\n\t\n\t\t            return hexChars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a hex string to a word array.\n\t\t         *\n\t\t         * @param {string} hexStr The hex string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t\t         */\n\t\t        parse: function (hexStr) {\n\t\t            // Shortcut\n\t\t            var hexStrLength = hexStr.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, hexStrLength / 2);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Latin1 encoding strategy.\n\t\t     */\n\t\t    var Latin1 = C_enc.Latin1 = {\n\t\t        /**\n\t\t         * Converts a word array to a Latin1 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The Latin1 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var latin1Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i++) {\n\t\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                latin1Chars.push(String.fromCharCode(bite));\n\t\t            }\n\t\n\t\t            return latin1Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a Latin1 string to a word array.\n\t\t         *\n\t\t         * @param {string} latin1Str The Latin1 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t\t         */\n\t\t        parse: function (latin1Str) {\n\t\t            // Shortcut\n\t\t            var latin1StrLength = latin1Str.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < latin1StrLength; i++) {\n\t\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, latin1StrLength);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * UTF-8 encoding strategy.\n\t\t     */\n\t\t    var Utf8 = C_enc.Utf8 = {\n\t\t        /**\n\t\t         * Converts a word array to a UTF-8 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The UTF-8 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            try {\n\t\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t\t            } catch (e) {\n\t\t                throw new Error('Malformed UTF-8 data');\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a UTF-8 string to a word array.\n\t\t         *\n\t\t         * @param {string} utf8Str The UTF-8 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t\t         */\n\t\t        parse: function (utf8Str) {\n\t\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Abstract buffered block algorithm template.\n\t\t     *\n\t\t     * The property blockSize must be implemented in a concrete subtype.\n\t\t     *\n\t\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t\t     */\n\t\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t\t        /**\n\t\t         * Resets this block algorithm's data buffer to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     bufferedBlockAlgorithm.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Initial values\n\t\t            this._data = new WordArray.init();\n\t\t            this._nDataBytes = 0;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Adds new data to this block algorithm's buffer.\n\t\t         *\n\t\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     bufferedBlockAlgorithm._append('data');\n\t\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t\t         */\n\t\t        _append: function (data) {\n\t\t            // Convert string to WordArray, else assume WordArray already\n\t\t            if (typeof data == 'string') {\n\t\t                data = Utf8.parse(data);\n\t\t            }\n\t\n\t\t            // Append\n\t\t            this._data.concat(data);\n\t\t            this._nDataBytes += data.sigBytes;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Processes available data blocks.\n\t\t         *\n\t\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t\t         *\n\t\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t\t         *\n\t\t         * @return {WordArray} The processed data.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t\t         */\n\t\t        _process: function (doFlush) {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\t            var dataSigBytes = data.sigBytes;\n\t\t            var blockSize = this.blockSize;\n\t\t            var blockSizeBytes = blockSize * 4;\n\t\n\t\t            // Count blocks ready\n\t\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t\t            if (doFlush) {\n\t\t                // Round up to include partial blocks\n\t\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t\t            } else {\n\t\t                // Round down to include only full blocks,\n\t\t                // less the number of blocks that must remain in the buffer\n\t\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t\t            }\n\t\n\t\t            // Count words ready\n\t\t            var nWordsReady = nBlocksReady * blockSize;\n\t\n\t\t            // Count bytes ready\n\t\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\t\n\t\t            // Process blocks\n\t\t            if (nWordsReady) {\n\t\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t\t                    // Perform concrete-algorithm logic\n\t\t                    this._doProcessBlock(dataWords, offset);\n\t\t                }\n\t\n\t\t                // Remove processed words\n\t\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t\t                data.sigBytes -= nBytesReady;\n\t\t            }\n\t\n\t\t            // Return processed words\n\t\t            return new WordArray.init(processedWords, nBytesReady);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this object.\n\t\t         *\n\t\t         * @return {Object} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\t            clone._data = this._data.clone();\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        _minBufferSize: 0\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Abstract hasher template.\n\t\t     *\n\t\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t\t     */\n\t\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         */\n\t\t        cfg: Base.extend(),\n\t\n\t\t        /**\n\t\t         * Initializes a newly created hasher.\n\t\t         *\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t\t         */\n\t\t        init: function (cfg) {\n\t\t            // Apply config defaults\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Set initial values\n\t\t            this.reset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Resets this hasher to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hasher.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Reset data buffer\n\t\t            BufferedBlockAlgorithm.reset.call(this);\n\t\n\t\t            // Perform concrete-hasher logic\n\t\t            this._doReset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Updates this hasher with a message.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate The message to append.\n\t\t         *\n\t\t         * @return {Hasher} This hasher.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hasher.update('message');\n\t\t         *     hasher.update(wordArray);\n\t\t         */\n\t\t        update: function (messageUpdate) {\n\t\t            // Append\n\t\t            this._append(messageUpdate);\n\t\n\t\t            // Update the hash\n\t\t            this._process();\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Finalizes the hash computation.\n\t\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t\t         *\n\t\t         * @return {WordArray} The hash.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hash = hasher.finalize();\n\t\t         *     var hash = hasher.finalize('message');\n\t\t         *     var hash = hasher.finalize(wordArray);\n\t\t         */\n\t\t        finalize: function (messageUpdate) {\n\t\t            // Final message update\n\t\t            if (messageUpdate) {\n\t\t                this._append(messageUpdate);\n\t\t            }\n\t\n\t\t            // Perform concrete-hasher logic\n\t\t            var hash = this._doFinalize();\n\t\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        blockSize: 512/32,\n\t\n\t\t        /**\n\t\t         * Creates a shortcut function to a hasher's object interface.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t\t         *\n\t\t         * @return {Function} The shortcut function.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t\t         */\n\t\t        _createHelper: function (hasher) {\n\t\t            return function (message, cfg) {\n\t\t                return new hasher.init(cfg).finalize(message);\n\t\t            };\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a shortcut function to the HMAC's object interface.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t\t         *\n\t\t         * @return {Function} The shortcut function.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t\t         */\n\t\t        _createHmacHelper: function (hasher) {\n\t\t            return function (message, key) {\n\t\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t\t            };\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Algorithm namespace.\n\t\t     */\n\t\t    var C_algo = C.algo = {};\n\t\n\t\t    return C;\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS;\n\t\n\t}));\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (undefined) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var X32WordArray = C_lib.WordArray;\n\t\n\t\t    /**\n\t\t     * x64 namespace.\n\t\t     */\n\t\t    var C_x64 = C.x64 = {};\n\t\n\t\t    /**\n\t\t     * A 64-bit word.\n\t\t     */\n\t\t    var X64Word = C_x64.Word = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created 64-bit word.\n\t\t         *\n\t\t         * @param {number} high The high 32 bits.\n\t\t         * @param {number} low The low 32 bits.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t\t         */\n\t\t        init: function (high, low) {\n\t\t            this.high = high;\n\t\t            this.low = low;\n\t\t        }\n\t\n\t\t        /**\n\t\t         * Bitwise NOTs this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after negating.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var negated = x64Word.not();\n\t\t         */\n\t\t        // not: function () {\n\t\t            // var high = ~this.high;\n\t\t            // var low = ~this.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Bitwise ANDs this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var anded = x64Word.and(anotherX64Word);\n\t\t         */\n\t\t        // and: function (word) {\n\t\t            // var high = this.high & word.high;\n\t\t            // var low = this.low & word.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Bitwise ORs this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after ORing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ored = x64Word.or(anotherX64Word);\n\t\t         */\n\t\t        // or: function (word) {\n\t\t            // var high = this.high | word.high;\n\t\t            // var low = this.low | word.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Bitwise XORs this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after XORing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var xored = x64Word.xor(anotherX64Word);\n\t\t         */\n\t\t        // xor: function (word) {\n\t\t            // var high = this.high ^ word.high;\n\t\t            // var low = this.low ^ word.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Shifts this word n bits to the left.\n\t\t         *\n\t\t         * @param {number} n The number of bits to shift.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after shifting.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var shifted = x64Word.shiftL(25);\n\t\t         */\n\t\t        // shiftL: function (n) {\n\t\t            // if (n < 32) {\n\t\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t\t                // var low = this.low << n;\n\t\t            // } else {\n\t\t                // var high = this.low << (n - 32);\n\t\t                // var low = 0;\n\t\t            // }\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Shifts this word n bits to the right.\n\t\t         *\n\t\t         * @param {number} n The number of bits to shift.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after shifting.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var shifted = x64Word.shiftR(7);\n\t\t         */\n\t\t        // shiftR: function (n) {\n\t\t            // if (n < 32) {\n\t\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t\t                // var high = this.high >>> n;\n\t\t            // } else {\n\t\t                // var low = this.high >>> (n - 32);\n\t\t                // var high = 0;\n\t\t            // }\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Rotates this word n bits to the left.\n\t\t         *\n\t\t         * @param {number} n The number of bits to rotate.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after rotating.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var rotated = x64Word.rotL(25);\n\t\t         */\n\t\t        // rotL: function (n) {\n\t\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Rotates this word n bits to the right.\n\t\t         *\n\t\t         * @param {number} n The number of bits to rotate.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after rotating.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var rotated = x64Word.rotR(7);\n\t\t         */\n\t\t        // rotR: function (n) {\n\t\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Adds this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to add with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after adding.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var added = x64Word.add(anotherX64Word);\n\t\t         */\n\t\t        // add: function (word) {\n\t\t            // var low = (this.low + word.low) | 0;\n\t\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t\t            // var high = (this.high + word.high + carry) | 0;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * An array of 64-bit words.\n\t\t     *\n\t\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t\t     */\n\t\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created word array.\n\t\t         *\n\t\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t\t         *     ]);\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t\t         *     ], 10);\n\t\t         */\n\t\t        init: function (words, sigBytes) {\n\t\t            words = this.words = words || [];\n\t\n\t\t            if (sigBytes != undefined) {\n\t\t                this.sigBytes = sigBytes;\n\t\t            } else {\n\t\t                this.sigBytes = words.length * 8;\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts this 64-bit word array to a 32-bit word array.\n\t\t         *\n\t\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var x32WordArray = x64WordArray.toX32();\n\t\t         */\n\t\t        toX32: function () {\n\t\t            // Shortcuts\n\t\t            var x64Words = this.words;\n\t\t            var x64WordsLength = x64Words.length;\n\t\n\t\t            // Convert\n\t\t            var x32Words = [];\n\t\t            for (var i = 0; i < x64WordsLength; i++) {\n\t\t                var x64Word = x64Words[i];\n\t\t                x32Words.push(x64Word.high);\n\t\t                x32Words.push(x64Word.low);\n\t\t            }\n\t\n\t\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this word array.\n\t\t         *\n\t\t         * @return {X64WordArray} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = x64WordArray.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\n\t\t            // Clone \"words\" array\n\t\t            var words = clone.words = this.words.slice(0);\n\t\n\t\t            // Clone each X64Word object\n\t\t            var wordsLength = words.length;\n\t\t            for (var i = 0; i < wordsLength; i++) {\n\t\t                words[i] = words[i].clone();\n\t\t            }\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS;\n\t\n\t}));\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Check if typed arrays are supported\n\t\t    if (typeof ArrayBuffer != 'function') {\n\t\t        return;\n\t\t    }\n\t\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\n\t\t    // Reference original init\n\t\t    var superInit = WordArray.init;\n\t\n\t\t    // Augment WordArray.init to handle typed arrays\n\t\t    var subInit = WordArray.init = function (typedArray) {\n\t\t        // Convert buffers to uint8\n\t\t        if (typedArray instanceof ArrayBuffer) {\n\t\t            typedArray = new Uint8Array(typedArray);\n\t\t        }\n\t\n\t\t        // Convert other array views to uint8\n\t\t        if (\n\t\t            typedArray instanceof Int8Array ||\n\t\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t\t            typedArray instanceof Int16Array ||\n\t\t            typedArray instanceof Uint16Array ||\n\t\t            typedArray instanceof Int32Array ||\n\t\t            typedArray instanceof Uint32Array ||\n\t\t            typedArray instanceof Float32Array ||\n\t\t            typedArray instanceof Float64Array\n\t\t        ) {\n\t\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t\t        }\n\t\n\t\t        // Handle Uint8Array\n\t\t        if (typedArray instanceof Uint8Array) {\n\t\t            // Shortcut\n\t\t            var typedArrayByteLength = typedArray.byteLength;\n\t\n\t\t            // Extract bytes\n\t\t            var words = [];\n\t\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t\t            }\n\t\n\t\t            // Initialize this word array\n\t\t            superInit.call(this, words, typedArrayByteLength);\n\t\t        } else {\n\t\t            // Else call normal init\n\t\t            superInit.apply(this, arguments);\n\t\t        }\n\t\t    };\n\t\n\t\t    subInit.prototype = WordArray;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.lib.WordArray;\n\t\n\t}));\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_enc = C.enc;\n\t\n\t\t    /**\n\t\t     * UTF-16 BE encoding strategy.\n\t\t     */\n\t\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t\t        /**\n\t\t         * Converts a word array to a UTF-16 BE string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The UTF-16 BE string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var utf16Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i += 2) {\n\t\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t\t            }\n\t\n\t\t            return utf16Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a UTF-16 BE string to a word array.\n\t\t         *\n\t\t         * @param {string} utf16Str The UTF-16 BE string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t\t         */\n\t\t        parse: function (utf16Str) {\n\t\t            // Shortcut\n\t\t            var utf16StrLength = utf16Str.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < utf16StrLength; i++) {\n\t\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t\t            }\n\t\n\t\t            return WordArray.create(words, utf16StrLength * 2);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * UTF-16 LE encoding strategy.\n\t\t     */\n\t\t    C_enc.Utf16LE = {\n\t\t        /**\n\t\t         * Converts a word array to a UTF-16 LE string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The UTF-16 LE string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var utf16Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i += 2) {\n\t\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t\t            }\n\t\n\t\t            return utf16Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a UTF-16 LE string to a word array.\n\t\t         *\n\t\t         * @param {string} utf16Str The UTF-16 LE string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t\t         */\n\t\t        parse: function (utf16Str) {\n\t\t            // Shortcut\n\t\t            var utf16StrLength = utf16Str.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < utf16StrLength; i++) {\n\t\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t\t            }\n\t\n\t\t            return WordArray.create(words, utf16StrLength * 2);\n\t\t        }\n\t\t    };\n\t\n\t\t    function swapEndian(word) {\n\t\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t\t    }\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.enc.Utf16;\n\t\n\t}));\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_enc = C.enc;\n\t\n\t\t    /**\n\t\t     * Base64 encoding strategy.\n\t\t     */\n\t\t    var Base64 = C_enc.Base64 = {\n\t\t        /**\n\t\t         * Converts a word array to a Base64 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The Base64 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\t            var map = this._map;\n\t\n\t\t            // Clamp excess bits\n\t\t            wordArray.clamp();\n\t\n\t\t            // Convert\n\t\t            var base64Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i += 3) {\n\t\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\t\n\t\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\t\n\t\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t\t                }\n\t\t            }\n\t\n\t\t            // Add padding\n\t\t            var paddingChar = map.charAt(64);\n\t\t            if (paddingChar) {\n\t\t                while (base64Chars.length % 4) {\n\t\t                    base64Chars.push(paddingChar);\n\t\t                }\n\t\t            }\n\t\n\t\t            return base64Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a Base64 string to a word array.\n\t\t         *\n\t\t         * @param {string} base64Str The Base64 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t\t         */\n\t\t        parse: function (base64Str) {\n\t\t            // Shortcuts\n\t\t            var base64StrLength = base64Str.length;\n\t\t            var map = this._map;\n\t\t            var reverseMap = this._reverseMap;\n\t\n\t\t            if (!reverseMap) {\n\t\t                    reverseMap = this._reverseMap = [];\n\t\t                    for (var j = 0; j < map.length; j++) {\n\t\t                        reverseMap[map.charCodeAt(j)] = j;\n\t\t                    }\n\t\t            }\n\t\n\t\t            // Ignore padding\n\t\t            var paddingChar = map.charAt(64);\n\t\t            if (paddingChar) {\n\t\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t\t                if (paddingIndex !== -1) {\n\t\t                    base64StrLength = paddingIndex;\n\t\t                }\n\t\t            }\n\t\n\t\t            // Convert\n\t\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\t\n\t\t        },\n\t\n\t\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t\t    };\n\t\n\t\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t\t      var words = [];\n\t\t      var nBytes = 0;\n\t\t      for (var i = 0; i < base64StrLength; i++) {\n\t\t          if (i % 4) {\n\t\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t\t              nBytes++;\n\t\t          }\n\t\t      }\n\t\t      return WordArray.create(words, nBytes);\n\t\t    }\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.enc.Base64;\n\t\n\t}));\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Constants table\n\t\t    var T = [];\n\t\n\t\t    // Compute constants\n\t\t    (function () {\n\t\t        for (var i = 0; i < 64; i++) {\n\t\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t\t        }\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * MD5 hash algorithm.\n\t\t     */\n\t\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init([\n\t\t                0x67452301, 0xefcdab89,\n\t\t                0x98badcfe, 0x10325476\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 16; i++) {\n\t\t                // Shortcuts\n\t\t                var offset_i = offset + i;\n\t\t                var M_offset_i = M[offset_i];\n\t\n\t\t                M[offset_i] = (\n\t\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t            }\n\t\n\t\t            // Shortcuts\n\t\t            var H = this._hash.words;\n\t\n\t\t            var M_offset_0  = M[offset + 0];\n\t\t            var M_offset_1  = M[offset + 1];\n\t\t            var M_offset_2  = M[offset + 2];\n\t\t            var M_offset_3  = M[offset + 3];\n\t\t            var M_offset_4  = M[offset + 4];\n\t\t            var M_offset_5  = M[offset + 5];\n\t\t            var M_offset_6  = M[offset + 6];\n\t\t            var M_offset_7  = M[offset + 7];\n\t\t            var M_offset_8  = M[offset + 8];\n\t\t            var M_offset_9  = M[offset + 9];\n\t\t            var M_offset_10 = M[offset + 10];\n\t\t            var M_offset_11 = M[offset + 11];\n\t\t            var M_offset_12 = M[offset + 12];\n\t\t            var M_offset_13 = M[offset + 13];\n\t\t            var M_offset_14 = M[offset + 14];\n\t\t            var M_offset_15 = M[offset + 15];\n\t\n\t\t            // Working varialbes\n\t\t            var a = H[0];\n\t\t            var b = H[1];\n\t\t            var c = H[2];\n\t\t            var d = H[3];\n\t\n\t\t            // Computation\n\t\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\t\n\t\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\t\n\t\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\t\n\t\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\t\n\t\t            // Intermediate hash value\n\t\t            H[0] = (H[0] + a) | 0;\n\t\t            H[1] = (H[1] + b) | 0;\n\t\t            H[2] = (H[2] + c) | 0;\n\t\t            H[3] = (H[3] + d) | 0;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\n\t\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t\t            var nBitsTotalL = nBitsTotal;\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t\t            );\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t\t            );\n\t\n\t\t            data.sigBytes = (dataWords.length + 1) * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Shortcuts\n\t\t            var hash = this._hash;\n\t\t            var H = hash.words;\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                // Shortcut\n\t\t                var H_i = H[i];\n\t\n\t\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t\t            }\n\t\n\t\t            // Return final computed hash\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    function FF(a, b, c, d, x, s, t) {\n\t\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    function GG(a, b, c, d, x, s, t) {\n\t\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    function HH(a, b, c, d, x, s, t) {\n\t\t        var n = a + (b ^ c ^ d) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    function II(a, b, c, d, x, s, t) {\n\t\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.MD5('message');\n\t\t     *     var hash = CryptoJS.MD5(wordArray);\n\t\t     */\n\t\t    C.MD5 = Hasher._createHelper(MD5);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t\t     */\n\t\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.MD5;\n\t\n\t}));\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Reusable object\n\t\t    var W = [];\n\t\n\t\t    /**\n\t\t     * SHA-1 hash algorithm.\n\t\t     */\n\t\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init([\n\t\t                0x67452301, 0xefcdab89,\n\t\t                0x98badcfe, 0x10325476,\n\t\t                0xc3d2e1f0\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var H = this._hash.words;\n\t\n\t\t            // Working variables\n\t\t            var a = H[0];\n\t\t            var b = H[1];\n\t\t            var c = H[2];\n\t\t            var d = H[3];\n\t\t            var e = H[4];\n\t\n\t\t            // Computation\n\t\t            for (var i = 0; i < 80; i++) {\n\t\t                if (i < 16) {\n\t\t                    W[i] = M[offset + i] | 0;\n\t\t                } else {\n\t\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t\t                    W[i] = (n << 1) | (n >>> 31);\n\t\t                }\n\t\n\t\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t\t                if (i < 20) {\n\t\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t\t                } else if (i < 40) {\n\t\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t\t                } else if (i < 60) {\n\t\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t\t                } else /* if (i < 80) */ {\n\t\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t\t                }\n\t\n\t\t                e = d;\n\t\t                d = c;\n\t\t                c = (b << 30) | (b >>> 2);\n\t\t                b = a;\n\t\t                a = t;\n\t\t            }\n\t\n\t\t            // Intermediate hash value\n\t\t            H[0] = (H[0] + a) | 0;\n\t\t            H[1] = (H[1] + b) | 0;\n\t\t            H[2] = (H[2] + c) | 0;\n\t\t            H[3] = (H[3] + d) | 0;\n\t\t            H[4] = (H[4] + e) | 0;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Return final computed hash\n\t\t            return this._hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA1('message');\n\t\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t\t     */\n\t\t    C.SHA1 = Hasher._createHelper(SHA1);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t\t     */\n\t\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA1;\n\t\n\t}));\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Initialization and round constants tables\n\t\t    var H = [];\n\t\t    var K = [];\n\t\n\t\t    // Compute constants\n\t\t    (function () {\n\t\t        function isPrime(n) {\n\t\t            var sqrtN = Math.sqrt(n);\n\t\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t\t                if (!(n % factor)) {\n\t\t                    return false;\n\t\t                }\n\t\t            }\n\t\n\t\t            return true;\n\t\t        }\n\t\n\t\t        function getFractionalBits(n) {\n\t\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t\t        }\n\t\n\t\t        var n = 2;\n\t\t        var nPrime = 0;\n\t\t        while (nPrime < 64) {\n\t\t            if (isPrime(n)) {\n\t\t                if (nPrime < 8) {\n\t\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t\t                }\n\t\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\t\n\t\t                nPrime++;\n\t\t            }\n\t\n\t\t            n++;\n\t\t        }\n\t\t    }());\n\t\n\t\t    // Reusable object\n\t\t    var W = [];\n\t\n\t\t    /**\n\t\t     * SHA-256 hash algorithm.\n\t\t     */\n\t\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init(H.slice(0));\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var H = this._hash.words;\n\t\n\t\t            // Working variables\n\t\t            var a = H[0];\n\t\t            var b = H[1];\n\t\t            var c = H[2];\n\t\t            var d = H[3];\n\t\t            var e = H[4];\n\t\t            var f = H[5];\n\t\t            var g = H[6];\n\t\t            var h = H[7];\n\t\n\t\t            // Computation\n\t\t            for (var i = 0; i < 64; i++) {\n\t\t                if (i < 16) {\n\t\t                    W[i] = M[offset + i] | 0;\n\t\t                } else {\n\t\t                    var gamma0x = W[i - 15];\n\t\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t\t                                   (gamma0x >>> 3);\n\t\n\t\t                    var gamma1x = W[i - 2];\n\t\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t\t                                   (gamma1x >>> 10);\n\t\n\t\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t\t                }\n\t\n\t\t                var ch  = (e & f) ^ (~e & g);\n\t\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\t\n\t\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\t\n\t\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t\t                var t2 = sigma0 + maj;\n\t\n\t\t                h = g;\n\t\t                g = f;\n\t\t                f = e;\n\t\t                e = (d + t1) | 0;\n\t\t                d = c;\n\t\t                c = b;\n\t\t                b = a;\n\t\t                a = (t1 + t2) | 0;\n\t\t            }\n\t\n\t\t            // Intermediate hash value\n\t\t            H[0] = (H[0] + a) | 0;\n\t\t            H[1] = (H[1] + b) | 0;\n\t\t            H[2] = (H[2] + c) | 0;\n\t\t            H[3] = (H[3] + d) | 0;\n\t\t            H[4] = (H[4] + e) | 0;\n\t\t            H[5] = (H[5] + f) | 0;\n\t\t            H[6] = (H[6] + g) | 0;\n\t\t            H[7] = (H[7] + h) | 0;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Return final computed hash\n\t\t            return this._hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA256('message');\n\t\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t\t     */\n\t\t    C.SHA256 = Hasher._createHelper(SHA256);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t\t     */\n\t\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.SHA256;\n\t\n\t}));\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(36));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var SHA256 = C_algo.SHA256;\n\t\n\t\t    /**\n\t\t     * SHA-224 hash algorithm.\n\t\t     */\n\t\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init([\n\t\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            var hash = SHA256._doFinalize.call(this);\n\t\n\t\t            hash.sigBytes -= 4;\n\t\n\t\t            return hash;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA224('message');\n\t\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t\t     */\n\t\t    C.SHA224 = SHA256._createHelper(SHA224);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t\t     */\n\t\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA224;\n\t\n\t}));\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(30));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_x64 = C.x64;\n\t\t    var X64Word = C_x64.Word;\n\t\t    var X64WordArray = C_x64.WordArray;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    function X64Word_create() {\n\t\t        return X64Word.create.apply(X64Word, arguments);\n\t\t    }\n\t\n\t\t    // Constants\n\t\t    var K = [\n\t\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t\t    ];\n\t\n\t\t    // Reusable objects\n\t\t    var W = [];\n\t\t    (function () {\n\t\t        for (var i = 0; i < 80; i++) {\n\t\t            W[i] = X64Word_create();\n\t\t        }\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * SHA-512 hash algorithm.\n\t\t     */\n\t\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new X64WordArray.init([\n\t\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcuts\n\t\t            var H = this._hash.words;\n\t\n\t\t            var H0 = H[0];\n\t\t            var H1 = H[1];\n\t\t            var H2 = H[2];\n\t\t            var H3 = H[3];\n\t\t            var H4 = H[4];\n\t\t            var H5 = H[5];\n\t\t            var H6 = H[6];\n\t\t            var H7 = H[7];\n\t\n\t\t            var H0h = H0.high;\n\t\t            var H0l = H0.low;\n\t\t            var H1h = H1.high;\n\t\t            var H1l = H1.low;\n\t\t            var H2h = H2.high;\n\t\t            var H2l = H2.low;\n\t\t            var H3h = H3.high;\n\t\t            var H3l = H3.low;\n\t\t            var H4h = H4.high;\n\t\t            var H4l = H4.low;\n\t\t            var H5h = H5.high;\n\t\t            var H5l = H5.low;\n\t\t            var H6h = H6.high;\n\t\t            var H6l = H6.low;\n\t\t            var H7h = H7.high;\n\t\t            var H7l = H7.low;\n\t\n\t\t            // Working variables\n\t\t            var ah = H0h;\n\t\t            var al = H0l;\n\t\t            var bh = H1h;\n\t\t            var bl = H1l;\n\t\t            var ch = H2h;\n\t\t            var cl = H2l;\n\t\t            var dh = H3h;\n\t\t            var dl = H3l;\n\t\t            var eh = H4h;\n\t\t            var el = H4l;\n\t\t            var fh = H5h;\n\t\t            var fl = H5l;\n\t\t            var gh = H6h;\n\t\t            var gl = H6l;\n\t\t            var hh = H7h;\n\t\t            var hl = H7l;\n\t\n\t\t            // Rounds\n\t\t            for (var i = 0; i < 80; i++) {\n\t\t                // Shortcut\n\t\t                var Wi = W[i];\n\t\n\t\t                // Extend message\n\t\t                if (i < 16) {\n\t\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t\t                } else {\n\t\t                    // Gamma0\n\t\t                    var gamma0x  = W[i - 15];\n\t\t                    var gamma0xh = gamma0x.high;\n\t\t                    var gamma0xl = gamma0x.low;\n\t\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\t\n\t\t                    // Gamma1\n\t\t                    var gamma1x  = W[i - 2];\n\t\t                    var gamma1xh = gamma1x.high;\n\t\t                    var gamma1xl = gamma1x.low;\n\t\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\t\n\t\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t\t                    var Wi7  = W[i - 7];\n\t\t                    var Wi7h = Wi7.high;\n\t\t                    var Wi7l = Wi7.low;\n\t\n\t\t                    var Wi16  = W[i - 16];\n\t\t                    var Wi16h = Wi16.high;\n\t\t                    var Wi16l = Wi16.low;\n\t\n\t\t                    var Wil = gamma0l + Wi7l;\n\t\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t\t                    var Wil = Wil + gamma1l;\n\t\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t\t                    var Wil = Wil + Wi16l;\n\t\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\t\n\t\t                    Wi.high = Wih;\n\t\t                    Wi.low  = Wil;\n\t\t                }\n\t\n\t\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t\t                var chl  = (el & fl) ^ (~el & gl);\n\t\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\t\n\t\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\t\n\t\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t\t                var Ki  = K[i];\n\t\t                var Kih = Ki.high;\n\t\t                var Kil = Ki.low;\n\t\n\t\t                var t1l = hl + sigma1l;\n\t\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t\t                var t1l = t1l + chl;\n\t\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t\t                var t1l = t1l + Kil;\n\t\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t\t                var t1l = t1l + Wil;\n\t\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\t\n\t\t                // t2 = sigma0 + maj\n\t\t                var t2l = sigma0l + majl;\n\t\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\t\n\t\t                // Update working variables\n\t\t                hh = gh;\n\t\t                hl = gl;\n\t\t                gh = fh;\n\t\t                gl = fl;\n\t\t                fh = eh;\n\t\t                fl = el;\n\t\t                el = (dl + t1l) | 0;\n\t\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t\t                dh = ch;\n\t\t                dl = cl;\n\t\t                ch = bh;\n\t\t                cl = bl;\n\t\t                bh = ah;\n\t\t                bl = al;\n\t\t                al = (t1l + t2l) | 0;\n\t\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t\t            }\n\t\n\t\t            // Intermediate hash value\n\t\t            H0l = H0.low  = (H0l + al);\n\t\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t\t            H1l = H1.low  = (H1l + bl);\n\t\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t\t            H2l = H2.low  = (H2l + cl);\n\t\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t\t            H3l = H3.low  = (H3l + dl);\n\t\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t\t            H4l = H4.low  = (H4l + el);\n\t\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t\t            H5l = H5.low  = (H5l + fl);\n\t\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t\t            H6l = H6.low  = (H6l + gl);\n\t\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t\t            H7l = H7.low  = (H7l + hl);\n\t\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Convert hash to 32-bit word array before returning\n\t\t            var hash = this._hash.toX32();\n\t\n\t\t            // Return final computed hash\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        blockSize: 1024/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA512('message');\n\t\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t\t     */\n\t\t    C.SHA512 = Hasher._createHelper(SHA512);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t\t     */\n\t\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA512;\n\t\n\t}));\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(30), __webpack_require__(38));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_x64 = C.x64;\n\t\t    var X64Word = C_x64.Word;\n\t\t    var X64WordArray = C_x64.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var SHA512 = C_algo.SHA512;\n\t\n\t\t    /**\n\t\t     * SHA-384 hash algorithm.\n\t\t     */\n\t\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new X64WordArray.init([\n\t\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            var hash = SHA512._doFinalize.call(this);\n\t\n\t\t            hash.sigBytes -= 16;\n\t\n\t\t            return hash;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA384('message');\n\t\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t\t     */\n\t\t    C.SHA384 = SHA512._createHelper(SHA384);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t\t     */\n\t\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA384;\n\t\n\t}));\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(30));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_x64 = C.x64;\n\t\t    var X64Word = C_x64.Word;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Constants tables\n\t\t    var RHO_OFFSETS = [];\n\t\t    var PI_INDEXES  = [];\n\t\t    var ROUND_CONSTANTS = [];\n\t\n\t\t    // Compute Constants\n\t\t    (function () {\n\t\t        // Compute rho offset constants\n\t\t        var x = 1, y = 0;\n\t\t        for (var t = 0; t < 24; t++) {\n\t\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\t\n\t\t            var newX = y % 5;\n\t\t            var newY = (2 * x + 3 * y) % 5;\n\t\t            x = newX;\n\t\t            y = newY;\n\t\t        }\n\t\n\t\t        // Compute pi index constants\n\t\t        for (var x = 0; x < 5; x++) {\n\t\t            for (var y = 0; y < 5; y++) {\n\t\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t\t            }\n\t\t        }\n\t\n\t\t        // Compute round constants\n\t\t        var LFSR = 0x01;\n\t\t        for (var i = 0; i < 24; i++) {\n\t\t            var roundConstantMsw = 0;\n\t\t            var roundConstantLsw = 0;\n\t\n\t\t            for (var j = 0; j < 7; j++) {\n\t\t                if (LFSR & 0x01) {\n\t\t                    var bitPosition = (1 << j) - 1;\n\t\t                    if (bitPosition < 32) {\n\t\t                        roundConstantLsw ^= 1 << bitPosition;\n\t\t                    } else /* if (bitPosition >= 32) */ {\n\t\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t\t                    }\n\t\t                }\n\t\n\t\t                // Compute next LFSR\n\t\t                if (LFSR & 0x80) {\n\t\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t\t                } else {\n\t\t                    LFSR <<= 1;\n\t\t                }\n\t\t            }\n\t\n\t\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t\t        }\n\t\t    }());\n\t\n\t\t    // Reusable objects for temporary values\n\t\t    var T = [];\n\t\t    (function () {\n\t\t        for (var i = 0; i < 25; i++) {\n\t\t            T[i] = X64Word.create();\n\t\t        }\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * SHA-3 hash algorithm.\n\t\t     */\n\t\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} outputLength\n\t\t         *   The desired number of bits in the output hash.\n\t\t         *   Only values permitted are: 224, 256, 384, 512.\n\t\t         *   Default: 512\n\t\t         */\n\t\t        cfg: Hasher.cfg.extend({\n\t\t            outputLength: 512\n\t\t        }),\n\t\n\t\t        _doReset: function () {\n\t\t            var state = this._state = []\n\t\t            for (var i = 0; i < 25; i++) {\n\t\t                state[i] = new X64Word.init();\n\t\t            }\n\t\n\t\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcuts\n\t\t            var state = this._state;\n\t\t            var nBlockSizeLanes = this.blockSize / 2;\n\t\n\t\t            // Absorb\n\t\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t\t                // Shortcuts\n\t\t                var M2i  = M[offset + 2 * i];\n\t\t                var M2i1 = M[offset + 2 * i + 1];\n\t\n\t\t                // Swap endian\n\t\t                M2i = (\n\t\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t                M2i1 = (\n\t\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\n\t\t                // Absorb message into state\n\t\t                var lane = state[i];\n\t\t                lane.high ^= M2i1;\n\t\t                lane.low  ^= M2i;\n\t\t            }\n\t\n\t\t            // Rounds\n\t\t            for (var round = 0; round < 24; round++) {\n\t\t                // Theta\n\t\t                for (var x = 0; x < 5; x++) {\n\t\t                    // Mix column lanes\n\t\t                    var tMsw = 0, tLsw = 0;\n\t\t                    for (var y = 0; y < 5; y++) {\n\t\t                        var lane = state[x + 5 * y];\n\t\t                        tMsw ^= lane.high;\n\t\t                        tLsw ^= lane.low;\n\t\t                    }\n\t\n\t\t                    // Temporary values\n\t\t                    var Tx = T[x];\n\t\t                    Tx.high = tMsw;\n\t\t                    Tx.low  = tLsw;\n\t\t                }\n\t\t                for (var x = 0; x < 5; x++) {\n\t\t                    // Shortcuts\n\t\t                    var Tx4 = T[(x + 4) % 5];\n\t\t                    var Tx1 = T[(x + 1) % 5];\n\t\t                    var Tx1Msw = Tx1.high;\n\t\t                    var Tx1Lsw = Tx1.low;\n\t\n\t\t                    // Mix surrounding columns\n\t\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t\t                    for (var y = 0; y < 5; y++) {\n\t\t                        var lane = state[x + 5 * y];\n\t\t                        lane.high ^= tMsw;\n\t\t                        lane.low  ^= tLsw;\n\t\t                    }\n\t\t                }\n\t\n\t\t                // Rho Pi\n\t\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t\t                    // Shortcuts\n\t\t                    var lane = state[laneIndex];\n\t\t                    var laneMsw = lane.high;\n\t\t                    var laneLsw = lane.low;\n\t\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\t\n\t\t                    // Rotate lanes\n\t\t                    if (rhoOffset < 32) {\n\t\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t\t                    } else /* if (rhoOffset >= 32) */ {\n\t\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t\t                    }\n\t\n\t\t                    // Transpose lanes\n\t\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t\t                    TPiLane.high = tMsw;\n\t\t                    TPiLane.low  = tLsw;\n\t\t                }\n\t\n\t\t                // Rho pi at x = y = 0\n\t\t                var T0 = T[0];\n\t\t                var state0 = state[0];\n\t\t                T0.high = state0.high;\n\t\t                T0.low  = state0.low;\n\t\n\t\t                // Chi\n\t\t                for (var x = 0; x < 5; x++) {\n\t\t                    for (var y = 0; y < 5; y++) {\n\t\t                        // Shortcuts\n\t\t                        var laneIndex = x + 5 * y;\n\t\t                        var lane = state[laneIndex];\n\t\t                        var TLane = T[laneIndex];\n\t\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\t\n\t\t                        // Mix rows\n\t\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t\t                    }\n\t\t                }\n\t\n\t\t                // Iota\n\t\t                var lane = state[0];\n\t\t                var roundConstant = ROUND_CONSTANTS[round];\n\t\t                lane.high ^= roundConstant.high;\n\t\t                lane.low  ^= roundConstant.low;;\n\t\t            }\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\t            var blockSizeBits = this.blockSize * 32;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Shortcuts\n\t\t            var state = this._state;\n\t\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t\t            var outputLengthLanes = outputLengthBytes / 8;\n\t\n\t\t            // Squeeze\n\t\t            var hashWords = [];\n\t\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t\t                // Shortcuts\n\t\t                var lane = state[i];\n\t\t                var laneMsw = lane.high;\n\t\t                var laneLsw = lane.low;\n\t\n\t\t                // Swap endian\n\t\t                laneMsw = (\n\t\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t                laneLsw = (\n\t\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\n\t\t                // Squeeze state to retrieve hash\n\t\t                hashWords.push(laneLsw);\n\t\t                hashWords.push(laneMsw);\n\t\t            }\n\t\n\t\t            // Return final computed hash\n\t\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\n\t\t            var state = clone._state = this._state.slice(0);\n\t\t            for (var i = 0; i < 25; i++) {\n\t\t                state[i] = state[i].clone();\n\t\t            }\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA3('message');\n\t\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t\t     */\n\t\t    C.SHA3 = Hasher._createHelper(SHA3);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t\t     */\n\t\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.SHA3;\n\t\n\t}));\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/** @preserve\n\t\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\t\n\t\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\t\n\t\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\t\n\t\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t\t*/\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Constants table\n\t\t    var _zl = WordArray.create([\n\t\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t\t    var _zr = WordArray.create([\n\t\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t\t    var _sl = WordArray.create([\n\t\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t\t    var _sr = WordArray.create([\n\t\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\t\n\t\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\t\n\t\t    /**\n\t\t     * RIPEMD160 hash algorithm.\n\t\t     */\n\t\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 16; i++) {\n\t\t                // Shortcuts\n\t\t                var offset_i = offset + i;\n\t\t                var M_offset_i = M[offset_i];\n\t\n\t\t                // Swap\n\t\t                M[offset_i] = (\n\t\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t            }\n\t\t            // Shortcut\n\t\t            var H  = this._hash.words;\n\t\t            var hl = _hl.words;\n\t\t            var hr = _hr.words;\n\t\t            var zl = _zl.words;\n\t\t            var zr = _zr.words;\n\t\t            var sl = _sl.words;\n\t\t            var sr = _sr.words;\n\t\n\t\t            // Working variables\n\t\t            var al, bl, cl, dl, el;\n\t\t            var ar, br, cr, dr, er;\n\t\n\t\t            ar = al = H[0];\n\t\t            br = bl = H[1];\n\t\t            cr = cl = H[2];\n\t\t            dr = dl = H[3];\n\t\t            er = el = H[4];\n\t\t            // Computation\n\t\t            var t;\n\t\t            for (var i = 0; i < 80; i += 1) {\n\t\t                t = (al +  M[offset+zl[i]])|0;\n\t\t                if (i<16){\n\t\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t\t                } else if (i<32) {\n\t\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t\t                } else if (i<48) {\n\t\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t\t                } else if (i<64) {\n\t\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t\t                } else {// if (i<80) {\n\t\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t\t                }\n\t\t                t = t|0;\n\t\t                t =  rotl(t,sl[i]);\n\t\t                t = (t+el)|0;\n\t\t                al = el;\n\t\t                el = dl;\n\t\t                dl = rotl(cl, 10);\n\t\t                cl = bl;\n\t\t                bl = t;\n\t\n\t\t                t = (ar + M[offset+zr[i]])|0;\n\t\t                if (i<16){\n\t\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t\t                } else if (i<32) {\n\t\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t\t                } else if (i<48) {\n\t\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t\t                } else if (i<64) {\n\t\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t\t                } else {// if (i<80) {\n\t\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t\t                }\n\t\t                t = t|0;\n\t\t                t =  rotl(t,sr[i]) ;\n\t\t                t = (t+er)|0;\n\t\t                ar = er;\n\t\t                er = dr;\n\t\t                dr = rotl(cr, 10);\n\t\t                cr = br;\n\t\t                br = t;\n\t\t            }\n\t\t            // Intermediate hash value\n\t\t            t    = (H[1] + cl + dr)|0;\n\t\t            H[1] = (H[2] + dl + er)|0;\n\t\t            H[2] = (H[3] + el + ar)|0;\n\t\t            H[3] = (H[4] + al + br)|0;\n\t\t            H[4] = (H[0] + bl + cr)|0;\n\t\t            H[0] =  t;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t\t            );\n\t\t            data.sigBytes = (dataWords.length + 1) * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Shortcuts\n\t\t            var hash = this._hash;\n\t\t            var H = hash.words;\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 5; i++) {\n\t\t                // Shortcut\n\t\t                var H_i = H[i];\n\t\n\t\t                // Swap\n\t\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t\t            }\n\t\n\t\t            // Return final computed hash\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\n\t\t    function f1(x, y, z) {\n\t\t        return ((x) ^ (y) ^ (z));\n\t\n\t\t    }\n\t\n\t\t    function f2(x, y, z) {\n\t\t        return (((x)&(y)) | ((~x)&(z)));\n\t\t    }\n\t\n\t\t    function f3(x, y, z) {\n\t\t        return (((x) | (~(y))) ^ (z));\n\t\t    }\n\t\n\t\t    function f4(x, y, z) {\n\t\t        return (((x) & (z)) | ((y)&(~(z))));\n\t\t    }\n\t\n\t\t    function f5(x, y, z) {\n\t\t        return ((x) ^ ((y) |(~(z))));\n\t\n\t\t    }\n\t\n\t\t    function rotl(x,n) {\n\t\t        return (x<<n) | (x>>>(32-n));\n\t\t    }\n\t\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t\t     */\n\t\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t\t     */\n\t\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.RIPEMD160;\n\t\n\t}));\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var C_enc = C.enc;\n\t\t    var Utf8 = C_enc.Utf8;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    /**\n\t\t     * HMAC algorithm.\n\t\t     */\n\t\t    var HMAC = C_algo.HMAC = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created HMAC.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hash algorithm to use.\n\t\t         * @param {WordArray|string} key The secret key.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t\t         */\n\t\t        init: function (hasher, key) {\n\t\t            // Init hasher\n\t\t            hasher = this._hasher = new hasher.init();\n\t\n\t\t            // Convert string to WordArray, else assume WordArray already\n\t\t            if (typeof key == 'string') {\n\t\t                key = Utf8.parse(key);\n\t\t            }\n\t\n\t\t            // Shortcuts\n\t\t            var hasherBlockSize = hasher.blockSize;\n\t\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\t\n\t\t            // Allow arbitrary length keys\n\t\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t\t                key = hasher.finalize(key);\n\t\t            }\n\t\n\t\t            // Clamp excess bits\n\t\t            key.clamp();\n\t\n\t\t            // Clone key for inner and outer pads\n\t\t            var oKey = this._oKey = key.clone();\n\t\t            var iKey = this._iKey = key.clone();\n\t\n\t\t            // Shortcuts\n\t\t            var oKeyWords = oKey.words;\n\t\t            var iKeyWords = iKey.words;\n\t\n\t\t            // XOR keys with pad constants\n\t\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t\t                iKeyWords[i] ^= 0x36363636;\n\t\t            }\n\t\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\t\n\t\t            // Set initial values\n\t\t            this.reset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Resets this HMAC to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hmacHasher.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Shortcut\n\t\t            var hasher = this._hasher;\n\t\n\t\t            // Reset\n\t\t            hasher.reset();\n\t\t            hasher.update(this._iKey);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Updates this HMAC with a message.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate The message to append.\n\t\t         *\n\t\t         * @return {HMAC} This HMAC instance.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hmacHasher.update('message');\n\t\t         *     hmacHasher.update(wordArray);\n\t\t         */\n\t\t        update: function (messageUpdate) {\n\t\t            this._hasher.update(messageUpdate);\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Finalizes the HMAC computation.\n\t\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t\t         *\n\t\t         * @return {WordArray} The HMAC.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hmac = hmacHasher.finalize();\n\t\t         *     var hmac = hmacHasher.finalize('message');\n\t\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t\t         */\n\t\t        finalize: function (messageUpdate) {\n\t\t            // Shortcut\n\t\t            var hasher = this._hasher;\n\t\n\t\t            // Compute HMAC\n\t\t            var innerHash = hasher.finalize(messageUpdate);\n\t\t            hasher.reset();\n\t\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\t\n\t\t            return hmac;\n\t\t        }\n\t\t    });\n\t\t}());\n\t\n\t\n\t}));\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(35), __webpack_require__(42));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var SHA1 = C_algo.SHA1;\n\t\t    var HMAC = C_algo.HMAC;\n\t\n\t\t    /**\n\t\t     * Password-Based Key Derivation Function 2 algorithm.\n\t\t     */\n\t\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t\t         */\n\t\t        cfg: Base.extend({\n\t\t            keySize: 128/32,\n\t\t            hasher: SHA1,\n\t\t            iterations: 1\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Initializes a newly created key derivation function.\n\t\t         *\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t\t         */\n\t\t        init: function (cfg) {\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Computes the Password-Based Key Derivation Function 2.\n\t\t         *\n\t\t         * @param {WordArray|string} password The password.\n\t\t         * @param {WordArray|string} salt A salt.\n\t\t         *\n\t\t         * @return {WordArray} The derived key.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var key = kdf.compute(password, salt);\n\t\t         */\n\t\t        compute: function (password, salt) {\n\t\t            // Shortcut\n\t\t            var cfg = this.cfg;\n\t\n\t\t            // Init HMAC\n\t\t            var hmac = HMAC.create(cfg.hasher, password);\n\t\n\t\t            // Initial values\n\t\t            var derivedKey = WordArray.create();\n\t\t            var blockIndex = WordArray.create([0x00000001]);\n\t\n\t\t            // Shortcuts\n\t\t            var derivedKeyWords = derivedKey.words;\n\t\t            var blockIndexWords = blockIndex.words;\n\t\t            var keySize = cfg.keySize;\n\t\t            var iterations = cfg.iterations;\n\t\n\t\t            // Generate key\n\t\t            while (derivedKeyWords.length < keySize) {\n\t\t                var block = hmac.update(salt).finalize(blockIndex);\n\t\t                hmac.reset();\n\t\n\t\t                // Shortcuts\n\t\t                var blockWords = block.words;\n\t\t                var blockWordsLength = blockWords.length;\n\t\n\t\t                // Iterations\n\t\t                var intermediate = block;\n\t\t                for (var i = 1; i < iterations; i++) {\n\t\t                    intermediate = hmac.finalize(intermediate);\n\t\t                    hmac.reset();\n\t\n\t\t                    // Shortcut\n\t\t                    var intermediateWords = intermediate.words;\n\t\n\t\t                    // XOR intermediate with block\n\t\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t\t                        blockWords[j] ^= intermediateWords[j];\n\t\t                    }\n\t\t                }\n\t\n\t\t                derivedKey.concat(block);\n\t\t                blockIndexWords[0]++;\n\t\t            }\n\t\t            derivedKey.sigBytes = keySize * 4;\n\t\n\t\t            return derivedKey;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Computes the Password-Based Key Derivation Function 2.\n\t\t     *\n\t\t     * @param {WordArray|string} password The password.\n\t\t     * @param {WordArray|string} salt A salt.\n\t\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t\t     *\n\t\t     * @return {WordArray} The derived key.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t\t     */\n\t\t    C.PBKDF2 = function (password, salt, cfg) {\n\t\t        return PBKDF2.create(cfg).compute(password, salt);\n\t\t    };\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.PBKDF2;\n\t\n\t}));\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(35), __webpack_require__(42));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var MD5 = C_algo.MD5;\n\t\n\t\t    /**\n\t\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t\t     */\n\t\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t\t         */\n\t\t        cfg: Base.extend({\n\t\t            keySize: 128/32,\n\t\t            hasher: MD5,\n\t\t            iterations: 1\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Initializes a newly created key derivation function.\n\t\t         *\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t\t         */\n\t\t        init: function (cfg) {\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Derives a key from a password.\n\t\t         *\n\t\t         * @param {WordArray|string} password The password.\n\t\t         * @param {WordArray|string} salt A salt.\n\t\t         *\n\t\t         * @return {WordArray} The derived key.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var key = kdf.compute(password, salt);\n\t\t         */\n\t\t        compute: function (password, salt) {\n\t\t            // Shortcut\n\t\t            var cfg = this.cfg;\n\t\n\t\t            // Init hasher\n\t\t            var hasher = cfg.hasher.create();\n\t\n\t\t            // Initial values\n\t\t            var derivedKey = WordArray.create();\n\t\n\t\t            // Shortcuts\n\t\t            var derivedKeyWords = derivedKey.words;\n\t\t            var keySize = cfg.keySize;\n\t\t            var iterations = cfg.iterations;\n\t\n\t\t            // Generate key\n\t\t            while (derivedKeyWords.length < keySize) {\n\t\t                if (block) {\n\t\t                    hasher.update(block);\n\t\t                }\n\t\t                var block = hasher.update(password).finalize(salt);\n\t\t                hasher.reset();\n\t\n\t\t                // Iterations\n\t\t                for (var i = 1; i < iterations; i++) {\n\t\t                    block = hasher.finalize(block);\n\t\t                    hasher.reset();\n\t\t                }\n\t\n\t\t                derivedKey.concat(block);\n\t\t            }\n\t\t            derivedKey.sigBytes = keySize * 4;\n\t\n\t\t            return derivedKey;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Derives a key from a password.\n\t\t     *\n\t\t     * @param {WordArray|string} password The password.\n\t\t     * @param {WordArray|string} salt A salt.\n\t\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t\t     *\n\t\t     * @return {WordArray} The derived key.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t\t     */\n\t\t    C.EvpKDF = function (password, salt, cfg) {\n\t\t        return EvpKDF.create(cfg).compute(password, salt);\n\t\t    };\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.EvpKDF;\n\t\n\t}));\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(44));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Cipher core components.\n\t\t */\n\t\tCryptoJS.lib.Cipher || (function (undefined) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t\t    var C_enc = C.enc;\n\t\t    var Utf8 = C_enc.Utf8;\n\t\t    var Base64 = C_enc.Base64;\n\t\t    var C_algo = C.algo;\n\t\t    var EvpKDF = C_algo.EvpKDF;\n\t\n\t\t    /**\n\t\t     * Abstract base cipher template.\n\t\t     *\n\t\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t\t     */\n\t\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {WordArray} iv The IV to use for this operation.\n\t\t         */\n\t\t        cfg: Base.extend(),\n\t\n\t\t        /**\n\t\t         * Creates this cipher in encryption mode.\n\t\t         *\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {Cipher} A cipher instance.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t\t         */\n\t\t        createEncryptor: function (key, cfg) {\n\t\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates this cipher in decryption mode.\n\t\t         *\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {Cipher} A cipher instance.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t\t         */\n\t\t        createDecryptor: function (key, cfg) {\n\t\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Initializes a newly created cipher.\n\t\t         *\n\t\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t\t         */\n\t\t        init: function (xformMode, key, cfg) {\n\t\t            // Apply config defaults\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Store transform mode and key\n\t\t            this._xformMode = xformMode;\n\t\t            this._key = key;\n\t\n\t\t            // Set initial values\n\t\t            this.reset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Resets this cipher to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     cipher.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Reset data buffer\n\t\t            BufferedBlockAlgorithm.reset.call(this);\n\t\n\t\t            // Perform concrete-cipher logic\n\t\t            this._doReset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Adds data to be encrypted or decrypted.\n\t\t         *\n\t\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t\t         *\n\t\t         * @return {WordArray} The data after processing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var encrypted = cipher.process('data');\n\t\t         *     var encrypted = cipher.process(wordArray);\n\t\t         */\n\t\t        process: function (dataUpdate) {\n\t\t            // Append\n\t\t            this._append(dataUpdate);\n\t\n\t\t            // Process available blocks\n\t\t            return this._process();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Finalizes the encryption or decryption process.\n\t\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t\t         *\n\t\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t\t         *\n\t\t         * @return {WordArray} The data after final processing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var encrypted = cipher.finalize();\n\t\t         *     var encrypted = cipher.finalize('data');\n\t\t         *     var encrypted = cipher.finalize(wordArray);\n\t\t         */\n\t\t        finalize: function (dataUpdate) {\n\t\t            // Final data update\n\t\t            if (dataUpdate) {\n\t\t                this._append(dataUpdate);\n\t\t            }\n\t\n\t\t            // Perform concrete-cipher logic\n\t\t            var finalProcessedData = this._doFinalize();\n\t\n\t\t            return finalProcessedData;\n\t\t        },\n\t\n\t\t        keySize: 128/32,\n\t\n\t\t        ivSize: 128/32,\n\t\n\t\t        _ENC_XFORM_MODE: 1,\n\t\n\t\t        _DEC_XFORM_MODE: 2,\n\t\n\t\t        /**\n\t\t         * Creates shortcut functions to a cipher's object interface.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t\t         *\n\t\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t\t         */\n\t\t        _createHelper: (function () {\n\t\t            function selectCipherStrategy(key) {\n\t\t                if (typeof key == 'string') {\n\t\t                    return PasswordBasedCipher;\n\t\t                } else {\n\t\t                    return SerializableCipher;\n\t\t                }\n\t\t            }\n\t\n\t\t            return function (cipher) {\n\t\t                return {\n\t\t                    encrypt: function (message, key, cfg) {\n\t\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t\t                    },\n\t\n\t\t                    decrypt: function (ciphertext, key, cfg) {\n\t\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t\t                    }\n\t\t                };\n\t\t            };\n\t\t        }())\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Abstract base stream cipher template.\n\t\t     *\n\t\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t\t     */\n\t\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t\t        _doFinalize: function () {\n\t\t            // Process partial blocks\n\t\t            var finalProcessedBlocks = this._process(!!'flush');\n\t\n\t\t            return finalProcessedBlocks;\n\t\t        },\n\t\n\t\t        blockSize: 1\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Mode namespace.\n\t\t     */\n\t\t    var C_mode = C.mode = {};\n\t\n\t\t    /**\n\t\t     * Abstract base block cipher mode template.\n\t\t     */\n\t\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t\t        /**\n\t\t         * Creates this mode for encryption.\n\t\t         *\n\t\t         * @param {Cipher} cipher A block cipher instance.\n\t\t         * @param {Array} iv The IV words.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t\t         */\n\t\t        createEncryptor: function (cipher, iv) {\n\t\t            return this.Encryptor.create(cipher, iv);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates this mode for decryption.\n\t\t         *\n\t\t         * @param {Cipher} cipher A block cipher instance.\n\t\t         * @param {Array} iv The IV words.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t\t         */\n\t\t        createDecryptor: function (cipher, iv) {\n\t\t            return this.Decryptor.create(cipher, iv);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Initializes a newly created mode.\n\t\t         *\n\t\t         * @param {Cipher} cipher A block cipher instance.\n\t\t         * @param {Array} iv The IV words.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t\t         */\n\t\t        init: function (cipher, iv) {\n\t\t            this._cipher = cipher;\n\t\t            this._iv = iv;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Cipher Block Chaining mode.\n\t\t     */\n\t\t    var CBC = C_mode.CBC = (function () {\n\t\t        /**\n\t\t         * Abstract base CBC mode.\n\t\t         */\n\t\t        var CBC = BlockCipherMode.extend();\n\t\n\t\t        /**\n\t\t         * CBC encryptor.\n\t\t         */\n\t\t        CBC.Encryptor = CBC.extend({\n\t\t            /**\n\t\t             * Processes the data block at offset.\n\t\t             *\n\t\t             * @param {Array} words The data words to operate on.\n\t\t             * @param {number} offset The offset where the block starts.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     mode.processBlock(data.words, offset);\n\t\t             */\n\t\t            processBlock: function (words, offset) {\n\t\t                // Shortcuts\n\t\t                var cipher = this._cipher;\n\t\t                var blockSize = cipher.blockSize;\n\t\n\t\t                // XOR and encrypt\n\t\t                xorBlock.call(this, words, offset, blockSize);\n\t\t                cipher.encryptBlock(words, offset);\n\t\n\t\t                // Remember this block to use with next block\n\t\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t\t            }\n\t\t        });\n\t\n\t\t        /**\n\t\t         * CBC decryptor.\n\t\t         */\n\t\t        CBC.Decryptor = CBC.extend({\n\t\t            /**\n\t\t             * Processes the data block at offset.\n\t\t             *\n\t\t             * @param {Array} words The data words to operate on.\n\t\t             * @param {number} offset The offset where the block starts.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     mode.processBlock(data.words, offset);\n\t\t             */\n\t\t            processBlock: function (words, offset) {\n\t\t                // Shortcuts\n\t\t                var cipher = this._cipher;\n\t\t                var blockSize = cipher.blockSize;\n\t\n\t\t                // Remember this block to use with next block\n\t\t                var thisBlock = words.slice(offset, offset + blockSize);\n\t\n\t\t                // Decrypt and XOR\n\t\t                cipher.decryptBlock(words, offset);\n\t\t                xorBlock.call(this, words, offset, blockSize);\n\t\n\t\t                // This block becomes the previous block\n\t\t                this._prevBlock = thisBlock;\n\t\t            }\n\t\t        });\n\t\n\t\t        function xorBlock(words, offset, blockSize) {\n\t\t            // Shortcut\n\t\t            var iv = this._iv;\n\t\n\t\t            // Choose mixing block\n\t\t            if (iv) {\n\t\t                var block = iv;\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            } else {\n\t\t                var block = this._prevBlock;\n\t\t            }\n\t\n\t\t            // XOR blocks\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= block[i];\n\t\t            }\n\t\t        }\n\t\n\t\t        return CBC;\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * Padding namespace.\n\t\t     */\n\t\t    var C_pad = C.pad = {};\n\t\n\t\t    /**\n\t\t     * PKCS #5/7 padding strategy.\n\t\t     */\n\t\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t\t        /**\n\t\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t\t         *\n\t\t         * @param {WordArray} data The data to pad.\n\t\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t\t         */\n\t\t        pad: function (data, blockSize) {\n\t\t            // Shortcut\n\t\t            var blockSizeBytes = blockSize * 4;\n\t\n\t\t            // Count padding bytes\n\t\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\t\n\t\t            // Create padding word\n\t\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\t\n\t\t            // Create padding\n\t\t            var paddingWords = [];\n\t\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t\t                paddingWords.push(paddingWord);\n\t\t            }\n\t\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\t\n\t\t            // Add padding\n\t\t            data.concat(padding);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t\t         *\n\t\t         * @param {WordArray} data The data to unpad.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t\t         */\n\t\t        unpad: function (data) {\n\t\t            // Get number of padding bytes from last byte\n\t\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\t\n\t\t            // Remove padding\n\t\t            data.sigBytes -= nPaddingBytes;\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Abstract base block cipher template.\n\t\t     *\n\t\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t\t     */\n\t\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t\t         */\n\t\t        cfg: Cipher.cfg.extend({\n\t\t            mode: CBC,\n\t\t            padding: Pkcs7\n\t\t        }),\n\t\n\t\t        reset: function () {\n\t\t            // Reset cipher\n\t\t            Cipher.reset.call(this);\n\t\n\t\t            // Shortcuts\n\t\t            var cfg = this.cfg;\n\t\t            var iv = cfg.iv;\n\t\t            var mode = cfg.mode;\n\t\n\t\t            // Reset block mode\n\t\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t\t                var modeCreator = mode.createEncryptor;\n\t\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t\t                var modeCreator = mode.createDecryptor;\n\t\t                // Keep at least one block in the buffer for unpadding\n\t\t                this._minBufferSize = 1;\n\t\t            }\n\t\n\t\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t\t                this._mode.init(this, iv && iv.words);\n\t\t            } else {\n\t\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t\t                this._mode.__creator = modeCreator;\n\t\t            }\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (words, offset) {\n\t\t            this._mode.processBlock(words, offset);\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcut\n\t\t            var padding = this.cfg.padding;\n\t\n\t\t            // Finalize\n\t\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t\t                // Pad data\n\t\t                padding.pad(this._data, this.blockSize);\n\t\n\t\t                // Process final blocks\n\t\t                var finalProcessedBlocks = this._process(!!'flush');\n\t\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t\t                // Process final blocks\n\t\t                var finalProcessedBlocks = this._process(!!'flush');\n\t\n\t\t                // Unpad data\n\t\t                padding.unpad(finalProcessedBlocks);\n\t\t            }\n\t\n\t\t            return finalProcessedBlocks;\n\t\t        },\n\t\n\t\t        blockSize: 128/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * A collection of cipher parameters.\n\t\t     *\n\t\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t\t     * @property {WordArray} key The key to this ciphertext.\n\t\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t\t     * @property {Cipher} algorithm The cipher algorithm.\n\t\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t\t     * @property {number} blockSize The block size of the cipher.\n\t\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t\t     */\n\t\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created cipher params object.\n\t\t         *\n\t\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t\t         *         ciphertext: ciphertextWordArray,\n\t\t         *         key: keyWordArray,\n\t\t         *         iv: ivWordArray,\n\t\t         *         salt: saltWordArray,\n\t\t         *         algorithm: CryptoJS.algo.AES,\n\t\t         *         mode: CryptoJS.mode.CBC,\n\t\t         *         padding: CryptoJS.pad.PKCS7,\n\t\t         *         blockSize: 4,\n\t\t         *         formatter: CryptoJS.format.OpenSSL\n\t\t         *     });\n\t\t         */\n\t\t        init: function (cipherParams) {\n\t\t            this.mixIn(cipherParams);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts this cipher params object to a string.\n\t\t         *\n\t\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t\t         *\n\t\t         * @return {string} The stringified cipher params.\n\t\t         *\n\t\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var string = cipherParams + '';\n\t\t         *     var string = cipherParams.toString();\n\t\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t\t         */\n\t\t        toString: function (formatter) {\n\t\t            return (formatter || this.formatter).stringify(this);\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Format namespace.\n\t\t     */\n\t\t    var C_format = C.format = {};\n\t\n\t\t    /**\n\t\t     * OpenSSL formatting strategy.\n\t\t     */\n\t\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t\t        /**\n\t\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t\t         *\n\t\t         * @param {CipherParams} cipherParams The cipher params object.\n\t\t         *\n\t\t         * @return {string} The OpenSSL-compatible string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t\t         */\n\t\t        stringify: function (cipherParams) {\n\t\t            // Shortcuts\n\t\t            var ciphertext = cipherParams.ciphertext;\n\t\t            var salt = cipherParams.salt;\n\t\n\t\t            // Format\n\t\t            if (salt) {\n\t\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t\t            } else {\n\t\t                var wordArray = ciphertext;\n\t\t            }\n\t\n\t\t            return wordArray.toString(Base64);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t\t         *\n\t\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t\t         *\n\t\t         * @return {CipherParams} The cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t\t         */\n\t\t        parse: function (openSSLStr) {\n\t\t            // Parse base64\n\t\t            var ciphertext = Base64.parse(openSSLStr);\n\t\n\t\t            // Shortcut\n\t\t            var ciphertextWords = ciphertext.words;\n\t\n\t\t            // Test for salt\n\t\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t\t                // Extract salt\n\t\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\t\n\t\t                // Remove salt from ciphertext\n\t\t                ciphertextWords.splice(0, 4);\n\t\t                ciphertext.sigBytes -= 16;\n\t\t            }\n\t\n\t\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t\t     */\n\t\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t\t         */\n\t\t        cfg: Base.extend({\n\t\t            format: OpenSSLFormatter\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Encrypts a message.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {WordArray|string} message The message to encrypt.\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {CipherParams} A cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        encrypt: function (cipher, message, key, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Encrypt\n\t\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t\t            var ciphertext = encryptor.finalize(message);\n\t\n\t\t            // Shortcut\n\t\t            var cipherCfg = encryptor.cfg;\n\t\n\t\t            // Create and return serializable cipher params\n\t\t            return CipherParams.create({\n\t\t                ciphertext: ciphertext,\n\t\t                key: key,\n\t\t                iv: cipherCfg.iv,\n\t\t                algorithm: cipher,\n\t\t                mode: cipherCfg.mode,\n\t\t                padding: cipherCfg.padding,\n\t\t                blockSize: cipher.blockSize,\n\t\t                formatter: cfg.format\n\t\t            });\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Decrypts serialized ciphertext.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {WordArray} The plaintext.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Convert string to CipherParams\n\t\t            ciphertext = this._parse(ciphertext, cfg.format);\n\t\n\t\t            // Decrypt\n\t\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\t\n\t\t            return plaintext;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts serialized ciphertext to CipherParams,\n\t\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t\t         *\n\t\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t\t         *\n\t\t         * @return {CipherParams} The unserialized ciphertext.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t\t         */\n\t\t        _parse: function (ciphertext, format) {\n\t\t            if (typeof ciphertext == 'string') {\n\t\t                return format.parse(ciphertext, this);\n\t\t            } else {\n\t\t                return ciphertext;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Key derivation function namespace.\n\t\t     */\n\t\t    var C_kdf = C.kdf = {};\n\t\n\t\t    /**\n\t\t     * OpenSSL key derivation function.\n\t\t     */\n\t\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t\t        /**\n\t\t         * Derives a key and IV from a password.\n\t\t         *\n\t\t         * @param {string} password The password to derive from.\n\t\t         * @param {number} keySize The size in words of the key to generate.\n\t\t         * @param {number} ivSize The size in words of the IV to generate.\n\t\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t\t         *\n\t\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t\t         */\n\t\t        execute: function (password, keySize, ivSize, salt) {\n\t\t            // Generate random salt\n\t\t            if (!salt) {\n\t\t                salt = WordArray.random(64/8);\n\t\t            }\n\t\n\t\t            // Derive key and IV\n\t\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t\n\t\t            // Separate key and IV\n\t\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t\t            key.sigBytes = keySize * 4;\n\t\n\t\t            // Return params\n\t\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * A serializable cipher wrapper that derives the key from a password,\n\t\t     * and returns ciphertext as a serializable cipher params object.\n\t\t     */\n\t\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t\t         */\n\t\t        cfg: SerializableCipher.cfg.extend({\n\t\t            kdf: OpenSSLKdf\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Encrypts a message using a password.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {WordArray|string} message The message to encrypt.\n\t\t         * @param {string} password The password.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {CipherParams} A cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        encrypt: function (cipher, message, password, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Derive key and other params\n\t\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\t\n\t\t            // Add IV to config\n\t\t            cfg.iv = derivedParams.iv;\n\t\n\t\t            // Encrypt\n\t\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\t\n\t\t            // Mix in derived params\n\t\t            ciphertext.mixIn(derivedParams);\n\t\n\t\t            return ciphertext;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Decrypts serialized ciphertext using a password.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t\t         * @param {string} password The password.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {WordArray} The plaintext.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Convert string to CipherParams\n\t\t            ciphertext = this._parse(ciphertext, cfg.format);\n\t\n\t\t            // Derive key and other params\n\t\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\t\n\t\t            // Add IV to config\n\t\t            cfg.iv = derivedParams.iv;\n\t\n\t\t            // Decrypt\n\t\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\t\n\t\t            return plaintext;\n\t\t        }\n\t\t    });\n\t\t}());\n\t\n\t\n\t}));\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Cipher Feedback block mode.\n\t\t */\n\t\tCryptoJS.mode.CFB = (function () {\n\t\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    CFB.Encryptor = CFB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher;\n\t\t            var blockSize = cipher.blockSize;\n\t\n\t\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\t\n\t\t            // Remember this block to use with next block\n\t\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t\t        }\n\t\t    });\n\t\n\t\t    CFB.Decryptor = CFB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher;\n\t\t            var blockSize = cipher.blockSize;\n\t\n\t\t            // Remember this block to use with next block\n\t\t            var thisBlock = words.slice(offset, offset + blockSize);\n\t\n\t\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\t\n\t\t            // This block becomes the previous block\n\t\t            this._prevBlock = thisBlock;\n\t\t        }\n\t\t    });\n\t\n\t\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t\t        // Shortcut\n\t\t        var iv = this._iv;\n\t\n\t\t        // Generate keystream\n\t\t        if (iv) {\n\t\t            var keystream = iv.slice(0);\n\t\n\t\t            // Remove IV for subsequent blocks\n\t\t            this._iv = undefined;\n\t\t        } else {\n\t\t            var keystream = this._prevBlock;\n\t\t        }\n\t\t        cipher.encryptBlock(keystream, 0);\n\t\n\t\t        // Encrypt\n\t\t        for (var i = 0; i < blockSize; i++) {\n\t\t            words[offset + i] ^= keystream[i];\n\t\t        }\n\t\t    }\n\t\n\t\t    return CFB;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.CFB;\n\t\n\t}));\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Counter block mode.\n\t\t */\n\t\tCryptoJS.mode.CTR = (function () {\n\t\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher\n\t\t            var blockSize = cipher.blockSize;\n\t\t            var iv = this._iv;\n\t\t            var counter = this._counter;\n\t\n\t\t            // Generate keystream\n\t\t            if (iv) {\n\t\t                counter = this._counter = iv.slice(0);\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            }\n\t\t            var keystream = counter.slice(0);\n\t\t            cipher.encryptBlock(keystream, 0);\n\t\n\t\t            // Increment counter\n\t\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\t\n\t\t            // Encrypt\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= keystream[i];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    CTR.Decryptor = Encryptor;\n\t\n\t\t    return CTR;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.CTR;\n\t\n\t}));\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/** @preserve\n\t\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t\t * derived from CryptoJS.mode.CTR\n\t\t * Jan Hruby jhruby.web@gmail.com\n\t\t */\n\t\tCryptoJS.mode.CTRGladman = (function () {\n\t\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t\tfunction incWord(word)\n\t\t\t{\n\t\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\t\tvar b3 = word & 0xff;\n\t\n\t\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t\t{\n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff)\n\t\t\t\t\t{\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t++b1;\n\t\t\t\t}\n\t\n\t\t\t\tword = 0;\n\t\t\t\tword += (b1 << 16);\n\t\t\t\tword += (b2 << 8);\n\t\t\t\tword += b3;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\tword += (0x01 << 24);\n\t\t\t\t}\n\t\t\t\treturn word;\n\t\t\t}\n\t\n\t\t\tfunction incCounter(counter)\n\t\t\t{\n\t\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t\t{\n\t\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t\t}\n\t\t\t\treturn counter;\n\t\t\t}\n\t\n\t\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher\n\t\t            var blockSize = cipher.blockSize;\n\t\t            var iv = this._iv;\n\t\t            var counter = this._counter;\n\t\n\t\t            // Generate keystream\n\t\t            if (iv) {\n\t\t                counter = this._counter = iv.slice(0);\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            }\n\t\n\t\t\t\t\tincCounter(counter);\n\t\n\t\t\t\t\tvar keystream = counter.slice(0);\n\t\t            cipher.encryptBlock(keystream, 0);\n\t\n\t\t            // Encrypt\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= keystream[i];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    CTRGladman.Decryptor = Encryptor;\n\t\n\t\t    return CTRGladman;\n\t\t}());\n\t\n\t\n\t\n\t\n\t\treturn CryptoJS.mode.CTRGladman;\n\t\n\t}));\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Output Feedback block mode.\n\t\t */\n\t\tCryptoJS.mode.OFB = (function () {\n\t\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher\n\t\t            var blockSize = cipher.blockSize;\n\t\t            var iv = this._iv;\n\t\t            var keystream = this._keystream;\n\t\n\t\t            // Generate keystream\n\t\t            if (iv) {\n\t\t                keystream = this._keystream = iv.slice(0);\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            }\n\t\t            cipher.encryptBlock(keystream, 0);\n\t\n\t\t            // Encrypt\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= keystream[i];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    OFB.Decryptor = Encryptor;\n\t\n\t\t    return OFB;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.OFB;\n\t\n\t}));\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Electronic Codebook block mode.\n\t\t */\n\t\tCryptoJS.mode.ECB = (function () {\n\t\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    ECB.Encryptor = ECB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            this._cipher.encryptBlock(words, offset);\n\t\t        }\n\t\t    });\n\t\n\t\t    ECB.Decryptor = ECB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            this._cipher.decryptBlock(words, offset);\n\t\t        }\n\t\t    });\n\t\n\t\t    return ECB;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.ECB;\n\t\n\t}));\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * ANSI X.923 padding strategy.\n\t\t */\n\t\tCryptoJS.pad.AnsiX923 = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Shortcuts\n\t\t        var dataSigBytes = data.sigBytes;\n\t\t        var blockSizeBytes = blockSize * 4;\n\t\n\t\t        // Count padding bytes\n\t\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\t\n\t\t        // Compute last byte position\n\t\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\t\n\t\t        // Pad\n\t\t        data.clamp();\n\t\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t\t        data.sigBytes += nPaddingBytes;\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Get number of padding bytes from last byte\n\t\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\t\n\t\t        // Remove padding\n\t\t        data.sigBytes -= nPaddingBytes;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.Ansix923;\n\t\n\t}));\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * ISO 10126 padding strategy.\n\t\t */\n\t\tCryptoJS.pad.Iso10126 = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Shortcut\n\t\t        var blockSizeBytes = blockSize * 4;\n\t\n\t\t        // Count padding bytes\n\t\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\t\n\t\t        // Pad\n\t\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Get number of padding bytes from last byte\n\t\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\t\n\t\t        // Remove padding\n\t\t        data.sigBytes -= nPaddingBytes;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.Iso10126;\n\t\n\t}));\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * ISO/IEC 9797-1 Padding Method 2.\n\t\t */\n\t\tCryptoJS.pad.Iso97971 = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Add 0x80 byte\n\t\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\t\n\t\t        // Zero pad the rest\n\t\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Remove zero padding\n\t\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\t\n\t\t        // Remove one more byte -- the 0x80 byte\n\t\t        data.sigBytes--;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.Iso97971;\n\t\n\t}));\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Zero padding strategy.\n\t\t */\n\t\tCryptoJS.pad.ZeroPadding = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Shortcut\n\t\t        var blockSizeBytes = blockSize * 4;\n\t\n\t\t        // Pad\n\t\t        data.clamp();\n\t\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Shortcut\n\t\t        var dataWords = data.words;\n\t\n\t\t        // Unpad\n\t\t        var i = data.sigBytes - 1;\n\t\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t\t            i--;\n\t\t        }\n\t\t        data.sigBytes = i + 1;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.ZeroPadding;\n\t\n\t}));\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * A noop padding strategy.\n\t\t */\n\t\tCryptoJS.pad.NoPadding = {\n\t\t    pad: function () {\n\t\t    },\n\t\n\t\t    unpad: function () {\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.NoPadding;\n\t\n\t}));\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (undefined) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var CipherParams = C_lib.CipherParams;\n\t\t    var C_enc = C.enc;\n\t\t    var Hex = C_enc.Hex;\n\t\t    var C_format = C.format;\n\t\n\t\t    var HexFormatter = C_format.Hex = {\n\t\t        /**\n\t\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t\t         *\n\t\t         * @param {CipherParams} cipherParams The cipher params object.\n\t\t         *\n\t\t         * @return {string} The hexadecimally encoded string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t\t         */\n\t\t        stringify: function (cipherParams) {\n\t\t            return cipherParams.ciphertext.toString(Hex);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t\t         *\n\t\t         * @param {string} input The hexadecimally encoded string.\n\t\t         *\n\t\t         * @return {CipherParams} The cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t\t         */\n\t\t        parse: function (input) {\n\t\t            var ciphertext = Hex.parse(input);\n\t\t            return CipherParams.create({ ciphertext: ciphertext });\n\t\t        }\n\t\t    };\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.format.Hex;\n\t\n\t}));\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(33), __webpack_require__(34), __webpack_require__(44), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var BlockCipher = C_lib.BlockCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Lookup tables\n\t\t    var SBOX = [];\n\t\t    var INV_SBOX = [];\n\t\t    var SUB_MIX_0 = [];\n\t\t    var SUB_MIX_1 = [];\n\t\t    var SUB_MIX_2 = [];\n\t\t    var SUB_MIX_3 = [];\n\t\t    var INV_SUB_MIX_0 = [];\n\t\t    var INV_SUB_MIX_1 = [];\n\t\t    var INV_SUB_MIX_2 = [];\n\t\t    var INV_SUB_MIX_3 = [];\n\t\n\t\t    // Compute lookup tables\n\t\t    (function () {\n\t\t        // Compute double table\n\t\t        var d = [];\n\t\t        for (var i = 0; i < 256; i++) {\n\t\t            if (i < 128) {\n\t\t                d[i] = i << 1;\n\t\t            } else {\n\t\t                d[i] = (i << 1) ^ 0x11b;\n\t\t            }\n\t\t        }\n\t\n\t\t        // Walk GF(2^8)\n\t\t        var x = 0;\n\t\t        var xi = 0;\n\t\t        for (var i = 0; i < 256; i++) {\n\t\t            // Compute sbox\n\t\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t\t            SBOX[x] = sx;\n\t\t            INV_SBOX[sx] = x;\n\t\n\t\t            // Compute multiplication\n\t\t            var x2 = d[x];\n\t\t            var x4 = d[x2];\n\t\t            var x8 = d[x4];\n\t\n\t\t            // Compute sub bytes, mix columns tables\n\t\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t\t            SUB_MIX_3[x] = t;\n\t\n\t\t            // Compute inv sub bytes, inv mix columns tables\n\t\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t\t            INV_SUB_MIX_3[sx] = t;\n\t\n\t\t            // Compute next counter\n\t\t            if (!x) {\n\t\t                x = xi = 1;\n\t\t            } else {\n\t\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t\t                xi ^= d[d[xi]];\n\t\t            }\n\t\t        }\n\t\t    }());\n\t\n\t\t    // Precomputed Rcon lookup\n\t\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\t\n\t\t    /**\n\t\t     * AES block cipher algorithm.\n\t\t     */\n\t\t    var AES = C_algo.AES = BlockCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Skip reset of nRounds has been set before and key did not change\n\t\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t\t                return;\n\t\t            }\n\t\n\t\t            // Shortcuts\n\t\t            var key = this._keyPriorReset = this._key;\n\t\t            var keyWords = key.words;\n\t\t            var keySize = key.sigBytes / 4;\n\t\n\t\t            // Compute number of rounds\n\t\t            var nRounds = this._nRounds = keySize + 6;\n\t\n\t\t            // Compute number of key schedule rows\n\t\t            var ksRows = (nRounds + 1) * 4;\n\t\n\t\t            // Compute key schedule\n\t\t            var keySchedule = this._keySchedule = [];\n\t\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t\t                if (ksRow < keySize) {\n\t\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t\t                } else {\n\t\t                    var t = keySchedule[ksRow - 1];\n\t\n\t\t                    if (!(ksRow % keySize)) {\n\t\t                        // Rot word\n\t\t                        t = (t << 8) | (t >>> 24);\n\t\n\t\t                        // Sub word\n\t\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t\n\t\t                        // Mix Rcon\n\t\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t\t                        // Sub word\n\t\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t\t                    }\n\t\n\t\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t\t                }\n\t\t            }\n\t\n\t\t            // Compute inv key schedule\n\t\t            var invKeySchedule = this._invKeySchedule = [];\n\t\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t\t                var ksRow = ksRows - invKsRow;\n\t\n\t\t                if (invKsRow % 4) {\n\t\t                    var t = keySchedule[ksRow];\n\t\t                } else {\n\t\t                    var t = keySchedule[ksRow - 4];\n\t\t                }\n\t\n\t\t                if (invKsRow < 4 || ksRow <= 4) {\n\t\t                    invKeySchedule[invKsRow] = t;\n\t\t                } else {\n\t\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t\t                }\n\t\t            }\n\t\t        },\n\t\n\t\t        encryptBlock: function (M, offset) {\n\t\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t\t        },\n\t\n\t\t        decryptBlock: function (M, offset) {\n\t\t            // Swap 2nd and 4th rows\n\t\t            var t = M[offset + 1];\n\t\t            M[offset + 1] = M[offset + 3];\n\t\t            M[offset + 3] = t;\n\t\n\t\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\t\n\t\t            // Inv swap 2nd and 4th rows\n\t\t            var t = M[offset + 1];\n\t\t            M[offset + 1] = M[offset + 3];\n\t\t            M[offset + 3] = t;\n\t\t        },\n\t\n\t\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t\t            // Shortcut\n\t\t            var nRounds = this._nRounds;\n\t\n\t\t            // Get input, add round key\n\t\t            var s0 = M[offset]     ^ keySchedule[0];\n\t\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\t\n\t\t            // Key schedule row counter\n\t\t            var ksRow = 4;\n\t\n\t\t            // Rounds\n\t\t            for (var round = 1; round < nRounds; round++) {\n\t\t                // Shift rows, sub bytes, mix columns, add round key\n\t\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\t\n\t\t                // Update state\n\t\t                s0 = t0;\n\t\t                s1 = t1;\n\t\t                s2 = t2;\n\t\t                s3 = t3;\n\t\t            }\n\t\n\t\t            // Shift rows, sub bytes, add round key\n\t\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\t\n\t\t            // Set output\n\t\t            M[offset]     = t0;\n\t\t            M[offset + 1] = t1;\n\t\t            M[offset + 2] = t2;\n\t\t            M[offset + 3] = t3;\n\t\t        },\n\t\n\t\t        keySize: 256/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.AES = BlockCipher._createHelper(AES);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.AES;\n\t\n\t}));\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(33), __webpack_require__(34), __webpack_require__(44), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var BlockCipher = C_lib.BlockCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Permuted Choice 1 constants\n\t\t    var PC1 = [\n\t\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t\t        29, 21, 13, 5,  28, 20, 12, 4\n\t\t    ];\n\t\n\t\t    // Permuted Choice 2 constants\n\t\t    var PC2 = [\n\t\t        14, 17, 11, 24, 1,  5,\n\t\t        3,  28, 15, 6,  21, 10,\n\t\t        23, 19, 12, 4,  26, 8,\n\t\t        16, 7,  27, 20, 13, 2,\n\t\t        41, 52, 31, 37, 47, 55,\n\t\t        30, 40, 51, 45, 33, 48,\n\t\t        44, 49, 39, 56, 34, 53,\n\t\t        46, 42, 50, 36, 29, 32\n\t\t    ];\n\t\n\t\t    // Cumulative bit shift constants\n\t\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\t\n\t\t    // SBOXes and round permutation constants\n\t\t    var SBOX_P = [\n\t\t        {\n\t\t            0x0: 0x808200,\n\t\t            0x10000000: 0x8000,\n\t\t            0x20000000: 0x808002,\n\t\t            0x30000000: 0x2,\n\t\t            0x40000000: 0x200,\n\t\t            0x50000000: 0x808202,\n\t\t            0x60000000: 0x800202,\n\t\t            0x70000000: 0x800000,\n\t\t            0x80000000: 0x202,\n\t\t            0x90000000: 0x800200,\n\t\t            0xa0000000: 0x8200,\n\t\t            0xb0000000: 0x808000,\n\t\t            0xc0000000: 0x8002,\n\t\t            0xd0000000: 0x800002,\n\t\t            0xe0000000: 0x0,\n\t\t            0xf0000000: 0x8202,\n\t\t            0x8000000: 0x0,\n\t\t            0x18000000: 0x808202,\n\t\t            0x28000000: 0x8202,\n\t\t            0x38000000: 0x8000,\n\t\t            0x48000000: 0x808200,\n\t\t            0x58000000: 0x200,\n\t\t            0x68000000: 0x808002,\n\t\t            0x78000000: 0x2,\n\t\t            0x88000000: 0x800200,\n\t\t            0x98000000: 0x8200,\n\t\t            0xa8000000: 0x808000,\n\t\t            0xb8000000: 0x800202,\n\t\t            0xc8000000: 0x800002,\n\t\t            0xd8000000: 0x8002,\n\t\t            0xe8000000: 0x202,\n\t\t            0xf8000000: 0x800000,\n\t\t            0x1: 0x8000,\n\t\t            0x10000001: 0x2,\n\t\t            0x20000001: 0x808200,\n\t\t            0x30000001: 0x800000,\n\t\t            0x40000001: 0x808002,\n\t\t            0x50000001: 0x8200,\n\t\t            0x60000001: 0x200,\n\t\t            0x70000001: 0x800202,\n\t\t            0x80000001: 0x808202,\n\t\t            0x90000001: 0x808000,\n\t\t            0xa0000001: 0x800002,\n\t\t            0xb0000001: 0x8202,\n\t\t            0xc0000001: 0x202,\n\t\t            0xd0000001: 0x800200,\n\t\t            0xe0000001: 0x8002,\n\t\t            0xf0000001: 0x0,\n\t\t            0x8000001: 0x808202,\n\t\t            0x18000001: 0x808000,\n\t\t            0x28000001: 0x800000,\n\t\t            0x38000001: 0x200,\n\t\t            0x48000001: 0x8000,\n\t\t            0x58000001: 0x800002,\n\t\t            0x68000001: 0x2,\n\t\t            0x78000001: 0x8202,\n\t\t            0x88000001: 0x8002,\n\t\t            0x98000001: 0x800202,\n\t\t            0xa8000001: 0x202,\n\t\t            0xb8000001: 0x808200,\n\t\t            0xc8000001: 0x800200,\n\t\t            0xd8000001: 0x0,\n\t\t            0xe8000001: 0x8200,\n\t\t            0xf8000001: 0x808002\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x40084010,\n\t\t            0x1000000: 0x4000,\n\t\t            0x2000000: 0x80000,\n\t\t            0x3000000: 0x40080010,\n\t\t            0x4000000: 0x40000010,\n\t\t            0x5000000: 0x40084000,\n\t\t            0x6000000: 0x40004000,\n\t\t            0x7000000: 0x10,\n\t\t            0x8000000: 0x84000,\n\t\t            0x9000000: 0x40004010,\n\t\t            0xa000000: 0x40000000,\n\t\t            0xb000000: 0x84010,\n\t\t            0xc000000: 0x80010,\n\t\t            0xd000000: 0x0,\n\t\t            0xe000000: 0x4010,\n\t\t            0xf000000: 0x40080000,\n\t\t            0x800000: 0x40004000,\n\t\t            0x1800000: 0x84010,\n\t\t            0x2800000: 0x10,\n\t\t            0x3800000: 0x40004010,\n\t\t            0x4800000: 0x40084010,\n\t\t            0x5800000: 0x40000000,\n\t\t            0x6800000: 0x80000,\n\t\t            0x7800000: 0x40080010,\n\t\t            0x8800000: 0x80010,\n\t\t            0x9800000: 0x0,\n\t\t            0xa800000: 0x4000,\n\t\t            0xb800000: 0x40080000,\n\t\t            0xc800000: 0x40000010,\n\t\t            0xd800000: 0x84000,\n\t\t            0xe800000: 0x40084000,\n\t\t            0xf800000: 0x4010,\n\t\t            0x10000000: 0x0,\n\t\t            0x11000000: 0x40080010,\n\t\t            0x12000000: 0x40004010,\n\t\t            0x13000000: 0x40084000,\n\t\t            0x14000000: 0x40080000,\n\t\t            0x15000000: 0x10,\n\t\t            0x16000000: 0x84010,\n\t\t            0x17000000: 0x4000,\n\t\t            0x18000000: 0x4010,\n\t\t            0x19000000: 0x80000,\n\t\t            0x1a000000: 0x80010,\n\t\t            0x1b000000: 0x40000010,\n\t\t            0x1c000000: 0x84000,\n\t\t            0x1d000000: 0x40004000,\n\t\t            0x1e000000: 0x40000000,\n\t\t            0x1f000000: 0x40084010,\n\t\t            0x10800000: 0x84010,\n\t\t            0x11800000: 0x80000,\n\t\t            0x12800000: 0x40080000,\n\t\t            0x13800000: 0x4000,\n\t\t            0x14800000: 0x40004000,\n\t\t            0x15800000: 0x40084010,\n\t\t            0x16800000: 0x10,\n\t\t            0x17800000: 0x40000000,\n\t\t            0x18800000: 0x40084000,\n\t\t            0x19800000: 0x40000010,\n\t\t            0x1a800000: 0x40004010,\n\t\t            0x1b800000: 0x80010,\n\t\t            0x1c800000: 0x0,\n\t\t            0x1d800000: 0x4010,\n\t\t            0x1e800000: 0x40080010,\n\t\t            0x1f800000: 0x84000\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x104,\n\t\t            0x100000: 0x0,\n\t\t            0x200000: 0x4000100,\n\t\t            0x300000: 0x10104,\n\t\t            0x400000: 0x10004,\n\t\t            0x500000: 0x4000004,\n\t\t            0x600000: 0x4010104,\n\t\t            0x700000: 0x4010000,\n\t\t            0x800000: 0x4000000,\n\t\t            0x900000: 0x4010100,\n\t\t            0xa00000: 0x10100,\n\t\t            0xb00000: 0x4010004,\n\t\t            0xc00000: 0x4000104,\n\t\t            0xd00000: 0x10000,\n\t\t            0xe00000: 0x4,\n\t\t            0xf00000: 0x100,\n\t\t            0x80000: 0x4010100,\n\t\t            0x180000: 0x4010004,\n\t\t            0x280000: 0x0,\n\t\t            0x380000: 0x4000100,\n\t\t            0x480000: 0x4000004,\n\t\t            0x580000: 0x10000,\n\t\t            0x680000: 0x10004,\n\t\t            0x780000: 0x104,\n\t\t            0x880000: 0x4,\n\t\t            0x980000: 0x100,\n\t\t            0xa80000: 0x4010000,\n\t\t            0xb80000: 0x10104,\n\t\t            0xc80000: 0x10100,\n\t\t            0xd80000: 0x4000104,\n\t\t            0xe80000: 0x4010104,\n\t\t            0xf80000: 0x4000000,\n\t\t            0x1000000: 0x4010100,\n\t\t            0x1100000: 0x10004,\n\t\t            0x1200000: 0x10000,\n\t\t            0x1300000: 0x4000100,\n\t\t            0x1400000: 0x100,\n\t\t            0x1500000: 0x4010104,\n\t\t            0x1600000: 0x4000004,\n\t\t            0x1700000: 0x0,\n\t\t            0x1800000: 0x4000104,\n\t\t            0x1900000: 0x4000000,\n\t\t            0x1a00000: 0x4,\n\t\t            0x1b00000: 0x10100,\n\t\t            0x1c00000: 0x4010000,\n\t\t            0x1d00000: 0x104,\n\t\t            0x1e00000: 0x10104,\n\t\t            0x1f00000: 0x4010004,\n\t\t            0x1080000: 0x4000000,\n\t\t            0x1180000: 0x104,\n\t\t            0x1280000: 0x4010100,\n\t\t            0x1380000: 0x0,\n\t\t            0x1480000: 0x10004,\n\t\t            0x1580000: 0x4000100,\n\t\t            0x1680000: 0x100,\n\t\t            0x1780000: 0x4010004,\n\t\t            0x1880000: 0x10000,\n\t\t            0x1980000: 0x4010104,\n\t\t            0x1a80000: 0x10104,\n\t\t            0x1b80000: 0x4000004,\n\t\t            0x1c80000: 0x4000104,\n\t\t            0x1d80000: 0x4010000,\n\t\t            0x1e80000: 0x4,\n\t\t            0x1f80000: 0x10100\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x80401000,\n\t\t            0x10000: 0x80001040,\n\t\t            0x20000: 0x401040,\n\t\t            0x30000: 0x80400000,\n\t\t            0x40000: 0x0,\n\t\t            0x50000: 0x401000,\n\t\t            0x60000: 0x80000040,\n\t\t            0x70000: 0x400040,\n\t\t            0x80000: 0x80000000,\n\t\t            0x90000: 0x400000,\n\t\t            0xa0000: 0x40,\n\t\t            0xb0000: 0x80001000,\n\t\t            0xc0000: 0x80400040,\n\t\t            0xd0000: 0x1040,\n\t\t            0xe0000: 0x1000,\n\t\t            0xf0000: 0x80401040,\n\t\t            0x8000: 0x80001040,\n\t\t            0x18000: 0x40,\n\t\t            0x28000: 0x80400040,\n\t\t            0x38000: 0x80001000,\n\t\t            0x48000: 0x401000,\n\t\t            0x58000: 0x80401040,\n\t\t            0x68000: 0x0,\n\t\t            0x78000: 0x80400000,\n\t\t            0x88000: 0x1000,\n\t\t            0x98000: 0x80401000,\n\t\t            0xa8000: 0x400000,\n\t\t            0xb8000: 0x1040,\n\t\t            0xc8000: 0x80000000,\n\t\t            0xd8000: 0x400040,\n\t\t            0xe8000: 0x401040,\n\t\t            0xf8000: 0x80000040,\n\t\t            0x100000: 0x400040,\n\t\t            0x110000: 0x401000,\n\t\t            0x120000: 0x80000040,\n\t\t            0x130000: 0x0,\n\t\t            0x140000: 0x1040,\n\t\t            0x150000: 0x80400040,\n\t\t            0x160000: 0x80401000,\n\t\t            0x170000: 0x80001040,\n\t\t            0x180000: 0x80401040,\n\t\t            0x190000: 0x80000000,\n\t\t            0x1a0000: 0x80400000,\n\t\t            0x1b0000: 0x401040,\n\t\t            0x1c0000: 0x80001000,\n\t\t            0x1d0000: 0x400000,\n\t\t            0x1e0000: 0x40,\n\t\t            0x1f0000: 0x1000,\n\t\t            0x108000: 0x80400000,\n\t\t            0x118000: 0x80401040,\n\t\t            0x128000: 0x0,\n\t\t            0x138000: 0x401000,\n\t\t            0x148000: 0x400040,\n\t\t            0x158000: 0x80000000,\n\t\t            0x168000: 0x80001040,\n\t\t            0x178000: 0x40,\n\t\t            0x188000: 0x80000040,\n\t\t            0x198000: 0x1000,\n\t\t            0x1a8000: 0x80001000,\n\t\t            0x1b8000: 0x80400040,\n\t\t            0x1c8000: 0x1040,\n\t\t            0x1d8000: 0x80401000,\n\t\t            0x1e8000: 0x400000,\n\t\t            0x1f8000: 0x401040\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x80,\n\t\t            0x1000: 0x1040000,\n\t\t            0x2000: 0x40000,\n\t\t            0x3000: 0x20000000,\n\t\t            0x4000: 0x20040080,\n\t\t            0x5000: 0x1000080,\n\t\t            0x6000: 0x21000080,\n\t\t            0x7000: 0x40080,\n\t\t            0x8000: 0x1000000,\n\t\t            0x9000: 0x20040000,\n\t\t            0xa000: 0x20000080,\n\t\t            0xb000: 0x21040080,\n\t\t            0xc000: 0x21040000,\n\t\t            0xd000: 0x0,\n\t\t            0xe000: 0x1040080,\n\t\t            0xf000: 0x21000000,\n\t\t            0x800: 0x1040080,\n\t\t            0x1800: 0x21000080,\n\t\t            0x2800: 0x80,\n\t\t            0x3800: 0x1040000,\n\t\t            0x4800: 0x40000,\n\t\t            0x5800: 0x20040080,\n\t\t            0x6800: 0x21040000,\n\t\t            0x7800: 0x20000000,\n\t\t            0x8800: 0x20040000,\n\t\t            0x9800: 0x0,\n\t\t            0xa800: 0x21040080,\n\t\t            0xb800: 0x1000080,\n\t\t            0xc800: 0x20000080,\n\t\t            0xd800: 0x21000000,\n\t\t            0xe800: 0x1000000,\n\t\t            0xf800: 0x40080,\n\t\t            0x10000: 0x40000,\n\t\t            0x11000: 0x80,\n\t\t            0x12000: 0x20000000,\n\t\t            0x13000: 0x21000080,\n\t\t            0x14000: 0x1000080,\n\t\t            0x15000: 0x21040000,\n\t\t            0x16000: 0x20040080,\n\t\t            0x17000: 0x1000000,\n\t\t            0x18000: 0x21040080,\n\t\t            0x19000: 0x21000000,\n\t\t            0x1a000: 0x1040000,\n\t\t            0x1b000: 0x20040000,\n\t\t            0x1c000: 0x40080,\n\t\t            0x1d000: 0x20000080,\n\t\t            0x1e000: 0x0,\n\t\t            0x1f000: 0x1040080,\n\t\t            0x10800: 0x21000080,\n\t\t            0x11800: 0x1000000,\n\t\t            0x12800: 0x1040000,\n\t\t            0x13800: 0x20040080,\n\t\t            0x14800: 0x20000000,\n\t\t            0x15800: 0x1040080,\n\t\t            0x16800: 0x80,\n\t\t            0x17800: 0x21040000,\n\t\t            0x18800: 0x40080,\n\t\t            0x19800: 0x21040080,\n\t\t            0x1a800: 0x0,\n\t\t            0x1b800: 0x21000000,\n\t\t            0x1c800: 0x1000080,\n\t\t            0x1d800: 0x40000,\n\t\t            0x1e800: 0x20040000,\n\t\t            0x1f800: 0x20000080\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x10000008,\n\t\t            0x100: 0x2000,\n\t\t            0x200: 0x10200000,\n\t\t            0x300: 0x10202008,\n\t\t            0x400: 0x10002000,\n\t\t            0x500: 0x200000,\n\t\t            0x600: 0x200008,\n\t\t            0x700: 0x10000000,\n\t\t            0x800: 0x0,\n\t\t            0x900: 0x10002008,\n\t\t            0xa00: 0x202000,\n\t\t            0xb00: 0x8,\n\t\t            0xc00: 0x10200008,\n\t\t            0xd00: 0x202008,\n\t\t            0xe00: 0x2008,\n\t\t            0xf00: 0x10202000,\n\t\t            0x80: 0x10200000,\n\t\t            0x180: 0x10202008,\n\t\t            0x280: 0x8,\n\t\t            0x380: 0x200000,\n\t\t            0x480: 0x202008,\n\t\t            0x580: 0x10000008,\n\t\t            0x680: 0x10002000,\n\t\t            0x780: 0x2008,\n\t\t            0x880: 0x200008,\n\t\t            0x980: 0x2000,\n\t\t            0xa80: 0x10002008,\n\t\t            0xb80: 0x10200008,\n\t\t            0xc80: 0x0,\n\t\t            0xd80: 0x10202000,\n\t\t            0xe80: 0x202000,\n\t\t            0xf80: 0x10000000,\n\t\t            0x1000: 0x10002000,\n\t\t            0x1100: 0x10200008,\n\t\t            0x1200: 0x10202008,\n\t\t            0x1300: 0x2008,\n\t\t            0x1400: 0x200000,\n\t\t            0x1500: 0x10000000,\n\t\t            0x1600: 0x10000008,\n\t\t            0x1700: 0x202000,\n\t\t            0x1800: 0x202008,\n\t\t            0x1900: 0x0,\n\t\t            0x1a00: 0x8,\n\t\t            0x1b00: 0x10200000,\n\t\t            0x1c00: 0x2000,\n\t\t            0x1d00: 0x10002008,\n\t\t            0x1e00: 0x10202000,\n\t\t            0x1f00: 0x200008,\n\t\t            0x1080: 0x8,\n\t\t            0x1180: 0x202000,\n\t\t            0x1280: 0x200000,\n\t\t            0x1380: 0x10000008,\n\t\t            0x1480: 0x10002000,\n\t\t            0x1580: 0x2008,\n\t\t            0x1680: 0x10202008,\n\t\t            0x1780: 0x10200000,\n\t\t            0x1880: 0x10202000,\n\t\t            0x1980: 0x10200008,\n\t\t            0x1a80: 0x2000,\n\t\t            0x1b80: 0x202008,\n\t\t            0x1c80: 0x200008,\n\t\t            0x1d80: 0x0,\n\t\t            0x1e80: 0x10000000,\n\t\t            0x1f80: 0x10002008\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x100000,\n\t\t            0x10: 0x2000401,\n\t\t            0x20: 0x400,\n\t\t            0x30: 0x100401,\n\t\t            0x40: 0x2100401,\n\t\t            0x50: 0x0,\n\t\t            0x60: 0x1,\n\t\t            0x70: 0x2100001,\n\t\t            0x80: 0x2000400,\n\t\t            0x90: 0x100001,\n\t\t            0xa0: 0x2000001,\n\t\t            0xb0: 0x2100400,\n\t\t            0xc0: 0x2100000,\n\t\t            0xd0: 0x401,\n\t\t            0xe0: 0x100400,\n\t\t            0xf0: 0x2000000,\n\t\t            0x8: 0x2100001,\n\t\t            0x18: 0x0,\n\t\t            0x28: 0x2000401,\n\t\t            0x38: 0x2100400,\n\t\t            0x48: 0x100000,\n\t\t            0x58: 0x2000001,\n\t\t            0x68: 0x2000000,\n\t\t            0x78: 0x401,\n\t\t            0x88: 0x100401,\n\t\t            0x98: 0x2000400,\n\t\t            0xa8: 0x2100000,\n\t\t            0xb8: 0x100001,\n\t\t            0xc8: 0x400,\n\t\t            0xd8: 0x2100401,\n\t\t            0xe8: 0x1,\n\t\t            0xf8: 0x100400,\n\t\t            0x100: 0x2000000,\n\t\t            0x110: 0x100000,\n\t\t            0x120: 0x2000401,\n\t\t            0x130: 0x2100001,\n\t\t            0x140: 0x100001,\n\t\t            0x150: 0x2000400,\n\t\t            0x160: 0x2100400,\n\t\t            0x170: 0x100401,\n\t\t            0x180: 0x401,\n\t\t            0x190: 0x2100401,\n\t\t            0x1a0: 0x100400,\n\t\t            0x1b0: 0x1,\n\t\t            0x1c0: 0x0,\n\t\t            0x1d0: 0x2100000,\n\t\t            0x1e0: 0x2000001,\n\t\t            0x1f0: 0x400,\n\t\t            0x108: 0x100400,\n\t\t            0x118: 0x2000401,\n\t\t            0x128: 0x2100001,\n\t\t            0x138: 0x1,\n\t\t            0x148: 0x2000000,\n\t\t            0x158: 0x100000,\n\t\t            0x168: 0x401,\n\t\t            0x178: 0x2100400,\n\t\t            0x188: 0x2000001,\n\t\t            0x198: 0x2100000,\n\t\t            0x1a8: 0x0,\n\t\t            0x1b8: 0x2100401,\n\t\t            0x1c8: 0x100401,\n\t\t            0x1d8: 0x400,\n\t\t            0x1e8: 0x2000400,\n\t\t            0x1f8: 0x100001\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x8000820,\n\t\t            0x1: 0x20000,\n\t\t            0x2: 0x8000000,\n\t\t            0x3: 0x20,\n\t\t            0x4: 0x20020,\n\t\t            0x5: 0x8020820,\n\t\t            0x6: 0x8020800,\n\t\t            0x7: 0x800,\n\t\t            0x8: 0x8020000,\n\t\t            0x9: 0x8000800,\n\t\t            0xa: 0x20800,\n\t\t            0xb: 0x8020020,\n\t\t            0xc: 0x820,\n\t\t            0xd: 0x0,\n\t\t            0xe: 0x8000020,\n\t\t            0xf: 0x20820,\n\t\t            0x80000000: 0x800,\n\t\t            0x80000001: 0x8020820,\n\t\t            0x80000002: 0x8000820,\n\t\t            0x80000003: 0x8000000,\n\t\t            0x80000004: 0x8020000,\n\t\t            0x80000005: 0x20800,\n\t\t            0x80000006: 0x20820,\n\t\t            0x80000007: 0x20,\n\t\t            0x80000008: 0x8000020,\n\t\t            0x80000009: 0x820,\n\t\t            0x8000000a: 0x20020,\n\t\t            0x8000000b: 0x8020800,\n\t\t            0x8000000c: 0x0,\n\t\t            0x8000000d: 0x8020020,\n\t\t            0x8000000e: 0x8000800,\n\t\t            0x8000000f: 0x20000,\n\t\t            0x10: 0x20820,\n\t\t            0x11: 0x8020800,\n\t\t            0x12: 0x20,\n\t\t            0x13: 0x800,\n\t\t            0x14: 0x8000800,\n\t\t            0x15: 0x8000020,\n\t\t            0x16: 0x8020020,\n\t\t            0x17: 0x20000,\n\t\t            0x18: 0x0,\n\t\t            0x19: 0x20020,\n\t\t            0x1a: 0x8020000,\n\t\t            0x1b: 0x8000820,\n\t\t            0x1c: 0x8020820,\n\t\t            0x1d: 0x20800,\n\t\t            0x1e: 0x820,\n\t\t            0x1f: 0x8000000,\n\t\t            0x80000010: 0x20000,\n\t\t            0x80000011: 0x800,\n\t\t            0x80000012: 0x8020020,\n\t\t            0x80000013: 0x20820,\n\t\t            0x80000014: 0x20,\n\t\t            0x80000015: 0x8020000,\n\t\t            0x80000016: 0x8000000,\n\t\t            0x80000017: 0x8000820,\n\t\t            0x80000018: 0x8020820,\n\t\t            0x80000019: 0x8000020,\n\t\t            0x8000001a: 0x8000800,\n\t\t            0x8000001b: 0x0,\n\t\t            0x8000001c: 0x20800,\n\t\t            0x8000001d: 0x820,\n\t\t            0x8000001e: 0x20020,\n\t\t            0x8000001f: 0x8020800\n\t\t        }\n\t\t    ];\n\t\n\t\t    // Masks that select the SBOX input\n\t\t    var SBOX_MASK = [\n\t\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t\t    ];\n\t\n\t\t    /**\n\t\t     * DES block cipher algorithm.\n\t\t     */\n\t\t    var DES = C_algo.DES = BlockCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var key = this._key;\n\t\t            var keyWords = key.words;\n\t\n\t\t            // Select 56 bits according to PC1\n\t\t            var keyBits = [];\n\t\t            for (var i = 0; i < 56; i++) {\n\t\t                var keyBitPos = PC1[i] - 1;\n\t\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t\t            }\n\t\n\t\t            // Assemble 16 subkeys\n\t\t            var subKeys = this._subKeys = [];\n\t\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t\t                // Create subkey\n\t\t                var subKey = subKeys[nSubKey] = [];\n\t\n\t\t                // Shortcut\n\t\t                var bitShift = BIT_SHIFTS[nSubKey];\n\t\n\t\t                // Select 48 bits according to PC2\n\t\t                for (var i = 0; i < 24; i++) {\n\t\t                    // Select from the left 28 key bits\n\t\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\t\n\t\t                    // Select from the right 28 key bits\n\t\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t\t                }\n\t\n\t\t                // Since each subkey is applied to an expanded 32-bit input,\n\t\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t\t                // which allows the key to be used without expansion\n\t\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t\t                for (var i = 1; i < 7; i++) {\n\t\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t\t                }\n\t\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t\t            }\n\t\n\t\t            // Compute inverse subkeys\n\t\t            var invSubKeys = this._invSubKeys = [];\n\t\t            for (var i = 0; i < 16; i++) {\n\t\t                invSubKeys[i] = subKeys[15 - i];\n\t\t            }\n\t\t        },\n\t\n\t\t        encryptBlock: function (M, offset) {\n\t\t            this._doCryptBlock(M, offset, this._subKeys);\n\t\t        },\n\t\n\t\t        decryptBlock: function (M, offset) {\n\t\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t\t        },\n\t\n\t\t        _doCryptBlock: function (M, offset, subKeys) {\n\t\t            // Get input\n\t\t            this._lBlock = M[offset];\n\t\t            this._rBlock = M[offset + 1];\n\t\n\t\t            // Initial permutation\n\t\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t\t            exchangeRL.call(this, 2,  0x33333333);\n\t\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t\t            exchangeLR.call(this, 1,  0x55555555);\n\t\n\t\t            // Rounds\n\t\t            for (var round = 0; round < 16; round++) {\n\t\t                // Shortcuts\n\t\t                var subKey = subKeys[round];\n\t\t                var lBlock = this._lBlock;\n\t\t                var rBlock = this._rBlock;\n\t\n\t\t                // Feistel function\n\t\t                var f = 0;\n\t\t                for (var i = 0; i < 8; i++) {\n\t\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t\t                }\n\t\t                this._lBlock = rBlock;\n\t\t                this._rBlock = lBlock ^ f;\n\t\t            }\n\t\n\t\t            // Undo swap from last round\n\t\t            var t = this._lBlock;\n\t\t            this._lBlock = this._rBlock;\n\t\t            this._rBlock = t;\n\t\n\t\t            // Final permutation\n\t\t            exchangeLR.call(this, 1,  0x55555555);\n\t\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t\t            exchangeRL.call(this, 2,  0x33333333);\n\t\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t\n\t\t            // Set output\n\t\t            M[offset] = this._lBlock;\n\t\t            M[offset + 1] = this._rBlock;\n\t\t        },\n\t\n\t\t        keySize: 64/32,\n\t\n\t\t        ivSize: 64/32,\n\t\n\t\t        blockSize: 64/32\n\t\t    });\n\t\n\t\t    // Swap bits across the left and right words\n\t\t    function exchangeLR(offset, mask) {\n\t\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t\t        this._rBlock ^= t;\n\t\t        this._lBlock ^= t << offset;\n\t\t    }\n\t\n\t\t    function exchangeRL(offset, mask) {\n\t\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t\t        this._lBlock ^= t;\n\t\t        this._rBlock ^= t << offset;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.DES = BlockCipher._createHelper(DES);\n\t\n\t\t    /**\n\t\t     * Triple-DES block cipher algorithm.\n\t\t     */\n\t\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var key = this._key;\n\t\t            var keyWords = key.words;\n\t\n\t\t            // Create DES instances\n\t\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t\t        },\n\t\n\t\t        encryptBlock: function (M, offset) {\n\t\t            this._des1.encryptBlock(M, offset);\n\t\t            this._des2.decryptBlock(M, offset);\n\t\t            this._des3.encryptBlock(M, offset);\n\t\t        },\n\t\n\t\t        decryptBlock: function (M, offset) {\n\t\t            this._des3.decryptBlock(M, offset);\n\t\t            this._des2.encryptBlock(M, offset);\n\t\t            this._des1.decryptBlock(M, offset);\n\t\t        },\n\t\n\t\t        keySize: 192/32,\n\t\n\t\t        ivSize: 64/32,\n\t\n\t\t        blockSize: 64/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.TripleDES;\n\t\n\t}));\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(33), __webpack_require__(34), __webpack_require__(44), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var StreamCipher = C_lib.StreamCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    /**\n\t\t     * RC4 stream cipher algorithm.\n\t\t     */\n\t\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var key = this._key;\n\t\t            var keyWords = key.words;\n\t\t            var keySigBytes = key.sigBytes;\n\t\n\t\t            // Init sbox\n\t\t            var S = this._S = [];\n\t\t            for (var i = 0; i < 256; i++) {\n\t\t                S[i] = i;\n\t\t            }\n\t\n\t\t            // Key setup\n\t\t            for (var i = 0, j = 0; i < 256; i++) {\n\t\t                var keyByteIndex = i % keySigBytes;\n\t\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\t\n\t\t                j = (j + S[i] + keyByte) % 256;\n\t\n\t\t                // Swap\n\t\t                var t = S[i];\n\t\t                S[i] = S[j];\n\t\t                S[j] = t;\n\t\t            }\n\t\n\t\t            // Counters\n\t\t            this._i = this._j = 0;\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            M[offset] ^= generateKeystreamWord.call(this);\n\t\t        },\n\t\n\t\t        keySize: 256/32,\n\t\n\t\t        ivSize: 0\n\t\t    });\n\t\n\t\t    function generateKeystreamWord() {\n\t\t        // Shortcuts\n\t\t        var S = this._S;\n\t\t        var i = this._i;\n\t\t        var j = this._j;\n\t\n\t\t        // Generate keystream word\n\t\t        var keystreamWord = 0;\n\t\t        for (var n = 0; n < 4; n++) {\n\t\t            i = (i + 1) % 256;\n\t\t            j = (j + S[i]) % 256;\n\t\n\t\t            // Swap\n\t\t            var t = S[i];\n\t\t            S[i] = S[j];\n\t\t            S[j] = t;\n\t\n\t\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t\t        }\n\t\n\t\t        // Update counters\n\t\t        this._i = i;\n\t\t        this._j = j;\n\t\n\t\t        return keystreamWord;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.RC4 = StreamCipher._createHelper(RC4);\n\t\n\t\t    /**\n\t\t     * Modified RC4 stream cipher algorithm.\n\t\t     */\n\t\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t\t         */\n\t\t        cfg: RC4.cfg.extend({\n\t\t            drop: 192\n\t\t        }),\n\t\n\t\t        _doReset: function () {\n\t\t            RC4._doReset.call(this);\n\t\n\t\t            // Drop\n\t\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t\t                generateKeystreamWord.call(this);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.RC4;\n\t\n\t}));\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(33), __webpack_require__(34), __webpack_require__(44), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var StreamCipher = C_lib.StreamCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Reusable objects\n\t\t    var S  = [];\n\t\t    var C_ = [];\n\t\t    var G  = [];\n\t\n\t\t    /**\n\t\t     * Rabbit stream cipher algorithm\n\t\t     */\n\t\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var K = this._key.words;\n\t\t            var iv = this.cfg.iv;\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t\t            }\n\t\n\t\t            // Generate initial state values\n\t\t            var X = this._X = [\n\t\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t\t            ];\n\t\n\t\t            // Generate initial counter values\n\t\t            var C = this._C = [\n\t\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t\t            ];\n\t\n\t\t            // Carry bit\n\t\t            this._b = 0;\n\t\n\t\t            // Iterate the system four times\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                nextState.call(this);\n\t\t            }\n\t\n\t\t            // Modify the counters\n\t\t            for (var i = 0; i < 8; i++) {\n\t\t                C[i] ^= X[(i + 4) & 7];\n\t\t            }\n\t\n\t\t            // IV setup\n\t\t            if (iv) {\n\t\t                // Shortcuts\n\t\t                var IV = iv.words;\n\t\t                var IV_0 = IV[0];\n\t\t                var IV_1 = IV[1];\n\t\n\t\t                // Generate four subvectors\n\t\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\t\n\t\t                // Modify counter values\n\t\t                C[0] ^= i0;\n\t\t                C[1] ^= i1;\n\t\t                C[2] ^= i2;\n\t\t                C[3] ^= i3;\n\t\t                C[4] ^= i0;\n\t\t                C[5] ^= i1;\n\t\t                C[6] ^= i2;\n\t\t                C[7] ^= i3;\n\t\n\t\t                // Iterate the system four times\n\t\t                for (var i = 0; i < 4; i++) {\n\t\t                    nextState.call(this);\n\t\t                }\n\t\t            }\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var X = this._X;\n\t\n\t\t            // Iterate the system\n\t\t            nextState.call(this);\n\t\n\t\t            // Generate four keystream words\n\t\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\t\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                // Swap endian\n\t\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\t\n\t\t                // Encrypt\n\t\t                M[offset + i] ^= S[i];\n\t\t            }\n\t\t        },\n\t\n\t\t        blockSize: 128/32,\n\t\n\t\t        ivSize: 64/32\n\t\t    });\n\t\n\t\t    function nextState() {\n\t\t        // Shortcuts\n\t\t        var X = this._X;\n\t\t        var C = this._C;\n\t\n\t\t        // Save old counter values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            C_[i] = C[i];\n\t\t        }\n\t\n\t\t        // Calculate new counter values\n\t\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\t\n\t\t        // Calculate the g-values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            var gx = X[i] + C[i];\n\t\n\t\t            // Construct high and low argument for squaring\n\t\t            var ga = gx & 0xffff;\n\t\t            var gb = gx >>> 16;\n\t\n\t\t            // Calculate high and low result of squaring\n\t\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\t\n\t\t            // High XOR low\n\t\t            G[i] = gh ^ gl;\n\t\t        }\n\t\n\t\t        // Calculate new state values\n\t\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.Rabbit;\n\t\n\t}));\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(29), __webpack_require__(33), __webpack_require__(34), __webpack_require__(44), __webpack_require__(45));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var StreamCipher = C_lib.StreamCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Reusable objects\n\t\t    var S  = [];\n\t\t    var C_ = [];\n\t\t    var G  = [];\n\t\n\t\t    /**\n\t\t     * Rabbit stream cipher algorithm.\n\t\t     *\n\t\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t\t     * This error doesn't affect the cipher's security,\n\t\t     * but it does affect its compatibility with other implementations.\n\t\t     */\n\t\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var K = this._key.words;\n\t\t            var iv = this.cfg.iv;\n\t\n\t\t            // Generate initial state values\n\t\t            var X = this._X = [\n\t\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t\t            ];\n\t\n\t\t            // Generate initial counter values\n\t\t            var C = this._C = [\n\t\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t\t            ];\n\t\n\t\t            // Carry bit\n\t\t            this._b = 0;\n\t\n\t\t            // Iterate the system four times\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                nextState.call(this);\n\t\t            }\n\t\n\t\t            // Modify the counters\n\t\t            for (var i = 0; i < 8; i++) {\n\t\t                C[i] ^= X[(i + 4) & 7];\n\t\t            }\n\t\n\t\t            // IV setup\n\t\t            if (iv) {\n\t\t                // Shortcuts\n\t\t                var IV = iv.words;\n\t\t                var IV_0 = IV[0];\n\t\t                var IV_1 = IV[1];\n\t\n\t\t                // Generate four subvectors\n\t\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\t\n\t\t                // Modify counter values\n\t\t                C[0] ^= i0;\n\t\t                C[1] ^= i1;\n\t\t                C[2] ^= i2;\n\t\t                C[3] ^= i3;\n\t\t                C[4] ^= i0;\n\t\t                C[5] ^= i1;\n\t\t                C[6] ^= i2;\n\t\t                C[7] ^= i3;\n\t\n\t\t                // Iterate the system four times\n\t\t                for (var i = 0; i < 4; i++) {\n\t\t                    nextState.call(this);\n\t\t                }\n\t\t            }\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var X = this._X;\n\t\n\t\t            // Iterate the system\n\t\t            nextState.call(this);\n\t\n\t\t            // Generate four keystream words\n\t\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\t\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                // Swap endian\n\t\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\t\n\t\t                // Encrypt\n\t\t                M[offset + i] ^= S[i];\n\t\t            }\n\t\t        },\n\t\n\t\t        blockSize: 128/32,\n\t\n\t\t        ivSize: 64/32\n\t\t    });\n\t\n\t\t    function nextState() {\n\t\t        // Shortcuts\n\t\t        var X = this._X;\n\t\t        var C = this._C;\n\t\n\t\t        // Save old counter values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            C_[i] = C[i];\n\t\t        }\n\t\n\t\t        // Calculate new counter values\n\t\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\t\n\t\t        // Calculate the g-values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            var gx = X[i] + C[i];\n\t\n\t\t            // Construct high and low argument for squaring\n\t\t            var ga = gx & 0xffff;\n\t\t            var gb = gx >>> 16;\n\t\n\t\t            // Calculate high and low result of squaring\n\t\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\t\n\t\t            // High XOR low\n\t\t            G[i] = gh ^ gl;\n\t\t        }\n\t\n\t\t        // Calculate new state values\n\t\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.RabbitLegacy;\n\t\n\t}));\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code,\n\t\t// and use it as `root`\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [];\n\t\t\tvar counter = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar value;\n\t\t\tvar extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2encode(array) {\n\t\t\tvar length = array.length;\n\t\t\tvar index = -1;\n\t\t\tvar value;\n\t\t\tvar output = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvalue = array[index];\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\tfunction checkScalarValue(codePoint) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction createByte(codePoint, shift) {\n\t\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t\t}\n\t\n\t\tfunction encodeCodePoint(codePoint) {\n\t\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\t\treturn stringFromCharCode(codePoint);\n\t\t\t}\n\t\t\tvar symbol = '';\n\t\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\t\treturn symbol;\n\t\t}\n\t\n\t\tfunction utf8encode(string) {\n\t\t\tvar codePoints = ucs2decode(string);\n\t\t\tvar length = codePoints.length;\n\t\t\tvar index = -1;\n\t\t\tvar codePoint;\n\t\t\tvar byteString = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tcodePoint = codePoints[index];\n\t\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t\t}\n\t\t\treturn byteString;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction readContinuationByte() {\n\t\t\tif (byteIndex >= byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\t\treturn continuationByte & 0x3F;\n\t\t\t}\n\t\n\t\t\t// If we end up here, it’s not a continuation byte\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t\n\t\tfunction decodeSymbol() {\n\t\t\tvar byte1;\n\t\t\tvar byte2;\n\t\t\tvar byte3;\n\t\t\tvar byte4;\n\t\t\tvar codePoint;\n\t\n\t\t\tif (byteIndex > byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tif (byteIndex == byteCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Read first byte\n\t\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\t// 1-byte sequence (no continuation bytes)\n\t\t\tif ((byte1 & 0x80) == 0) {\n\t\t\t\treturn byte1;\n\t\t\t}\n\t\n\t\t\t// 2-byte sequence\n\t\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\t\tif (codePoint >= 0x80) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 4-byte sequence\n\t\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tbyte4 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthrow Error('Invalid UTF-8 detected');\n\t\t}\n\t\n\t\tvar byteArray;\n\t\tvar byteCount;\n\t\tvar byteIndex;\n\t\tfunction utf8decode(byteString) {\n\t\t\tbyteArray = ucs2decode(byteString);\n\t\t\tbyteCount = byteArray.length;\n\t\t\tbyteIndex = 0;\n\t\t\tvar codePoints = [];\n\t\t\tvar tmp;\n\t\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\t\tcodePoints.push(tmp);\n\t\t\t}\n\t\t\treturn ucs2encode(codePoints);\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar utf8 = {\n\t\t\t'version': '2.1.2',\n\t\t\t'encode': utf8encode,\n\t\t\t'decode': utf8decode\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn utf8;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = utf8;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tvar object = {};\n\t\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\t\tfor (var key in utf8) {\n\t\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.utf8 = utf8;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(63)(module), (function() { return this; }())))\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file config.js\n\t * @authors:\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\t/**\n\t * Utils\n\t * \n\t * @module utils\n\t */\n\t\n\t/**\n\t * Utility functions\n\t * \n\t * @class [utils] config\n\t * @constructor\n\t */\n\t\n\t\n\t/// required to define ETH_BIGNUMBER_ROUNDING_MODE\n\tvar BigNumber = __webpack_require__(26);\n\t\n\tvar ETH_UNITS = [\n\t    'wei',\n\t    'kwei',\n\t    'Mwei',\n\t    'Gwei',\n\t    'szabo',\n\t    'finney',\n\t    'femtoether',\n\t    'picoether',\n\t    'nanoether',\n\t    'microether',\n\t    'milliether',\n\t    'nano',\n\t    'micro',\n\t    'milli',\n\t    'ether',\n\t    'grand',\n\t    'Mether',\n\t    'Gether',\n\t    'Tether',\n\t    'Pether',\n\t    'Eether',\n\t    'Zether',\n\t    'Yether',\n\t    'Nether',\n\t    'Dether',\n\t    'Vether',\n\t    'Uether'\n\t];\n\t\n\tmodule.exports = {\n\t    ETH_PADDING: 32,\n\t    ETH_SIGNATURE_LENGTH: 4,\n\t    ETH_UNITS: ETH_UNITS,\n\t    ETH_BIGNUMBER_ROUNDING_MODE: { ROUNDING_MODE: BigNumber.ROUND_DOWN },\n\t    ETH_POLLING_TIMEOUT: 1000/2,\n\t    defaultBlock: 'latest',\n\t    defaultAccount: undefined\n\t};\n\t\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file errors.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tmodule.exports = {\n\t    InvalidNumberOfParams: function () {\n\t        return new Error('Invalid number of input parameters');\n\t    },\n\t    InvalidConnection: function (host){\n\t        return new Error('CONNECTION ERROR: Couldn\\'t connect to node '+ host +'.');\n\t    },\n\t    InvalidProvider: function () {\n\t        return new Error('Provider not set or invalid');\n\t    },\n\t    InvalidResponse: function (result){\n\t        var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n\t        return new Error(message);\n\t    }\n\t};\n\t\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file iban.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar BigNumber = __webpack_require__(26);\n\t\n\tvar padLeft = function (string, bytes) {\n\t    var result = string;\n\t    while (result.length < bytes * 2) {\n\t        result = '00' + result;\n\t    }\n\t    return result;\n\t};\n\t\n\t/**\n\t * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n\t * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n\t *\n\t * @method iso13616Prepare\n\t * @param {String} iban the IBAN\n\t * @returns {String} the prepared IBAN\n\t */\n\tvar iso13616Prepare = function (iban) {\n\t    var A = 'A'.charCodeAt(0);\n\t    var Z = 'Z'.charCodeAt(0);\n\t\n\t    iban = iban.toUpperCase();\n\t    iban = iban.substr(4) + iban.substr(0,4);\n\t\n\t    return iban.split('').map(function(n){\n\t        var code = n.charCodeAt(0);\n\t        if (code >= A && code <= Z){\n\t            // A = 10, B = 11, ... Z = 35\n\t            return code - A + 10;\n\t        } else {\n\t            return n;\n\t        }\n\t    }).join('');\n\t};\n\t\n\t/**\n\t * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n\t *\n\t * @method mod9710\n\t * @param {String} iban\n\t * @returns {Number}\n\t */\n\tvar mod9710 = function (iban) {\n\t    var remainder = iban,\n\t        block;\n\t\n\t    while (remainder.length > 2){\n\t        block = remainder.slice(0, 9);\n\t        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\n\t    }\n\t\n\t    return parseInt(remainder, 10) % 97;\n\t};\n\t\n\t/**\n\t * This prototype should be used to create iban object from iban correct string\n\t *\n\t * @param {String} iban\n\t */\n\tvar Iban = function (iban) {\n\t    this._iban = iban;\n\t};\n\t\n\t/**\n\t * This method should be used to create iban object from ethereum address\n\t *\n\t * @method fromAddress\n\t * @param {String} address\n\t * @return {Iban} the IBAN object\n\t */\n\tIban.fromAddress = function (address) {\n\t    var asBn = new BigNumber(address, 16);\n\t    var base36 = asBn.toString(36);\n\t    var padded = padLeft(base36, 15);\n\t    return Iban.fromBban(padded.toUpperCase());\n\t};\n\t\n\t/**\n\t * Convert the passed BBAN to an IBAN for this country specification.\n\t * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n\t * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n\t *\n\t * @method fromBban\n\t * @param {String} bban the BBAN to convert to IBAN\n\t * @returns {Iban} the IBAN object\n\t */\n\tIban.fromBban = function (bban) {\n\t    var countryCode = 'XE';\n\t\n\t    var remainder = mod9710(iso13616Prepare(countryCode + '00' + bban));\n\t    var checkDigit = ('0' + (98 - remainder)).slice(-2);\n\t\n\t    return new Iban(countryCode + checkDigit + bban);\n\t};\n\t\n\t/**\n\t * Should be used to create IBAN object for given institution and identifier\n\t *\n\t * @method createIndirect\n\t * @param {Object} options, required options are \"institution\" and \"identifier\"\n\t * @return {Iban} the IBAN object\n\t */\n\tIban.createIndirect = function (options) {\n\t    return Iban.fromBban('ETH' + options.institution + options.identifier);\n\t};\n\t\n\t/**\n\t * Thos method should be used to check if given string is valid iban object\n\t *\n\t * @method isValid\n\t * @param {String} iban string\n\t * @return {Boolean} true if it is valid IBAN\n\t */\n\tIban.isValid = function (iban) {\n\t    var i = new Iban(iban);\n\t    return i.isValid();\n\t};\n\t\n\t/**\n\t * Should be called to check if iban is correct\n\t *\n\t * @method isValid\n\t * @returns {Boolean} true if it is, otherwise false\n\t */\n\tIban.prototype.isValid = function () {\n\t    return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) &&\n\t        mod9710(iso13616Prepare(this._iban)) === 1;\n\t};\n\t\n\t/**\n\t * Should be called to check if iban number is direct\n\t *\n\t * @method isDirect\n\t * @returns {Boolean} true if it is, otherwise false\n\t */\n\tIban.prototype.isDirect = function () {\n\t    return this._iban.length === 34 || this._iban.length === 35;\n\t};\n\t\n\t/**\n\t * Should be called to check if iban number if indirect\n\t *\n\t * @method isIndirect\n\t * @returns {Boolean} true if it is, otherwise false\n\t */\n\tIban.prototype.isIndirect = function () {\n\t    return this._iban.length === 20;\n\t};\n\t\n\t/**\n\t * Should be called to get iban checksum\n\t * Uses the mod-97-10 checksumming protocol (ISO/IEC 7064:2003)\n\t *\n\t * @method checksum\n\t * @returns {String} checksum\n\t */\n\tIban.prototype.checksum = function () {\n\t    return this._iban.substr(2, 2);\n\t};\n\t\n\t/**\n\t * Should be called to get institution identifier\n\t * eg. XREG\n\t *\n\t * @method institution\n\t * @returns {String} institution identifier\n\t */\n\tIban.prototype.institution = function () {\n\t    return this.isIndirect() ? this._iban.substr(7, 4) : '';\n\t};\n\t\n\t/**\n\t * Should be called to get client identifier within institution\n\t * eg. GAVOFYORK\n\t *\n\t * @method client\n\t * @returns {String} client identifier\n\t */\n\tIban.prototype.client = function () {\n\t    return this.isIndirect() ? this._iban.substr(11) : '';\n\t};\n\t\n\t/**\n\t * Should be called to get client direct address\n\t *\n\t * @method address\n\t * @returns {String} client direct address\n\t */\n\tIban.prototype.address = function () {\n\t    if (this.isDirect()) {\n\t        var base36 = this._iban.substr(4);\n\t        var asBn = new BigNumber(base36, 36);\n\t        return padLeft(asBn.toString(16), 20);\n\t    } \n\t\n\t    return '';\n\t};\n\t\n\tIban.prototype.toString = function () {\n\t    return this._iban;\n\t};\n\t\n\tmodule.exports = Iban;\n\t\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file eth.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @author Fabian Vogelsteller <fabian@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar formatters = __webpack_require__(68);\n\tvar utils = __webpack_require__(25);\n\tvar Method = __webpack_require__(69);\n\tvar Property = __webpack_require__(70);\n\tvar c = __webpack_require__(64);\n\tvar Contract = __webpack_require__(71);\n\tvar watches = __webpack_require__(87);\n\tvar Filter = __webpack_require__(86);\n\tvar IsSyncing = __webpack_require__(90);\n\tvar namereg = __webpack_require__(91);\n\tvar Iban = __webpack_require__(66);\n\tvar transfer = __webpack_require__(94);\n\t\n\tvar blockCall = function (args) {\n\t    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n\t};\n\t\n\tvar transactionFromBlockCall = function (args) {\n\t    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n\t};\n\t\n\tvar uncleCall = function (args) {\n\t    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n\t};\n\t\n\tvar getBlockTransactionCountCall = function (args) {\n\t    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n\t};\n\t\n\tvar uncleCountCall = function (args) {\n\t    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n\t};\n\t\n\tfunction Eth(web3) {\n\t    this._requestManager = web3._requestManager;\n\t\n\t    var self = this;\n\t\n\t    methods().forEach(function(method) { \n\t        method.attachToObject(self);\n\t        method.setRequestManager(self._requestManager);\n\t    });\n\t\n\t    properties().forEach(function(p) { \n\t        p.attachToObject(self);\n\t        p.setRequestManager(self._requestManager);\n\t    });\n\t\n\t\n\t    this.iban = Iban;\n\t    this.sendIBANTransaction = transfer.bind(null, this);\n\t}\n\t\n\tObject.defineProperty(Eth.prototype, 'defaultBlock', {\n\t    get: function () {\n\t        return c.defaultBlock;\n\t    },\n\t    set: function (val) {\n\t        c.defaultBlock = val;\n\t        return val;\n\t    }\n\t});\n\t\n\tObject.defineProperty(Eth.prototype, 'defaultAccount', {\n\t    get: function () {\n\t        return c.defaultAccount;\n\t    },\n\t    set: function (val) {\n\t        c.defaultAccount = val;\n\t        return val;\n\t    }\n\t});\n\t\n\tvar methods = function () {\n\t    var getBalance = new Method({\n\t        name: 'getBalance',\n\t        call: 'eth_getBalance',\n\t        params: 2,\n\t        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter],\n\t        outputFormatter: formatters.outputBigNumberFormatter\n\t    });\n\t\n\t    var getStorageAt = new Method({\n\t        name: 'getStorageAt',\n\t        call: 'eth_getStorageAt',\n\t        params: 3,\n\t        inputFormatter: [null, utils.toHex, formatters.inputDefaultBlockNumberFormatter]\n\t    });\n\t\n\t    var getCode = new Method({\n\t        name: 'getCode',\n\t        call: 'eth_getCode',\n\t        params: 2,\n\t        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter]\n\t    });\n\t\n\t    var getBlock = new Method({\n\t        name: 'getBlock',\n\t        call: blockCall,\n\t        params: 2,\n\t        inputFormatter: [formatters.inputBlockNumberFormatter, function (val) { return !!val; }],\n\t        outputFormatter: formatters.outputBlockFormatter\n\t    });\n\t\n\t    var getUncle = new Method({\n\t        name: 'getUncle',\n\t        call: uncleCall,\n\t        params: 2,\n\t        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n\t        outputFormatter: formatters.outputBlockFormatter,\n\t\n\t    });\n\t\n\t    var getCompilers = new Method({\n\t        name: 'getCompilers',\n\t        call: 'eth_getCompilers',\n\t        params: 0\n\t    });\n\t\n\t    var getBlockTransactionCount = new Method({\n\t        name: 'getBlockTransactionCount',\n\t        call: getBlockTransactionCountCall,\n\t        params: 1,\n\t        inputFormatter: [formatters.inputBlockNumberFormatter],\n\t        outputFormatter: utils.toDecimal\n\t    });\n\t\n\t    var getBlockUncleCount = new Method({\n\t        name: 'getBlockUncleCount',\n\t        call: uncleCountCall,\n\t        params: 1,\n\t        inputFormatter: [formatters.inputBlockNumberFormatter],\n\t        outputFormatter: utils.toDecimal\n\t    });\n\t\n\t    var getTransaction = new Method({\n\t        name: 'getTransaction',\n\t        call: 'eth_getTransactionByHash',\n\t        params: 1,\n\t        outputFormatter: formatters.outputTransactionFormatter\n\t    });\n\t\n\t    var getTransactionFromBlock = new Method({\n\t        name: 'getTransactionFromBlock',\n\t        call: transactionFromBlockCall,\n\t        params: 2,\n\t        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n\t        outputFormatter: formatters.outputTransactionFormatter\n\t    });\n\t\n\t    var getTransactionReceipt = new Method({\n\t        name: 'getTransactionReceipt',\n\t        call: 'eth_getTransactionReceipt',\n\t        params: 1,\n\t        outputFormatter: formatters.outputTransactionReceiptFormatter\n\t    });\n\t\n\t    var getTransactionCount = new Method({\n\t        name: 'getTransactionCount',\n\t        call: 'eth_getTransactionCount',\n\t        params: 2,\n\t        inputFormatter: [null, formatters.inputDefaultBlockNumberFormatter],\n\t        outputFormatter: utils.toDecimal\n\t    });\n\t\n\t    var sendRawTransaction = new Method({\n\t        name: 'sendRawTransaction',\n\t        call: 'eth_sendRawTransaction',\n\t        params: 1,\n\t        inputFormatter: [null]\n\t    });\n\t\n\t    var sendTransaction = new Method({\n\t        name: 'sendTransaction',\n\t        call: 'eth_sendTransaction',\n\t        params: 1,\n\t        inputFormatter: [formatters.inputTransactionFormatter]\n\t    });\n\t\n\t    var sign = new Method({\n\t        name: 'sign',\n\t        call: 'eth_sign',\n\t        params: 2,\n\t        inputFormatter: [formatters.inputAddressFormatter, null]\n\t    });\n\t\n\t    var call = new Method({\n\t        name: 'call',\n\t        call: 'eth_call',\n\t        params: 2,\n\t        inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter]\n\t    });\n\t\n\t    var estimateGas = new Method({\n\t        name: 'estimateGas',\n\t        call: 'eth_estimateGas',\n\t        params: 1,\n\t        inputFormatter: [formatters.inputCallFormatter],\n\t        outputFormatter: utils.toDecimal\n\t    });\n\t\n\t    var compileSolidity = new Method({\n\t        name: 'compile.solidity',\n\t        call: 'eth_compileSolidity',\n\t        params: 1\n\t    });\n\t\n\t    var compileLLL = new Method({\n\t        name: 'compile.lll',\n\t        call: 'eth_compileLLL',\n\t        params: 1\n\t    });\n\t\n\t    var compileSerpent = new Method({\n\t        name: 'compile.serpent',\n\t        call: 'eth_compileSerpent',\n\t        params: 1\n\t    });\n\t\n\t    var submitWork = new Method({\n\t        name: 'submitWork',\n\t        call: 'eth_submitWork',\n\t        params: 3\n\t    });\n\t\n\t    var getWork = new Method({\n\t        name: 'getWork',\n\t        call: 'eth_getWork',\n\t        params: 0\n\t    });\n\t\n\t    return [\n\t        getBalance,\n\t        getStorageAt,\n\t        getCode,\n\t        getBlock,\n\t        getUncle,\n\t        getCompilers,\n\t        getBlockTransactionCount,\n\t        getBlockUncleCount,\n\t        getTransaction,\n\t        getTransactionFromBlock,\n\t        getTransactionReceipt,\n\t        getTransactionCount,\n\t        call,\n\t        estimateGas,\n\t        sendRawTransaction,\n\t        sendTransaction,\n\t        sign,\n\t        compileSolidity,\n\t        compileLLL,\n\t        compileSerpent,\n\t        submitWork,\n\t        getWork\n\t    ];\n\t};\n\t\n\t\n\tvar properties = function () {\n\t    return [\n\t        new Property({\n\t            name: 'coinbase',\n\t            getter: 'eth_coinbase'\n\t        }),\n\t        new Property({\n\t            name: 'mining',\n\t            getter: 'eth_mining'\n\t        }),\n\t        new Property({\n\t            name: 'hashrate',\n\t            getter: 'eth_hashrate',\n\t            outputFormatter: utils.toDecimal\n\t        }),\n\t        new Property({\n\t            name: 'syncing',\n\t            getter: 'eth_syncing',\n\t            outputFormatter: formatters.outputSyncingFormatter\n\t        }),\n\t        new Property({\n\t            name: 'gasPrice',\n\t            getter: 'eth_gasPrice',\n\t            outputFormatter: formatters.outputBigNumberFormatter\n\t        }),\n\t        new Property({\n\t            name: 'accounts',\n\t            getter: 'eth_accounts'\n\t        }),\n\t        new Property({\n\t            name: 'blockNumber',\n\t            getter: 'eth_blockNumber',\n\t            outputFormatter: utils.toDecimal\n\t        })\n\t    ];\n\t};\n\t\n\tEth.prototype.contract = function (abi) {\n\t    var factory = new Contract(this, abi);\n\t    return factory;\n\t};\n\t\n\tEth.prototype.filter = function (fil, callback) {\n\t    return new Filter(this._requestManager, fil, watches.eth(), formatters.outputLogFormatter, callback);\n\t};\n\t\n\tEth.prototype.namereg = function () {\n\t    return this.contract(namereg.global.abi).at(namereg.global.address);\n\t};\n\t\n\tEth.prototype.icapNamereg = function () {\n\t    return this.contract(namereg.icap.abi).at(namereg.icap.address);\n\t};\n\t\n\tEth.prototype.isSyncing = function (callback) {\n\t    return new IsSyncing(this._requestManager, callback);\n\t};\n\t\n\tmodule.exports = Eth;\n\t\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file formatters.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @author Fabian Vogelsteller <fabian@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar utils = __webpack_require__(25);\n\tvar config = __webpack_require__(64);\n\tvar Iban = __webpack_require__(66);\n\t\n\t/**\n\t * Should the format output to a big number\n\t *\n\t * @method outputBigNumberFormatter\n\t * @param {String|Number|BigNumber}\n\t * @returns {BigNumber} object\n\t */\n\tvar outputBigNumberFormatter = function (number) {\n\t    return utils.toBigNumber(number);\n\t};\n\t\n\tvar isPredefinedBlockNumber = function (blockNumber) {\n\t    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n\t};\n\t\n\tvar inputDefaultBlockNumberFormatter = function (blockNumber) {\n\t    if (blockNumber === undefined) {\n\t        return config.defaultBlock;\n\t    }\n\t    return inputBlockNumberFormatter(blockNumber);\n\t};\n\t\n\tvar inputBlockNumberFormatter = function (blockNumber) {\n\t    if (blockNumber === undefined) {\n\t        return undefined;\n\t    } else if (isPredefinedBlockNumber(blockNumber)) {\n\t        return blockNumber;\n\t    }\n\t    return utils.toHex(blockNumber);\n\t};\n\t\n\t/**\n\t * Formats the input of a transaction and converts all values to HEX\n\t *\n\t * @method inputCallFormatter\n\t * @param {Object} transaction options\n\t * @returns object\n\t*/\n\tvar inputCallFormatter = function (options){\n\t\n\t    options.from = options.from || config.defaultAccount;\n\t\n\t    if (options.from) {\n\t        options.from = inputAddressFormatter(options.from);\n\t    }\n\t\n\t    if (options.to) { // it might be contract creation\n\t        options.to = inputAddressFormatter(options.to);\n\t    }\n\t\n\t    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {\n\t        return options[key] !== undefined;\n\t    }).forEach(function(key){\n\t        options[key] = utils.fromDecimal(options[key]);\n\t    });\n\t\n\t    return options; \n\t};\n\t\n\t/**\n\t * Formats the input of a transaction and converts all values to HEX\n\t *\n\t * @method inputTransactionFormatter\n\t * @param {Object} transaction options\n\t * @returns object\n\t*/\n\tvar inputTransactionFormatter = function (options){\n\t\n\t    options.from = options.from || config.defaultAccount;\n\t    options.from = inputAddressFormatter(options.from);\n\t\n\t    if (options.to) { // it might be contract creation\n\t        options.to = inputAddressFormatter(options.to);\n\t    }\n\t\n\t    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {\n\t        return options[key] !== undefined;\n\t    }).forEach(function(key){\n\t        options[key] = utils.fromDecimal(options[key]);\n\t    });\n\t\n\t    return options; \n\t};\n\t\n\t/**\n\t * Formats the output of a transaction to its proper values\n\t * \n\t * @method outputTransactionFormatter\n\t * @param {Object} tx\n\t * @returns {Object}\n\t*/\n\tvar outputTransactionFormatter = function (tx){\n\t    if(tx.blockNumber !== null)\n\t        tx.blockNumber = utils.toDecimal(tx.blockNumber);\n\t    if(tx.transactionIndex !== null)\n\t        tx.transactionIndex = utils.toDecimal(tx.transactionIndex);\n\t    tx.nonce = utils.toDecimal(tx.nonce);\n\t    tx.gas = utils.toDecimal(tx.gas);\n\t    tx.gasPrice = utils.toBigNumber(tx.gasPrice);\n\t    tx.value = utils.toBigNumber(tx.value);\n\t    return tx;\n\t};\n\t\n\t/**\n\t * Formats the output of a transaction receipt to its proper values\n\t * \n\t * @method outputTransactionReceiptFormatter\n\t * @param {Object} receipt\n\t * @returns {Object}\n\t*/\n\tvar outputTransactionReceiptFormatter = function (receipt){\n\t    if(receipt.blockNumber !== null)\n\t        receipt.blockNumber = utils.toDecimal(receipt.blockNumber);\n\t    if(receipt.transactionIndex !== null)\n\t        receipt.transactionIndex = utils.toDecimal(receipt.transactionIndex);\n\t    receipt.cumulativeGasUsed = utils.toDecimal(receipt.cumulativeGasUsed);\n\t    receipt.gasUsed = utils.toDecimal(receipt.gasUsed);\n\t\n\t    if(utils.isArray(receipt.logs)) {\n\t        receipt.logs = receipt.logs.map(function(log){\n\t            return outputLogFormatter(log);\n\t        });\n\t    }\n\t\n\t    return receipt;\n\t};\n\t\n\t/**\n\t * Formats the output of a block to its proper values\n\t *\n\t * @method outputBlockFormatter\n\t * @param {Object} block \n\t * @returns {Object}\n\t*/\n\tvar outputBlockFormatter = function(block) {\n\t\n\t    // transform to number\n\t    block.gasLimit = utils.toDecimal(block.gasLimit);\n\t    block.gasUsed = utils.toDecimal(block.gasUsed);\n\t    block.size = utils.toDecimal(block.size);\n\t    block.timestamp = utils.toDecimal(block.timestamp);\n\t    if(block.number !== null)\n\t        block.number = utils.toDecimal(block.number);\n\t\n\t    block.difficulty = utils.toBigNumber(block.difficulty);\n\t    block.totalDifficulty = utils.toBigNumber(block.totalDifficulty);\n\t\n\t    if (utils.isArray(block.transactions)) {\n\t        block.transactions.forEach(function(item){\n\t            if(!utils.isString(item))\n\t                return outputTransactionFormatter(item);\n\t        });\n\t    }\n\t\n\t    return block;\n\t};\n\t\n\t/**\n\t * Formats the output of a log\n\t * \n\t * @method outputLogFormatter\n\t * @param {Object} log object\n\t * @returns {Object} log\n\t*/\n\tvar outputLogFormatter = function(log) {\n\t    if(log.blockNumber !== null)\n\t        log.blockNumber = utils.toDecimal(log.blockNumber);\n\t    if(log.transactionIndex !== null)\n\t        log.transactionIndex = utils.toDecimal(log.transactionIndex);\n\t    if(log.logIndex !== null)\n\t        log.logIndex = utils.toDecimal(log.logIndex);\n\t\n\t    return log;\n\t};\n\t\n\t/**\n\t * Formats the input of a whisper post and converts all values to HEX\n\t *\n\t * @method inputPostFormatter\n\t * @param {Object} transaction object\n\t * @returns {Object}\n\t*/\n\tvar inputPostFormatter = function(post) {\n\t\n\t    // post.payload = utils.toHex(post.payload);\n\t    post.ttl = utils.fromDecimal(post.ttl);\n\t    post.workToProve = utils.fromDecimal(post.workToProve);\n\t    post.priority = utils.fromDecimal(post.priority);\n\t\n\t    // fallback\n\t    if (!utils.isArray(post.topics)) {\n\t        post.topics = post.topics ? [post.topics] : [];\n\t    }\n\t\n\t    // format the following options\n\t    post.topics = post.topics.map(function(topic){\n\t        // convert only if not hex\n\t        return (topic.indexOf('0x') === 0) ? topic : utils.fromUtf8(topic);\n\t    });\n\t\n\t    return post; \n\t};\n\t\n\t/**\n\t * Formats the output of a received post message\n\t *\n\t * @method outputPostFormatter\n\t * @param {Object}\n\t * @returns {Object}\n\t */\n\tvar outputPostFormatter = function(post){\n\t\n\t    post.expiry = utils.toDecimal(post.expiry);\n\t    post.sent = utils.toDecimal(post.sent);\n\t    post.ttl = utils.toDecimal(post.ttl);\n\t    post.workProved = utils.toDecimal(post.workProved);\n\t    // post.payloadRaw = post.payload;\n\t    // post.payload = utils.toAscii(post.payload);\n\t\n\t    // if (utils.isJson(post.payload)) {\n\t    //     post.payload = JSON.parse(post.payload);\n\t    // }\n\t\n\t    // format the following options\n\t    if (!post.topics) {\n\t        post.topics = [];\n\t    }\n\t    post.topics = post.topics.map(function(topic){\n\t        return utils.toAscii(topic);\n\t    });\n\t\n\t    return post;\n\t};\n\t\n\tvar inputAddressFormatter = function (address) {\n\t    var iban = new Iban(address);\n\t    if (iban.isValid() && iban.isDirect()) {\n\t        return '0x' + iban.address();\n\t    } else if (utils.isStrictAddress(address)) {\n\t        return address;\n\t    } else if (utils.isAddress(address)) {\n\t        return '0x' + address;\n\t    }\n\t    throw 'invalid address';\n\t};\n\t\n\t\n\tvar outputSyncingFormatter = function(result) {\n\t\n\t    result.startingBlock = utils.toDecimal(result.startingBlock);\n\t    result.currentBlock = utils.toDecimal(result.currentBlock);\n\t    result.highestBlock = utils.toDecimal(result.highestBlock);\n\t\n\t    return result;\n\t};\n\t\n\tmodule.exports = {\n\t    inputDefaultBlockNumberFormatter: inputDefaultBlockNumberFormatter,\n\t    inputBlockNumberFormatter: inputBlockNumberFormatter,\n\t    inputCallFormatter: inputCallFormatter,\n\t    inputTransactionFormatter: inputTransactionFormatter,\n\t    inputAddressFormatter: inputAddressFormatter,\n\t    inputPostFormatter: inputPostFormatter,\n\t    outputBigNumberFormatter: outputBigNumberFormatter,\n\t    outputTransactionFormatter: outputTransactionFormatter,\n\t    outputTransactionReceiptFormatter: outputTransactionReceiptFormatter,\n\t    outputBlockFormatter: outputBlockFormatter,\n\t    outputLogFormatter: outputLogFormatter,\n\t    outputPostFormatter: outputPostFormatter,\n\t    outputSyncingFormatter: outputSyncingFormatter\n\t};\n\t\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file method.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar utils = __webpack_require__(25);\n\tvar errors = __webpack_require__(65);\n\t\n\tvar Method = function (options) {\n\t    this.name = options.name;\n\t    this.call = options.call;\n\t    this.params = options.params || 0;\n\t    this.inputFormatter = options.inputFormatter;\n\t    this.outputFormatter = options.outputFormatter;\n\t    this.requestManager = null;\n\t};\n\t\n\tMethod.prototype.setRequestManager = function (rm) {\n\t    this.requestManager = rm;\n\t};\n\t\n\t/**\n\t * Should be used to determine name of the jsonrpc method based on arguments\n\t *\n\t * @method getCall\n\t * @param {Array} arguments\n\t * @return {String} name of jsonrpc method\n\t */\n\tMethod.prototype.getCall = function (args) {\n\t    return utils.isFunction(this.call) ? this.call(args) : this.call;\n\t};\n\t\n\t/**\n\t * Should be used to extract callback from array of arguments. Modifies input param\n\t *\n\t * @method extractCallback\n\t * @param {Array} arguments\n\t * @return {Function|Null} callback, if exists\n\t */\n\tMethod.prototype.extractCallback = function (args) {\n\t    if (utils.isFunction(args[args.length - 1])) {\n\t        return args.pop(); // modify the args array!\n\t    }\n\t};\n\t\n\t/**\n\t * Should be called to check if the number of arguments is correct\n\t * \n\t * @method validateArgs\n\t * @param {Array} arguments\n\t * @throws {Error} if it is not\n\t */\n\tMethod.prototype.validateArgs = function (args) {\n\t    if (args.length !== this.params) {\n\t        throw errors.InvalidNumberOfParams();\n\t    }\n\t};\n\t\n\t/**\n\t * Should be called to format input args of method\n\t * \n\t * @method formatInput\n\t * @param {Array}\n\t * @return {Array}\n\t */\n\tMethod.prototype.formatInput = function (args) {\n\t    if (!this.inputFormatter) {\n\t        return args;\n\t    }\n\t\n\t    return this.inputFormatter.map(function (formatter, index) {\n\t        return formatter ? formatter(args[index]) : args[index];\n\t    });\n\t};\n\t\n\t/**\n\t * Should be called to format output(result) of method\n\t *\n\t * @method formatOutput\n\t * @param {Object}\n\t * @return {Object}\n\t */\n\tMethod.prototype.formatOutput = function (result) {\n\t    return this.outputFormatter && result ? this.outputFormatter(result) : result;\n\t};\n\t\n\t/**\n\t * Should create payload from given input args\n\t *\n\t * @method toPayload\n\t * @param {Array} args\n\t * @return {Object}\n\t */\n\tMethod.prototype.toPayload = function (args) {\n\t    var call = this.getCall(args);\n\t    var callback = this.extractCallback(args);\n\t    var params = this.formatInput(args);\n\t    this.validateArgs(params);\n\t\n\t    return {\n\t        method: call,\n\t        params: params,\n\t        callback: callback\n\t    };\n\t};\n\t\n\tMethod.prototype.attachToObject = function (obj) {\n\t    var func = this.buildCall();\n\t    func.call = this.call; // TODO!!! that's ugly. filter.js uses it\n\t    var name = this.name.split('.');\n\t    if (name.length > 1) {\n\t        obj[name[0]] = obj[name[0]] || {};\n\t        obj[name[0]][name[1]] = func;\n\t    } else {\n\t        obj[name[0]] = func; \n\t    }\n\t};\n\t\n\tMethod.prototype.buildCall = function() {\n\t    var method = this;\n\t    var send = function () {\n\t        var payload = method.toPayload(Array.prototype.slice.call(arguments));\n\t        if (payload.callback) {\n\t            return method.requestManager.sendAsync(payload, function (err, result) {\n\t                payload.callback(err, method.formatOutput(result));\n\t            });\n\t        }\n\t        return method.formatOutput(method.requestManager.send(payload));\n\t    };\n\t    send.request = this.request.bind(this);\n\t    return send;\n\t};\n\t\n\t/**\n\t * Should be called to create pure JSONRPC request which can be used in batch request\n\t *\n\t * @method request\n\t * @param {...} params\n\t * @return {Object} jsonrpc request\n\t */\n\tMethod.prototype.request = function () {\n\t    var payload = this.toPayload(Array.prototype.slice.call(arguments));\n\t    payload.format = this.formatOutput.bind(this);\n\t    return payload;\n\t};\n\t\n\tmodule.exports = Method;\n\t\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file property.js\n\t * @author Fabian Vogelsteller <fabian@frozeman.de>\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar utils = __webpack_require__(25);\n\t\n\tvar Property = function (options) {\n\t    this.name = options.name;\n\t    this.getter = options.getter;\n\t    this.setter = options.setter;\n\t    this.outputFormatter = options.outputFormatter;\n\t    this.inputFormatter = options.inputFormatter;\n\t    this.requestManager = null;\n\t};\n\t\n\tProperty.prototype.setRequestManager = function (rm) {\n\t    this.requestManager = rm;\n\t};\n\t\n\t/**\n\t * Should be called to format input args of method\n\t * \n\t * @method formatInput\n\t * @param {Array}\n\t * @return {Array}\n\t */\n\tProperty.prototype.formatInput = function (arg) {\n\t    return this.inputFormatter ? this.inputFormatter(arg) : arg;\n\t};\n\t\n\t/**\n\t * Should be called to format output(result) of method\n\t *\n\t * @method formatOutput\n\t * @param {Object}\n\t * @return {Object}\n\t */\n\tProperty.prototype.formatOutput = function (result) {\n\t    return this.outputFormatter && result !== null ? this.outputFormatter(result) : result;\n\t};\n\t\n\t/**\n\t * Should be used to extract callback from array of arguments. Modifies input param\n\t *\n\t * @method extractCallback\n\t * @param {Array} arguments\n\t * @return {Function|Null} callback, if exists\n\t */\n\tProperty.prototype.extractCallback = function (args) {\n\t    if (utils.isFunction(args[args.length - 1])) {\n\t        return args.pop(); // modify the args array!\n\t    }\n\t};\n\t\n\t\n\t/**\n\t * Should attach function to method\n\t * \n\t * @method attachToObject\n\t * @param {Object}\n\t * @param {Function}\n\t */\n\tProperty.prototype.attachToObject = function (obj) {\n\t    var proto = {\n\t        get: this.buildGet(),\n\t        enumerable: true \n\t    };\n\t\n\t    var names = this.name.split('.');\n\t    var name = names[0];\n\t    if (names.length > 1) {\n\t        obj[names[0]] = obj[names[0]] || {};\n\t        obj = obj[names[0]];\n\t        name = names[1];\n\t    }\n\t\n\t    Object.defineProperty(obj, name, proto);\n\t    obj[asyncGetterName(name)] = this.buildAsyncGet();\n\t};\n\t\n\tvar asyncGetterName = function (name) {\n\t    return 'get' + name.charAt(0).toUpperCase() + name.slice(1);\n\t};\n\t\n\tProperty.prototype.buildGet = function () {\n\t    var property = this;\n\t    return function get() {\n\t        return property.formatOutput(property.requestManager.send({\n\t            method: property.getter\n\t        })); \n\t    };\n\t};\n\t\n\tProperty.prototype.buildAsyncGet = function () {\n\t    var property = this;\n\t    var get = function (callback) {\n\t        property.requestManager.sendAsync({\n\t            method: property.getter\n\t        }, function (err, result) {\n\t            callback(err, property.formatOutput(result));\n\t        });\n\t    };\n\t    get.request = this.request.bind(this);\n\t    return get;\n\t};\n\t\n\t/**\n\t * Should be called to create pure JSONRPC request which can be used in batch request\n\t *\n\t * @method request\n\t * @param {...} params\n\t * @return {Object} jsonrpc request\n\t */\n\tProperty.prototype.request = function () {\n\t    var payload = {\n\t        method: this.getter,\n\t        params: [],\n\t        callback: this.extractCallback(Array.prototype.slice.call(arguments))\n\t    };\n\t    payload.format = this.formatOutput.bind(this);\n\t    return payload;\n\t};\n\t\n\tmodule.exports = Property;\n\t\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file contract.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2014\n\t */\n\t\n\tvar utils = __webpack_require__(25);\n\tvar coder = __webpack_require__(72);\n\tvar SolidityEvent = __webpack_require__(85);\n\tvar SolidityFunction = __webpack_require__(88);\n\tvar AllEvents = __webpack_require__(89);\n\t\n\t/**\n\t * Should be called to encode constructor params\n\t *\n\t * @method encodeConstructorParams\n\t * @param {Array} abi\n\t * @param {Array} constructor params\n\t */\n\tvar encodeConstructorParams = function (abi, params) {\n\t    return abi.filter(function (json) {\n\t        return json.type === 'constructor' && json.inputs.length === params.length;\n\t    }).map(function (json) {\n\t        return json.inputs.map(function (input) {\n\t            return input.type;\n\t        });\n\t    }).map(function (types) {\n\t        return coder.encodeParams(types, params);\n\t    })[0] || '';\n\t};\n\t\n\t/**\n\t * Should be called to add functions to contract object\n\t *\n\t * @method addFunctionsToContract\n\t * @param {Contract} contract\n\t * @param {Array} abi\n\t */\n\tvar addFunctionsToContract = function (contract) {\n\t    contract.abi.filter(function (json) {\n\t        return json.type === 'function';\n\t    }).map(function (json) {\n\t        return new SolidityFunction(contract._eth, json, contract.address);\n\t    }).forEach(function (f) {\n\t        f.attachToContract(contract);\n\t    });\n\t};\n\t\n\t/**\n\t * Should be called to add events to contract object\n\t *\n\t * @method addEventsToContract\n\t * @param {Contract} contract\n\t * @param {Array} abi\n\t */\n\tvar addEventsToContract = function (contract) {\n\t    var events = contract.abi.filter(function (json) {\n\t        return json.type === 'event';\n\t    });\n\t\n\t    var All = new AllEvents(contract._eth._requestManager, events, contract.address);\n\t    All.attachToContract(contract);\n\t\n\t    events.map(function (json) {\n\t        return new SolidityEvent(contract._eth._requestManager, json, contract.address);\n\t    }).forEach(function (e) {\n\t        e.attachToContract(contract);\n\t    });\n\t};\n\t\n\t\n\t/**\n\t * Should be called to check if the contract gets properly deployed on the blockchain.\n\t *\n\t * @method checkForContractAddress\n\t * @param {Object} contract\n\t * @param {Function} callback\n\t * @returns {Undefined}\n\t */\n\tvar checkForContractAddress = function(contract, callback){\n\t    var count = 0,\n\t        callbackFired = false;\n\t\n\t    // wait for receipt\n\t    var filter = contract._eth.filter('latest', function(e){\n\t        if (!e && !callbackFired) {\n\t            count++;\n\t\n\t            // stop watching after 50 blocks (timeout)\n\t            if (count > 50) {\n\t\n\t                filter.stopWatching();\n\t                callbackFired = true;\n\t\n\t                if (callback)\n\t                    callback(new Error('Contract transaction couldn\\'t be found after 50 blocks'));\n\t                else\n\t                    throw new Error('Contract transaction couldn\\'t be found after 50 blocks');\n\t\n\t\n\t            } else {\n\t\n\t                contract._eth.getTransactionReceipt(contract.transactionHash, function(e, receipt){\n\t                    if(receipt && !callbackFired) {\n\t\n\t                        contract._eth.getCode(receipt.contractAddress, function(e, code){\n\t                            /*jshint maxcomplexity: 6 */\n\t\n\t                            if(callbackFired || !code)\n\t                                return;\n\t\n\t                            filter.stopWatching();\n\t                            callbackFired = true;\n\t\n\t                            if(code.length > 2) {\n\t\n\t                                // console.log('Contract code deployed!');\n\t\n\t                                contract.address = receipt.contractAddress;\n\t\n\t                                // attach events and methods again after we have\n\t                                addFunctionsToContract(contract);\n\t                                addEventsToContract(contract);\n\t\n\t                                // call callback for the second time\n\t                                if(callback)\n\t                                    callback(null, contract);\n\t\n\t                            } else {\n\t                                if(callback)\n\t                                    callback(new Error('The contract code couldn\\'t be stored, please check your gas amount.'));\n\t                                else\n\t                                    throw new Error('The contract code couldn\\'t be stored, please check your gas amount.');\n\t                            }\n\t                        });\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\t/**\n\t * Should be called to create new ContractFactory instance\n\t *\n\t * @method ContractFactory\n\t * @param {Array} abi\n\t */\n\tvar ContractFactory = function (eth, abi) {\n\t    this.eth = eth;\n\t    this.abi = abi;\n\t\n\t    /**\n\t     * Should be called to create new contract on a blockchain\n\t     *\n\t     * @method new\n\t     * @param {Any} contract constructor param1 (optional)\n\t     * @param {Any} contract constructor param2 (optional)\n\t     * @param {Object} contract transaction object (required)\n\t     * @param {Function} callback\n\t     * @returns {Contract} returns contract instance\n\t     */\n\t    this.new = function () {\n\t        var contract = new Contract(this.eth, this.abi);\n\t\n\t        // parse arguments\n\t        var options = {}; // required!\n\t        var callback;\n\t\n\t        var args = Array.prototype.slice.call(arguments);\n\t        if (utils.isFunction(args[args.length - 1])) {\n\t            callback = args.pop();\n\t        }\n\t\n\t        var last = args[args.length - 1];\n\t        if (utils.isObject(last) && !utils.isArray(last)) {\n\t            options = args.pop();\n\t        }\n\t\n\t        var bytes = encodeConstructorParams(this.abi, args);\n\t        options.data += bytes;\n\t\n\t        if (callback) {\n\t\n\t            // wait for the contract address adn check if the code was deployed\n\t            this.eth.sendTransaction(options, function (err, hash) {\n\t                if (err) {\n\t                    callback(err);\n\t                } else {\n\t                    // add the transaction hash\n\t                    contract.transactionHash = hash;\n\t\n\t                    // call callback for the first time\n\t                    callback(null, contract);\n\t\n\t                    checkForContractAddress(contract, callback);\n\t                }\n\t            });\n\t        } else {\n\t            var hash = this.eth.sendTransaction(options);\n\t            // add the transaction hash\n\t            contract.transactionHash = hash;\n\t            checkForContractAddress(contract);\n\t        }\n\t\n\t        return contract;\n\t    };\n\t\n\t    this.new.getData = this.getData.bind(this);\n\t};\n\t\n\t/**\n\t * Should be called to create new ContractFactory\n\t *\n\t * @method contract\n\t * @param {Array} abi\n\t * @returns {ContractFactory} new contract factory\n\t */\n\t//var contract = function (abi) {\n\t    //return new ContractFactory(abi);\n\t//};\n\t\n\t\n\t\n\t/**\n\t * Should be called to get access to existing contract on a blockchain\n\t *\n\t * @method at\n\t * @param {Address} contract address (required)\n\t * @param {Function} callback {optional)\n\t * @returns {Contract} returns contract if no callback was passed,\n\t * otherwise calls callback function (err, contract)\n\t */\n\tContractFactory.prototype.at = function (address, callback) {\n\t    var contract = new Contract(this.eth, this.abi, address);\n\t\n\t    // this functions are not part of prototype,\n\t    // because we dont want to spoil the interface\n\t    addFunctionsToContract(contract);\n\t    addEventsToContract(contract);\n\t\n\t    if (callback) {\n\t        callback(null, contract);\n\t    }\n\t    return contract;\n\t};\n\t\n\t/**\n\t * Gets the data, which is data to deploy plus constructor params\n\t *\n\t * @method getData\n\t */\n\tContractFactory.prototype.getData = function () {\n\t    var options = {}; // required!\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    var last = args[args.length - 1];\n\t    if (utils.isObject(last) && !utils.isArray(last)) {\n\t        options = args.pop();\n\t    }\n\t\n\t    var bytes = encodeConstructorParams(this.abi, args);\n\t    options.data += bytes;\n\t\n\t    return options.data;\n\t};\n\t\n\t/**\n\t * Should be called to create new contract instance\n\t *\n\t * @method Contract\n\t * @param {Array} abi\n\t * @param {Address} contract address\n\t */\n\tvar Contract = function (eth, abi, address) {\n\t    this._eth = eth;\n\t    this.transactionHash = null;\n\t    this.address = address;\n\t    this.abi = abi;\n\t};\n\t\n\tmodule.exports = ContractFactory;\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file coder.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar f = __webpack_require__(73);\n\t\n\tvar SolidityTypeAddress = __webpack_require__(75);\n\tvar SolidityTypeBool = __webpack_require__(77);\n\tvar SolidityTypeInt = __webpack_require__(78);\n\tvar SolidityTypeUInt = __webpack_require__(79);\n\tvar SolidityTypeDynamicBytes = __webpack_require__(80);\n\tvar SolidityTypeString = __webpack_require__(81);\n\tvar SolidityTypeReal = __webpack_require__(82);\n\tvar SolidityTypeUReal = __webpack_require__(83);\n\tvar SolidityTypeBytes = __webpack_require__(84);\n\t\n\t/**\n\t * SolidityCoder prototype should be used to encode/decode solidity params of any type\n\t */\n\tvar SolidityCoder = function (types) {\n\t    this._types = types;\n\t};\n\t\n\t/**\n\t * This method should be used to transform type to SolidityType\n\t *\n\t * @method _requireType\n\t * @param {String} type\n\t * @returns {SolidityType} \n\t * @throws {Error} throws if no matching type is found\n\t */\n\tSolidityCoder.prototype._requireType = function (type) {\n\t    var solidityType = this._types.filter(function (t) {\n\t        return t.isType(type);\n\t    })[0];\n\t\n\t    if (!solidityType) {\n\t        throw Error('invalid solidity type!: ' + type);\n\t    }\n\t\n\t    return solidityType;\n\t};\n\t\n\t/**\n\t * Should be used to encode plain param\n\t *\n\t * @method encodeParam\n\t * @param {String} type\n\t * @param {Object} plain param\n\t * @return {String} encoded plain param\n\t */\n\tSolidityCoder.prototype.encodeParam = function (type, param) {\n\t    return this.encodeParams([type], [param]);\n\t};\n\t\n\t/**\n\t * Should be used to encode list of params\n\t *\n\t * @method encodeParams\n\t * @param {Array} types\n\t * @param {Array} params\n\t * @return {String} encoded list of params\n\t */\n\tSolidityCoder.prototype.encodeParams = function (types, params) {\n\t    var solidityTypes = this.getSolidityTypes(types);\n\t\n\t    var encodeds = solidityTypes.map(function (solidityType, index) {\n\t        return solidityType.encode(params[index], types[index]);\n\t    });\n\t\n\t    var dynamicOffset = solidityTypes.reduce(function (acc, solidityType, index) {\n\t        var staticPartLength = solidityType.staticPartLength(types[index]);\n\t        var roundedStaticPartLength = Math.floor((staticPartLength + 31) / 32) * 32;\n\t        return acc + roundedStaticPartLength;\n\t    }, 0);\n\t\n\t    var result = this.encodeMultiWithOffset(types, solidityTypes, encodeds, dynamicOffset); \n\t\n\t    return result;\n\t};\n\t\n\tSolidityCoder.prototype.encodeMultiWithOffset = function (types, solidityTypes, encodeds, dynamicOffset) {\n\t    var result = \"\";\n\t    var self = this;\n\t\n\t    var isDynamic = function (i) {\n\t       return solidityTypes[i].isDynamicArray(types[i]) || solidityTypes[i].isDynamicType(types[i]);\n\t    };\n\t\n\t    types.forEach(function (type, i) {\n\t        if (isDynamic(i)) {\n\t            result += f.formatInputInt(dynamicOffset).encode();\n\t            var e = self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n\t            dynamicOffset += e.length / 2;\n\t        } else {\n\t            // don't add length to dynamicOffset. it's already counted\n\t            result += self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n\t        }\n\t\n\t        // TODO: figure out nested arrays\n\t    });\n\t    \n\t    types.forEach(function (type, i) {\n\t        if (isDynamic(i)) {\n\t            var e = self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n\t            dynamicOffset += e.length / 2;\n\t            result += e;\n\t        }\n\t    });\n\t    return result;\n\t};\n\t\n\t// TODO: refactor whole encoding!\n\tSolidityCoder.prototype.encodeWithOffset = function (type, solidityType, encoded, offset) {\n\t    var self = this;\n\t    if (solidityType.isDynamicArray(type)) {\n\t        return (function () {\n\t            // offset was already set\n\t            var nestedName = solidityType.nestedName(type);\n\t            var nestedStaticPartLength = solidityType.staticPartLength(nestedName);\n\t            var result = encoded[0];\n\t            \n\t            (function () {\n\t                var previousLength = 2; // in int\n\t                if (solidityType.isDynamicArray(nestedName)) {\n\t                    for (var i = 1; i < encoded.length; i++) {\n\t                        previousLength += +(encoded[i - 1])[0] || 0;\n\t                        result += f.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();\n\t                    }\n\t                }\n\t            })();\n\t            \n\t            // first element is length, skip it\n\t            (function () {\n\t                for (var i = 0; i < encoded.length - 1; i++) {\n\t                    var additionalOffset = result / 2;\n\t                    result += self.encodeWithOffset(nestedName, solidityType, encoded[i + 1], offset +  additionalOffset);\n\t                }\n\t            })();\n\t\n\t            return result;\n\t        })();\n\t       \n\t    } else if (solidityType.isStaticArray(type)) {\n\t        return (function () {\n\t            var nestedName = solidityType.nestedName(type);\n\t            var nestedStaticPartLength = solidityType.staticPartLength(nestedName);\n\t            var result = \"\";\n\t\n\t\n\t            if (solidityType.isDynamicArray(nestedName)) {\n\t                (function () {\n\t                    var previousLength = 0; // in int\n\t                    for (var i = 0; i < encoded.length; i++) {\n\t                        // calculate length of previous item\n\t                        previousLength += +(encoded[i - 1] || [])[0] || 0; \n\t                        result += f.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();\n\t                    }\n\t                })();\n\t            }\n\t\n\t            (function () {\n\t                for (var i = 0; i < encoded.length; i++) {\n\t                    var additionalOffset = result / 2;\n\t                    result += self.encodeWithOffset(nestedName, solidityType, encoded[i], offset + additionalOffset);\n\t                }\n\t            })();\n\t\n\t            return result;\n\t        })();\n\t    }\n\t\n\t    return encoded;\n\t};\n\t\n\t/**\n\t * Should be used to decode bytes to plain param\n\t *\n\t * @method decodeParam\n\t * @param {String} type\n\t * @param {String} bytes\n\t * @return {Object} plain param\n\t */\n\tSolidityCoder.prototype.decodeParam = function (type, bytes) {\n\t    return this.decodeParams([type], bytes)[0];\n\t};\n\t\n\t/**\n\t * Should be used to decode list of params\n\t *\n\t * @method decodeParam\n\t * @param {Array} types\n\t * @param {String} bytes\n\t * @return {Array} array of plain params\n\t */\n\tSolidityCoder.prototype.decodeParams = function (types, bytes) {\n\t    var solidityTypes = this.getSolidityTypes(types);\n\t    var offsets = this.getOffsets(types, solidityTypes);\n\t        \n\t    return solidityTypes.map(function (solidityType, index) {\n\t        return solidityType.decode(bytes, offsets[index],  types[index], index);\n\t    });\n\t};\n\t\n\tSolidityCoder.prototype.getOffsets = function (types, solidityTypes) {\n\t    var lengths =  solidityTypes.map(function (solidityType, index) {\n\t        return solidityType.staticPartLength(types[index]);\n\t    });\n\t    \n\t    for (var i = 1; i < lengths.length; i++) {\n\t         // sum with length of previous element\n\t        lengths[i] += lengths[i - 1]; \n\t    }\n\t\n\t    return lengths.map(function (length, index) {\n\t        // remove the current length, so the length is sum of previous elements\n\t        var staticPartLength = solidityTypes[index].staticPartLength(types[index]);\n\t        return length - staticPartLength; \n\t    });\n\t};\n\t\n\tSolidityCoder.prototype.getSolidityTypes = function (types) {\n\t    var self = this;\n\t    return types.map(function (type) {\n\t        return self._requireType(type);\n\t    });\n\t};\n\t\n\tvar coder = new SolidityCoder([\n\t    new SolidityTypeAddress(),\n\t    new SolidityTypeBool(),\n\t    new SolidityTypeInt(),\n\t    new SolidityTypeUInt(),\n\t    new SolidityTypeDynamicBytes(),\n\t    new SolidityTypeBytes(),\n\t    new SolidityTypeString(),\n\t    new SolidityTypeReal(),\n\t    new SolidityTypeUReal()\n\t]);\n\t\n\tmodule.exports = coder;\n\t\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file formatters.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar BigNumber = __webpack_require__(26);\n\tvar utils = __webpack_require__(25);\n\tvar c = __webpack_require__(64);\n\tvar SolidityParam = __webpack_require__(74);\n\t\n\t\n\t/**\n\t * Formats input value to byte representation of int\n\t * If value is negative, return it's two's complement\n\t * If the value is floating point, round it down\n\t *\n\t * @method formatInputInt\n\t * @param {String|Number|BigNumber} value that needs to be formatted\n\t * @returns {SolidityParam}\n\t */\n\tvar formatInputInt = function (value) {\n\t    BigNumber.config(c.ETH_BIGNUMBER_ROUNDING_MODE);\n\t    var result = utils.padLeft(utils.toTwosComplement(value).round().toString(16), 64);\n\t    return new SolidityParam(result);\n\t};\n\t\n\t/**\n\t * Formats input bytes\n\t *\n\t * @method formatInputBytes\n\t * @param {String}\n\t * @returns {SolidityParam}\n\t */\n\tvar formatInputBytes = function (value) {\n\t    var result = utils.toHex(value).substr(2);\n\t    var l = Math.floor((result.length + 63) / 64);\n\t    result = utils.padRight(result, l * 64);\n\t    return new SolidityParam(result);\n\t};\n\t\n\t/**\n\t * Formats input bytes\n\t *\n\t * @method formatDynamicInputBytes\n\t * @param {String}\n\t * @returns {SolidityParam}\n\t */\n\tvar formatInputDynamicBytes = function (value) {\n\t    var result = utils.toHex(value).substr(2);\n\t    var length = result.length / 2;\n\t    var l = Math.floor((result.length + 63) / 64);\n\t    result = utils.padRight(result, l * 64);\n\t    return new SolidityParam(formatInputInt(length).value + result);\n\t};\n\t\n\t/**\n\t * Formats input value to byte representation of string\n\t *\n\t * @method formatInputString\n\t * @param {String}\n\t * @returns {SolidityParam}\n\t */\n\tvar formatInputString = function (value) {\n\t    var result = utils.fromUtf8(value).substr(2);\n\t    var length = result.length / 2;\n\t    var l = Math.floor((result.length + 63) / 64);\n\t    result = utils.padRight(result, l * 64);\n\t    return new SolidityParam(formatInputInt(length).value + result);\n\t};\n\t\n\t/**\n\t * Formats input value to byte representation of bool\n\t *\n\t * @method formatInputBool\n\t * @param {Boolean}\n\t * @returns {SolidityParam}\n\t */\n\tvar formatInputBool = function (value) {\n\t    var result = '000000000000000000000000000000000000000000000000000000000000000' + (value ?  '1' : '0');\n\t    return new SolidityParam(result);\n\t};\n\t\n\t/**\n\t * Formats input value to byte representation of real\n\t * Values are multiplied by 2^m and encoded as integers\n\t *\n\t * @method formatInputReal\n\t * @param {String|Number|BigNumber}\n\t * @returns {SolidityParam}\n\t */\n\tvar formatInputReal = function (value) {\n\t    return formatInputInt(new BigNumber(value).times(new BigNumber(2).pow(128)));\n\t};\n\t\n\t/**\n\t * Check if input value is negative\n\t *\n\t * @method signedIsNegative\n\t * @param {String} value is hex format\n\t * @returns {Boolean} true if it is negative, otherwise false\n\t */\n\tvar signedIsNegative = function (value) {\n\t    return (new BigNumber(value.substr(0, 1), 16).toString(2).substr(0, 1)) === '1';\n\t};\n\t\n\t/**\n\t * Formats right-aligned output bytes to int\n\t *\n\t * @method formatOutputInt\n\t * @param {SolidityParam} param\n\t * @returns {BigNumber} right-aligned output bytes formatted to big number\n\t */\n\tvar formatOutputInt = function (param) {\n\t    var value = param.staticPart() || \"0\";\n\t\n\t    // check if it's negative number\n\t    // it it is, return two's complement\n\t    if (signedIsNegative(value)) {\n\t        return new BigNumber(value, 16).minus(new BigNumber('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16)).minus(1);\n\t    }\n\t    return new BigNumber(value, 16);\n\t};\n\t\n\t/**\n\t * Formats right-aligned output bytes to uint\n\t *\n\t * @method formatOutputUInt\n\t * @param {SolidityParam}\n\t * @returns {BigNumeber} right-aligned output bytes formatted to uint\n\t */\n\tvar formatOutputUInt = function (param) {\n\t    var value = param.staticPart() || \"0\";\n\t    return new BigNumber(value, 16);\n\t};\n\t\n\t/**\n\t * Formats right-aligned output bytes to real\n\t *\n\t * @method formatOutputReal\n\t * @param {SolidityParam}\n\t * @returns {BigNumber} input bytes formatted to real\n\t */\n\tvar formatOutputReal = function (param) {\n\t    return formatOutputInt(param).dividedBy(new BigNumber(2).pow(128)); \n\t};\n\t\n\t/**\n\t * Formats right-aligned output bytes to ureal\n\t *\n\t * @method formatOutputUReal\n\t * @param {SolidityParam}\n\t * @returns {BigNumber} input bytes formatted to ureal\n\t */\n\tvar formatOutputUReal = function (param) {\n\t    return formatOutputUInt(param).dividedBy(new BigNumber(2).pow(128)); \n\t};\n\t\n\t/**\n\t * Should be used to format output bool\n\t *\n\t * @method formatOutputBool\n\t * @param {SolidityParam}\n\t * @returns {Boolean} right-aligned input bytes formatted to bool\n\t */\n\tvar formatOutputBool = function (param) {\n\t    return param.staticPart() === '0000000000000000000000000000000000000000000000000000000000000001' ? true : false;\n\t};\n\t\n\t/**\n\t * Should be used to format output bytes\n\t *\n\t * @method formatOutputBytes\n\t * @param {SolidityParam} left-aligned hex representation of string\n\t * @returns {String} hex string\n\t */\n\tvar formatOutputBytes = function (param) {\n\t    return '0x' + param.staticPart();\n\t};\n\t\n\t/**\n\t * Should be used to format output bytes\n\t *\n\t * @method formatOutputDynamicBytes\n\t * @param {SolidityParam} left-aligned hex representation of string\n\t * @returns {String} hex string\n\t */\n\tvar formatOutputDynamicBytes = function (param) {\n\t    var length = (new BigNumber(param.dynamicPart().slice(0, 64), 16)).toNumber() * 2;\n\t    return '0x' + param.dynamicPart().substr(64, length);\n\t};\n\t\n\t/**\n\t * Should be used to format output string\n\t *\n\t * @method formatOutputString\n\t * @param {SolidityParam} left-aligned hex representation of string\n\t * @returns {String} ascii string\n\t */\n\tvar formatOutputString = function (param) {\n\t    var length = (new BigNumber(param.dynamicPart().slice(0, 64), 16)).toNumber() * 2;\n\t    return utils.toUtf8(param.dynamicPart().substr(64, length));\n\t};\n\t\n\t/**\n\t * Should be used to format output address\n\t *\n\t * @method formatOutputAddress\n\t * @param {SolidityParam} right-aligned input bytes\n\t * @returns {String} address\n\t */\n\tvar formatOutputAddress = function (param) {\n\t    var value = param.staticPart();\n\t    return \"0x\" + value.slice(value.length - 40, value.length);\n\t};\n\t\n\tmodule.exports = {\n\t    formatInputInt: formatInputInt,\n\t    formatInputBytes: formatInputBytes,\n\t    formatInputDynamicBytes: formatInputDynamicBytes,\n\t    formatInputString: formatInputString,\n\t    formatInputBool: formatInputBool,\n\t    formatInputReal: formatInputReal,\n\t    formatOutputInt: formatOutputInt,\n\t    formatOutputUInt: formatOutputUInt,\n\t    formatOutputReal: formatOutputReal,\n\t    formatOutputUReal: formatOutputUReal,\n\t    formatOutputBool: formatOutputBool,\n\t    formatOutputBytes: formatOutputBytes,\n\t    formatOutputDynamicBytes: formatOutputDynamicBytes,\n\t    formatOutputString: formatOutputString,\n\t    formatOutputAddress: formatOutputAddress\n\t};\n\t\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file param.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar utils = __webpack_require__(25);\n\t\n\t/**\n\t * SolidityParam object prototype.\n\t * Should be used when encoding, decoding solidity bytes\n\t */\n\tvar SolidityParam = function (value, offset) {\n\t    this.value = value || '';\n\t    this.offset = offset; // offset in bytes\n\t};\n\t\n\t/**\n\t * This method should be used to get length of params's dynamic part\n\t * \n\t * @method dynamicPartLength\n\t * @returns {Number} length of dynamic part (in bytes)\n\t */\n\tSolidityParam.prototype.dynamicPartLength = function () {\n\t    return this.dynamicPart().length / 2;\n\t};\n\t\n\t/**\n\t * This method should be used to create copy of solidity param with different offset\n\t *\n\t * @method withOffset\n\t * @param {Number} offset length in bytes\n\t * @returns {SolidityParam} new solidity param with applied offset\n\t */\n\tSolidityParam.prototype.withOffset = function (offset) {\n\t    return new SolidityParam(this.value, offset);\n\t};\n\t\n\t/**\n\t * This method should be used to combine solidity params together\n\t * eg. when appending an array\n\t *\n\t * @method combine\n\t * @param {SolidityParam} param with which we should combine\n\t * @param {SolidityParam} result of combination\n\t */\n\tSolidityParam.prototype.combine = function (param) {\n\t    return new SolidityParam(this.value + param.value); \n\t};\n\t\n\t/**\n\t * This method should be called to check if param has dynamic size.\n\t * If it has, it returns true, otherwise false\n\t *\n\t * @method isDynamic\n\t * @returns {Boolean}\n\t */\n\tSolidityParam.prototype.isDynamic = function () {\n\t    return this.offset !== undefined;\n\t};\n\t\n\t/**\n\t * This method should be called to transform offset to bytes\n\t *\n\t * @method offsetAsBytes\n\t * @returns {String} bytes representation of offset\n\t */\n\tSolidityParam.prototype.offsetAsBytes = function () {\n\t    return !this.isDynamic() ? '' : utils.padLeft(utils.toTwosComplement(this.offset).toString(16), 64);\n\t};\n\t\n\t/**\n\t * This method should be called to get static part of param\n\t *\n\t * @method staticPart\n\t * @returns {String} offset if it is a dynamic param, otherwise value\n\t */\n\tSolidityParam.prototype.staticPart = function () {\n\t    if (!this.isDynamic()) {\n\t        return this.value; \n\t    } \n\t    return this.offsetAsBytes();\n\t};\n\t\n\t/**\n\t * This method should be called to get dynamic part of param\n\t *\n\t * @method dynamicPart\n\t * @returns {String} returns a value if it is a dynamic param, otherwise empty string\n\t */\n\tSolidityParam.prototype.dynamicPart = function () {\n\t    return this.isDynamic() ? this.value : '';\n\t};\n\t\n\t/**\n\t * This method should be called to encode param\n\t *\n\t * @method encode\n\t * @returns {String}\n\t */\n\tSolidityParam.prototype.encode = function () {\n\t    return this.staticPart() + this.dynamicPart();\n\t};\n\t\n\t/**\n\t * This method should be called to encode array of params\n\t *\n\t * @method encodeList\n\t * @param {Array[SolidityParam]} params\n\t * @returns {String}\n\t */\n\tSolidityParam.encodeList = function (params) {\n\t    \n\t    // updating offsets\n\t    var totalOffset = params.length * 32;\n\t    var offsetParams = params.map(function (param) {\n\t        if (!param.isDynamic()) {\n\t            return param;\n\t        }\n\t        var offset = totalOffset;\n\t        totalOffset += param.dynamicPartLength();\n\t        return param.withOffset(offset);\n\t    });\n\t\n\t    // encode everything!\n\t    return offsetParams.reduce(function (result, param) {\n\t        return result + param.dynamicPart();\n\t    }, offsetParams.reduce(function (result, param) {\n\t        return result + param.staticPart();\n\t    }, ''));\n\t};\n\t\n\t\n\t\n\tmodule.exports = SolidityParam;\n\t\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\t/**\n\t * SolidityTypeAddress is a prootype that represents address type\n\t * It matches:\n\t * address\n\t * address[]\n\t * address[4]\n\t * address[][]\n\t * address[3][]\n\t * address[][6][], ...\n\t */\n\tvar SolidityTypeAddress = function () {\n\t    this._inputFormatter = f.formatInputInt;\n\t    this._outputFormatter = f.formatOutputAddress;\n\t};\n\t\n\tSolidityTypeAddress.prototype = new SolidityType({});\n\tSolidityTypeAddress.prototype.constructor = SolidityTypeAddress;\n\t\n\tSolidityTypeAddress.prototype.isType = function (name) {\n\t    return !!name.match(/address(\\[([0-9]*)\\])?/);\n\t};\n\t\n\tSolidityTypeAddress.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tmodule.exports = SolidityTypeAddress;\n\t\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityParam = __webpack_require__(74);\n\t\n\t/**\n\t * SolidityType prototype is used to encode/decode solidity params of certain type\n\t */\n\tvar SolidityType = function (config) {\n\t    this._inputFormatter = config.inputFormatter;\n\t    this._outputFormatter = config.outputFormatter;\n\t};\n\t\n\t/**\n\t * Should be used to determine if this SolidityType do match given name\n\t *\n\t * @method isType\n\t * @param {String} name\n\t * @return {Bool} true if type match this SolidityType, otherwise false\n\t */\n\tSolidityType.prototype.isType = function (name) {\n\t    throw \"this method should be overrwritten for type \" + name;\n\t};\n\t\n\t/**\n\t * Should be used to determine what is the length of static part in given type\n\t *\n\t * @method staticPartLength\n\t * @param {String} name\n\t * @return {Number} length of static part in bytes\n\t */\n\tSolidityType.prototype.staticPartLength = function (name) {\n\t    throw \"this method should be overrwritten for type: \" + name;\n\t};\n\t\n\t/**\n\t * Should be used to determine if type is dynamic array\n\t * eg: \n\t * \"type[]\" => true\n\t * \"type[4]\" => false\n\t *\n\t * @method isDynamicArray\n\t * @param {String} name\n\t * @return {Bool} true if the type is dynamic array \n\t */\n\tSolidityType.prototype.isDynamicArray = function (name) {\n\t    var nestedTypes = this.nestedTypes(name);\n\t    return !!nestedTypes && !nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n\t};\n\t\n\t/**\n\t * Should be used to determine if type is static array\n\t * eg: \n\t * \"type[]\" => false\n\t * \"type[4]\" => true\n\t *\n\t * @method isStaticArray\n\t * @param {String} name\n\t * @return {Bool} true if the type is static array \n\t */\n\tSolidityType.prototype.isStaticArray = function (name) {\n\t    var nestedTypes = this.nestedTypes(name);\n\t    return !!nestedTypes && !!nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n\t};\n\t\n\t/**\n\t * Should return length of static array\n\t * eg. \n\t * \"int[32]\" => 32\n\t * \"int256[14]\" => 14\n\t * \"int[2][3]\" => 3\n\t * \"int\" => 1\n\t * \"int[1]\" => 1\n\t * \"int[]\" => 1\n\t *\n\t * @method staticArrayLength\n\t * @param {String} name\n\t * @return {Number} static array length\n\t */\n\tSolidityType.prototype.staticArrayLength = function (name) {\n\t    var nestedTypes = this.nestedTypes(name);\n\t    if (nestedTypes) {\n\t       return parseInt(nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g) || 1);\n\t    }\n\t    return 1;\n\t};\n\t\n\t/**\n\t * Should return nested type\n\t * eg.\n\t * \"int[32]\" => \"int\"\n\t * \"int256[14]\" => \"int256\"\n\t * \"int[2][3]\" => \"int[2]\"\n\t * \"int\" => \"int\"\n\t * \"int[]\" => \"int\"\n\t *\n\t * @method nestedName\n\t * @param {String} name\n\t * @return {String} nested name\n\t */\n\tSolidityType.prototype.nestedName = function (name) {\n\t    // remove last [] in name\n\t    var nestedTypes = this.nestedTypes(name);\n\t    if (!nestedTypes) {\n\t        return name;\n\t    }\n\t\n\t    return name.substr(0, name.length - nestedTypes[nestedTypes.length - 1].length);\n\t};\n\t\n\t/**\n\t * Should return true if type has dynamic size by default\n\t * such types are \"string\", \"bytes\"\n\t *\n\t * @method isDynamicType\n\t * @param {String} name\n\t * @return {Bool} true if is dynamic, otherwise false\n\t */\n\tSolidityType.prototype.isDynamicType = function () {\n\t    return false;\n\t};\n\t\n\t/**\n\t * Should return array of nested types\n\t * eg.\n\t * \"int[2][3][]\" => [\"[2]\", \"[3]\", \"[]\"]\n\t * \"int[] => [\"[]\"]\n\t * \"int\" => null\n\t *\n\t * @method nestedTypes\n\t * @param {String} name\n\t * @return {Array} array of nested types\n\t */\n\tSolidityType.prototype.nestedTypes = function (name) {\n\t    // return list of strings eg. \"[]\", \"[3]\", \"[]\", \"[2]\"\n\t    return name.match(/(\\[[0-9]*\\])/g);\n\t};\n\t\n\t/**\n\t * Should be used to encode the value\n\t *\n\t * @method encode\n\t * @param {Object} value \n\t * @param {String} name\n\t * @return {String} encoded value\n\t */\n\tSolidityType.prototype.encode = function (value, name) {\n\t    var self = this;\n\t    if (this.isDynamicArray(name)) {\n\t\n\t        return (function () {\n\t            var length = value.length;                          // in int\n\t            var nestedName = self.nestedName(name);\n\t\n\t            var result = [];\n\t            result.push(f.formatInputInt(length).encode());\n\t            \n\t            value.forEach(function (v) {\n\t                result.push(self.encode(v, nestedName));\n\t            });\n\t\n\t            return result;\n\t        })();\n\t\n\t    } else if (this.isStaticArray(name)) {\n\t\n\t        return (function () {\n\t            var length = self.staticArrayLength(name);          // in int\n\t            var nestedName = self.nestedName(name);\n\t\n\t            var result = [];\n\t            for (var i = 0; i < length; i++) {\n\t                result.push(self.encode(value[i], nestedName));\n\t            }\n\t\n\t            return result;\n\t        })();\n\t\n\t    }\n\t\n\t    return this._inputFormatter(value, name).encode();\n\t};\n\t\n\t/**\n\t * Should be used to decode value from bytes\n\t *\n\t * @method decode\n\t * @param {String} bytes\n\t * @param {Number} offset in bytes\n\t * @param {String} name type name\n\t * @returns {Object} decoded value\n\t */\n\tSolidityType.prototype.decode = function (bytes, offset, name) {\n\t    var self = this;\n\t\n\t    if (this.isDynamicArray(name)) {\n\t\n\t        return (function () {\n\t            var arrayOffset = parseInt('0x' + bytes.substr(offset * 2, 64)); // in bytes\n\t            var length = parseInt('0x' + bytes.substr(arrayOffset * 2, 64)); // in int\n\t            var arrayStart = arrayOffset + 32; // array starts after length; // in bytes\n\t\n\t            var nestedName = self.nestedName(name);\n\t            var nestedStaticPartLength = self.staticPartLength(nestedName);  // in bytes\n\t            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n\t            var result = [];\n\t\n\t            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n\t                result.push(self.decode(bytes, arrayStart + i, nestedName));\n\t            }\n\t\n\t            return result;\n\t        })();\n\t\n\t    } else if (this.isStaticArray(name)) {\n\t\n\t        return (function () {\n\t            var length = self.staticArrayLength(name);                      // in int\n\t            var arrayStart = offset;                                        // in bytes\n\t\n\t            var nestedName = self.nestedName(name);\n\t            var nestedStaticPartLength = self.staticPartLength(nestedName); // in bytes\n\t            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n\t            var result = [];\n\t\n\t            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n\t                result.push(self.decode(bytes, arrayStart + i, nestedName));\n\t            }\n\t\n\t            return result;\n\t        })();\n\t    } else if (this.isDynamicType(name)) {\n\t        \n\t        return (function () {\n\t            var dynamicOffset = parseInt('0x' + bytes.substr(offset * 2, 64));      // in bytes\n\t            var length = parseInt('0x' + bytes.substr(dynamicOffset * 2, 64));      // in bytes\n\t            var roundedLength = Math.floor((length + 31) / 32);                     // in int\n\t        \n\t            return self._outputFormatter(new SolidityParam(bytes.substr(dynamicOffset * 2, ( 1 + roundedLength) * 64), 0));\n\t        })();\n\t    }\n\t\n\t    var length = this.staticPartLength(name);\n\t    return this._outputFormatter(new SolidityParam(bytes.substr(offset * 2, length * 2)));\n\t};\n\t\n\tmodule.exports = SolidityType;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\t/**\n\t * SolidityTypeBool is a prootype that represents bool type\n\t * It matches:\n\t * bool\n\t * bool[]\n\t * bool[4]\n\t * bool[][]\n\t * bool[3][]\n\t * bool[][6][], ...\n\t */\n\tvar SolidityTypeBool = function () {\n\t    this._inputFormatter = f.formatInputBool;\n\t    this._outputFormatter = f.formatOutputBool;\n\t};\n\t\n\tSolidityTypeBool.prototype = new SolidityType({});\n\tSolidityTypeBool.prototype.constructor = SolidityTypeBool;\n\t\n\tSolidityTypeBool.prototype.isType = function (name) {\n\t    return !!name.match(/^bool(\\[([0-9]*)\\])*$/);\n\t};\n\t\n\tSolidityTypeBool.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tmodule.exports = SolidityTypeBool;\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\t/**\n\t * SolidityTypeInt is a prootype that represents int type\n\t * It matches:\n\t * int\n\t * int[]\n\t * int[4]\n\t * int[][]\n\t * int[3][]\n\t * int[][6][], ...\n\t * int32\n\t * int64[]\n\t * int8[4]\n\t * int256[][]\n\t * int[3][]\n\t * int64[][6][], ...\n\t */\n\tvar SolidityTypeInt = function () {\n\t    this._inputFormatter = f.formatInputInt;\n\t    this._outputFormatter = f.formatOutputInt;\n\t};\n\t\n\tSolidityTypeInt.prototype = new SolidityType({});\n\tSolidityTypeInt.prototype.constructor = SolidityTypeInt;\n\t\n\tSolidityTypeInt.prototype.isType = function (name) {\n\t    return !!name.match(/^int([0-9]*)?(\\[([0-9]*)\\])*$/);\n\t};\n\t\n\tSolidityTypeInt.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tmodule.exports = SolidityTypeInt;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\t/**\n\t * SolidityTypeUInt is a prootype that represents uint type\n\t * It matches:\n\t * uint\n\t * uint[]\n\t * uint[4]\n\t * uint[][]\n\t * uint[3][]\n\t * uint[][6][], ...\n\t * uint32\n\t * uint64[]\n\t * uint8[4]\n\t * uint256[][]\n\t * uint[3][]\n\t * uint64[][6][], ...\n\t */\n\tvar SolidityTypeUInt = function () {\n\t    this._inputFormatter = f.formatInputInt;\n\t    this._outputFormatter = f.formatOutputUInt;\n\t};\n\t\n\tSolidityTypeUInt.prototype = new SolidityType({});\n\tSolidityTypeUInt.prototype.constructor = SolidityTypeUInt;\n\t\n\tSolidityTypeUInt.prototype.isType = function (name) {\n\t    return !!name.match(/^uint([0-9]*)?(\\[([0-9]*)\\])*$/);\n\t};\n\t\n\tSolidityTypeUInt.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tmodule.exports = SolidityTypeUInt;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\tvar SolidityTypeDynamicBytes = function () {\n\t    this._inputFormatter = f.formatInputDynamicBytes;\n\t    this._outputFormatter = f.formatOutputDynamicBytes;\n\t};\n\t\n\tSolidityTypeDynamicBytes.prototype = new SolidityType({});\n\tSolidityTypeDynamicBytes.prototype.constructor = SolidityTypeDynamicBytes;\n\t\n\tSolidityTypeDynamicBytes.prototype.isType = function (name) {\n\t    return !!name.match(/^bytes(\\[([0-9]*)\\])*$/);\n\t};\n\t\n\tSolidityTypeDynamicBytes.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tSolidityTypeDynamicBytes.prototype.isDynamicType = function () {\n\t    return true;\n\t};\n\t\n\tmodule.exports = SolidityTypeDynamicBytes;\n\t\n\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\tvar SolidityTypeString = function () {\n\t    this._inputFormatter = f.formatInputString;\n\t    this._outputFormatter = f.formatOutputString;\n\t};\n\t\n\tSolidityTypeString.prototype = new SolidityType({});\n\tSolidityTypeString.prototype.constructor = SolidityTypeString;\n\t\n\tSolidityTypeString.prototype.isType = function (name) {\n\t    return !!name.match(/^string(\\[([0-9]*)\\])*$/);\n\t};\n\t\n\tSolidityTypeString.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tSolidityTypeString.prototype.isDynamicType = function () {\n\t    return true;\n\t};\n\t\n\tmodule.exports = SolidityTypeString;\n\t\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\t/**\n\t * SolidityTypeReal is a prootype that represents real type\n\t * It matches:\n\t * real\n\t * real[]\n\t * real[4]\n\t * real[][]\n\t * real[3][]\n\t * real[][6][], ...\n\t * real32\n\t * real64[]\n\t * real8[4]\n\t * real256[][]\n\t * real[3][]\n\t * real64[][6][], ...\n\t */\n\tvar SolidityTypeReal = function () {\n\t    this._inputFormatter = f.formatInputReal;\n\t    this._outputFormatter = f.formatOutputReal;\n\t};\n\t\n\tSolidityTypeReal.prototype = new SolidityType({});\n\tSolidityTypeReal.prototype.constructor = SolidityTypeReal;\n\t\n\tSolidityTypeReal.prototype.isType = function (name) {\n\t    return !!name.match(/real([0-9]*)?(\\[([0-9]*)\\])?/);\n\t};\n\t\n\tSolidityTypeReal.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tmodule.exports = SolidityTypeReal;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\t/**\n\t * SolidityTypeUReal is a prootype that represents ureal type\n\t * It matches:\n\t * ureal\n\t * ureal[]\n\t * ureal[4]\n\t * ureal[][]\n\t * ureal[3][]\n\t * ureal[][6][], ...\n\t * ureal32\n\t * ureal64[]\n\t * ureal8[4]\n\t * ureal256[][]\n\t * ureal[3][]\n\t * ureal64[][6][], ...\n\t */\n\tvar SolidityTypeUReal = function () {\n\t    this._inputFormatter = f.formatInputReal;\n\t    this._outputFormatter = f.formatOutputUReal;\n\t};\n\t\n\tSolidityTypeUReal.prototype = new SolidityType({});\n\tSolidityTypeUReal.prototype.constructor = SolidityTypeUReal;\n\t\n\tSolidityTypeUReal.prototype.isType = function (name) {\n\t    return !!name.match(/^ureal([0-9]*)?(\\[([0-9]*)\\])*$/);\n\t};\n\t\n\tSolidityTypeUReal.prototype.staticPartLength = function (name) {\n\t    return 32 * this.staticArrayLength(name);\n\t};\n\t\n\tmodule.exports = SolidityTypeUReal;\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar f = __webpack_require__(73);\n\tvar SolidityType = __webpack_require__(76);\n\t\n\t/**\n\t * SolidityTypeBytes is a prootype that represents bytes type\n\t * It matches:\n\t * bytes\n\t * bytes[]\n\t * bytes[4]\n\t * bytes[][]\n\t * bytes[3][]\n\t * bytes[][6][], ...\n\t * bytes32\n\t * bytes64[]\n\t * bytes8[4]\n\t * bytes256[][]\n\t * bytes[3][]\n\t * bytes64[][6][], ...\n\t */\n\tvar SolidityTypeBytes = function () {\n\t    this._inputFormatter = f.formatInputBytes;\n\t    this._outputFormatter = f.formatOutputBytes;\n\t};\n\t\n\tSolidityTypeBytes.prototype = new SolidityType({});\n\tSolidityTypeBytes.prototype.constructor = SolidityTypeBytes;\n\t\n\tSolidityTypeBytes.prototype.isType = function (name) {\n\t    return !!name.match(/^bytes([0-9]{1,})(\\[([0-9]*)\\])*$/);\n\t};\n\t\n\tSolidityTypeBytes.prototype.staticPartLength = function (name) {\n\t    var matches = name.match(/^bytes([0-9]*)/);\n\t    var size = parseInt(matches[1]);\n\t    return size * this.staticArrayLength(name);\n\t};\n\t\n\tmodule.exports = SolidityTypeBytes;\n\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file event.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2014\n\t */\n\t\n\tvar utils = __webpack_require__(25);\n\tvar coder = __webpack_require__(72);\n\tvar formatters = __webpack_require__(68);\n\tvar sha3 = __webpack_require__(27);\n\tvar Filter = __webpack_require__(86);\n\tvar watches = __webpack_require__(87);\n\t\n\t/**\n\t * This prototype should be used to create event filters\n\t */\n\tvar SolidityEvent = function (requestManager, json, address) {\n\t    this._requestManager = requestManager;\n\t    this._params = json.inputs;\n\t    this._name = utils.transformToFullName(json);\n\t    this._address = address;\n\t    this._anonymous = json.anonymous;\n\t};\n\t\n\t/**\n\t * Should be used to get filtered param types\n\t *\n\t * @method types\n\t * @param {Bool} decide if returned typed should be indexed\n\t * @return {Array} array of types\n\t */\n\tSolidityEvent.prototype.types = function (indexed) {\n\t    return this._params.filter(function (i) {\n\t        return i.indexed === indexed;\n\t    }).map(function (i) {\n\t        return i.type;\n\t    });\n\t};\n\t\n\t/**\n\t * Should be used to get event display name\n\t *\n\t * @method displayName\n\t * @return {String} event display name\n\t */\n\tSolidityEvent.prototype.displayName = function () {\n\t    return utils.extractDisplayName(this._name);\n\t};\n\t\n\t/**\n\t * Should be used to get event type name\n\t *\n\t * @method typeName\n\t * @return {String} event type name\n\t */\n\tSolidityEvent.prototype.typeName = function () {\n\t    return utils.extractTypeName(this._name);\n\t};\n\t\n\t/**\n\t * Should be used to get event signature\n\t *\n\t * @method signature\n\t * @return {String} event signature\n\t */\n\tSolidityEvent.prototype.signature = function () {\n\t    return sha3(this._name);\n\t};\n\t\n\t/**\n\t * Should be used to encode indexed params and options to one final object\n\t * \n\t * @method encode\n\t * @param {Object} indexed\n\t * @param {Object} options\n\t * @return {Object} everything combined together and encoded\n\t */\n\tSolidityEvent.prototype.encode = function (indexed, options) {\n\t    indexed = indexed || {};\n\t    options = options || {};\n\t    var result = {};\n\t\n\t    ['fromBlock', 'toBlock'].filter(function (f) {\n\t        return options[f] !== undefined;\n\t    }).forEach(function (f) {\n\t        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n\t    });\n\t\n\t    result.topics = [];\n\t\n\t    result.address = this._address;\n\t    if (!this._anonymous) {\n\t        result.topics.push('0x' + this.signature());\n\t    }\n\t\n\t    var indexedTopics = this._params.filter(function (i) {\n\t        return i.indexed === true;\n\t    }).map(function (i) {\n\t        var value = indexed[i.name];\n\t        if (value === undefined || value === null) {\n\t            return null;\n\t        }\n\t        \n\t        if (utils.isArray(value)) {\n\t            return value.map(function (v) {\n\t                return '0x' + coder.encodeParam(i.type, v);\n\t            });\n\t        }\n\t        return '0x' + coder.encodeParam(i.type, value);\n\t    });\n\t\n\t    result.topics = result.topics.concat(indexedTopics);\n\t\n\t    return result;\n\t};\n\t\n\t/**\n\t * Should be used to decode indexed params and options\n\t *\n\t * @method decode\n\t * @param {Object} data\n\t * @return {Object} result object with decoded indexed && not indexed params\n\t */\n\tSolidityEvent.prototype.decode = function (data) {\n\t \n\t    data.data = data.data || '';\n\t    data.topics = data.topics || [];\n\t\n\t    var argTopics = this._anonymous ? data.topics : data.topics.slice(1);\n\t    var indexedData = argTopics.map(function (topics) { return topics.slice(2); }).join(\"\");\n\t    var indexedParams = coder.decodeParams(this.types(true), indexedData); \n\t\n\t    var notIndexedData = data.data.slice(2);\n\t    var notIndexedParams = coder.decodeParams(this.types(false), notIndexedData);\n\t    \n\t    var result = formatters.outputLogFormatter(data);\n\t    result.event = this.displayName();\n\t    result.address = data.address;\n\t\n\t    result.args = this._params.reduce(function (acc, current) {\n\t        acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();\n\t        return acc;\n\t    }, {});\n\t\n\t    delete result.data;\n\t    delete result.topics;\n\t\n\t    return result;\n\t};\n\t\n\t/**\n\t * Should be used to create new filter object from event\n\t *\n\t * @method execute\n\t * @param {Object} indexed\n\t * @param {Object} options\n\t * @return {Object} filter object\n\t */\n\tSolidityEvent.prototype.execute = function (indexed, options, callback) {\n\t\n\t    if (utils.isFunction(arguments[arguments.length - 1])) {\n\t        callback = arguments[arguments.length - 1];\n\t        if(arguments.length === 2)\n\t            options = null;\n\t        if(arguments.length === 1) {\n\t            options = null;\n\t            indexed = {};\n\t        }\n\t    }\n\t    \n\t    var o = this.encode(indexed, options);\n\t    var formatter = this.decode.bind(this);\n\t    return new Filter(this._requestManager, o, watches.eth(), formatter, callback);\n\t};\n\t\n\t/**\n\t * Should be used to attach event to contract object\n\t *\n\t * @method attachToContract\n\t * @param {Contract}\n\t */\n\tSolidityEvent.prototype.attachToContract = function (contract) {\n\t    var execute = this.execute.bind(this);\n\t    var displayName = this.displayName();\n\t    if (!contract[displayName]) {\n\t        contract[displayName] = execute;\n\t    }\n\t    contract[displayName][this.typeName()] = this.execute.bind(this, contract);\n\t};\n\t\n\tmodule.exports = SolidityEvent;\n\t\n\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file filter.js\n\t * @authors:\n\t *   Jeffrey Wilcke <jeff@ethdev.com>\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t *   Marian Oancea <marian@ethdev.com>\n\t *   Fabian Vogelsteller <fabian@ethdev.com>\n\t *   Gav Wood <g@ethdev.com>\n\t * @date 2014\n\t */\n\t\n\tvar formatters = __webpack_require__(68);\n\tvar utils = __webpack_require__(25);\n\t\n\t/**\n\t* Converts a given topic to a hex string, but also allows null values.\n\t*\n\t* @param {Mixed} value\n\t* @return {String}\n\t*/\n\tvar toTopic = function(value){\n\t\n\t    if(value === null || typeof value === 'undefined')\n\t        return null;\n\t\n\t    value = String(value);\n\t\n\t    if(value.indexOf('0x') === 0)\n\t        return value;\n\t    else\n\t        return utils.fromUtf8(value);\n\t};\n\t\n\t/// This method should be called on options object, to verify deprecated properties && lazy load dynamic ones\n\t/// @param should be string or object\n\t/// @returns options string or object\n\tvar getOptions = function (options) {\n\t\n\t    if (utils.isString(options)) {\n\t        return options;\n\t    }\n\t\n\t    options = options || {};\n\t\n\t    // make sure topics, get converted to hex\n\t    options.topics = options.topics || [];\n\t    options.topics = options.topics.map(function(topic){\n\t        return (utils.isArray(topic)) ? topic.map(toTopic) : toTopic(topic);\n\t    });\n\t\n\t    return {\n\t        topics: options.topics,\n\t        from: options.from,\n\t        to: options.to,\n\t        address: options.address,\n\t        fromBlock: formatters.inputBlockNumberFormatter(options.fromBlock),\n\t        toBlock: formatters.inputBlockNumberFormatter(options.toBlock)\n\t    };\n\t};\n\t\n\t/**\n\tAdds the callback and sets up the methods, to iterate over the results.\n\t\n\t@method getLogsAtStart\n\t@param {Object} self\n\t@param {funciton}\n\t*/\n\tvar getLogsAtStart = function(self, callback){\n\t    // call getFilterLogs for the first watch callback start\n\t    if (!utils.isString(self.options)) {\n\t        self.get(function (err, messages) {\n\t            // don't send all the responses to all the watches again... just to self one\n\t            if (err) {\n\t                callback(err);\n\t            }\n\t\n\t            if(utils.isArray(messages)) {\n\t                messages.forEach(function (message) {\n\t                    callback(null, message);\n\t                });\n\t            }\n\t        });\n\t    }\n\t};\n\t\n\t/**\n\tAdds the callback and sets up the methods, to iterate over the results.\n\t\n\t@method pollFilter\n\t@param {Object} self\n\t*/\n\tvar pollFilter = function(self) {\n\t\n\t    var onMessage = function (error, messages) {\n\t        if (error) {\n\t            return self.callbacks.forEach(function (callback) {\n\t                callback(error);\n\t            });\n\t        }\n\t\n\t        if(utils.isArray(messages)) {\n\t            messages.forEach(function (message) {\n\t                message = self.formatter ? self.formatter(message) : message;\n\t                self.callbacks.forEach(function (callback) {\n\t                    callback(null, message);\n\t                });\n\t            });\n\t        }\n\t    };\n\t\n\t    self.requestManager.startPolling({\n\t        method: self.implementation.poll.call,\n\t        params: [self.filterId],\n\t    }, self.filterId, onMessage, self.stopWatching.bind(self));\n\t\n\t};\n\t\n\tvar Filter = function (requestManager, options, methods, formatter, callback) {\n\t    var self = this;\n\t    var implementation = {};\n\t    methods.forEach(function (method) {\n\t        method.setRequestManager(requestManager);\n\t        method.attachToObject(implementation);\n\t    });\n\t    this.requestManager = requestManager;\n\t    this.options = getOptions(options);\n\t    this.implementation = implementation;\n\t    this.filterId = null;\n\t    this.callbacks = [];\n\t    this.getLogsCallbacks = [];\n\t    this.pollFilters = [];\n\t    this.formatter = formatter;\n\t    this.implementation.newFilter(this.options, function(error, id){\n\t        if(error) {\n\t            self.callbacks.forEach(function(cb){\n\t                cb(error);\n\t            });\n\t        } else {\n\t            self.filterId = id;\n\t\n\t            // check if there are get pending callbacks as a consequence\n\t            // of calling get() with filterId unassigned.\n\t            self.getLogsCallbacks.forEach(function (cb){\n\t                self.get(cb);\n\t            });\n\t            self.getLogsCallbacks = [];\n\t\n\t            // get filter logs for the already existing watch calls\n\t            self.callbacks.forEach(function(cb){\n\t                getLogsAtStart(self, cb);\n\t            });\n\t            if(self.callbacks.length > 0)\n\t                pollFilter(self);\n\t\n\t            // start to watch immediately\n\t            if(typeof callback === 'function') {\n\t                return self.watch(callback);\n\t            }\n\t        }\n\t    });\n\t\n\t    return this;\n\t};\n\t\n\tFilter.prototype.watch = function (callback) {\n\t    this.callbacks.push(callback);\n\t\n\t    if(this.filterId) {\n\t        getLogsAtStart(this, callback);\n\t        pollFilter(this);\n\t    }\n\t\n\t    return this;\n\t};\n\t\n\tFilter.prototype.stopWatching = function () {\n\t    this.requestManager.stopPolling(this.filterId);\n\t    // remove filter async\n\t    this.implementation.uninstallFilter(this.filterId, function(){});\n\t    this.callbacks = [];\n\t};\n\t\n\tFilter.prototype.get = function (callback) {\n\t    var self = this;\n\t    if (utils.isFunction(callback)) {\n\t        if (this.filterId === null) {\n\t            // If filterId is not set yet, call it back\n\t            // when newFilter() assigns it.\n\t            this.getLogsCallbacks.push(callback);\n\t        } else {\n\t            this.implementation.getLogs(this.filterId, function(err, res){\n\t                if (err) {\n\t                    callback(err);\n\t                } else {\n\t                    callback(null, res.map(function (log) {\n\t                        return self.formatter ? self.formatter(log) : log;\n\t                    }));\n\t                }\n\t            });\n\t        }\n\t    } else {\n\t        if (this.filterId === null) {\n\t            throw new Error('Filter ID Error: filter().get() can\\'t be chained synchronous, please provide a callback for the get() method.');\n\t        }\n\t        var logs = this.implementation.getLogs(this.filterId);\n\t        return logs.map(function (log) {\n\t            return self.formatter ? self.formatter(log) : log;\n\t        });\n\t    }\n\t\n\t    return this;\n\t};\n\t\n\tmodule.exports = Filter;\n\t\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file watches.js\n\t * @authors:\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar Method = __webpack_require__(69);\n\t\n\t/// @returns an array of objects describing web3.eth.filter api methods\n\tvar eth = function () {\n\t    var newFilterCall = function (args) {\n\t        var type = args[0];\n\t\n\t        switch(type) {\n\t            case 'latest':\n\t                args.shift();\n\t                this.params = 0;\n\t                return 'eth_newBlockFilter';\n\t            case 'pending':\n\t                args.shift();\n\t                this.params = 0;\n\t                return 'eth_newPendingTransactionFilter';\n\t            default:\n\t                return 'eth_newFilter';\n\t        }\n\t    };\n\t\n\t    var newFilter = new Method({\n\t        name: 'newFilter',\n\t        call: newFilterCall,\n\t        params: 1\n\t    });\n\t\n\t    var uninstallFilter = new Method({\n\t        name: 'uninstallFilter',\n\t        call: 'eth_uninstallFilter',\n\t        params: 1\n\t    });\n\t\n\t    var getLogs = new Method({\n\t        name: 'getLogs',\n\t        call: 'eth_getFilterLogs',\n\t        params: 1\n\t    });\n\t\n\t    var poll = new Method({\n\t        name: 'poll',\n\t        call: 'eth_getFilterChanges',\n\t        params: 1\n\t    });\n\t\n\t    return [\n\t        newFilter,\n\t        uninstallFilter,\n\t        getLogs,\n\t        poll\n\t    ];\n\t};\n\t\n\t/// @returns an array of objects describing web3.shh.watch api methods\n\tvar shh = function () {\n\t    var newFilter = new Method({\n\t        name: 'newFilter',\n\t        call: 'shh_newFilter',\n\t        params: 1\n\t    });\n\t\n\t    var uninstallFilter = new Method({\n\t        name: 'uninstallFilter',\n\t        call: 'shh_uninstallFilter',\n\t        params: 1\n\t    });\n\t\n\t    var getLogs = new Method({\n\t        name: 'getLogs',\n\t        call: 'shh_getMessages',\n\t        params: 1\n\t    });\n\t\n\t    var poll = new Method({\n\t        name: 'poll',\n\t        call: 'shh_getFilterChanges',\n\t        params: 1\n\t    });\n\t\n\t    return [\n\t        newFilter,\n\t        uninstallFilter,\n\t        getLogs,\n\t        poll\n\t    ];\n\t};\n\t\n\tmodule.exports = {\n\t    eth: eth,\n\t    shh: shh\n\t};\n\t\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file function.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar coder = __webpack_require__(72);\n\tvar utils = __webpack_require__(25);\n\tvar formatters = __webpack_require__(68);\n\tvar sha3 = __webpack_require__(27);\n\t\n\t/**\n\t * This prototype should be used to call/sendTransaction to solidity functions\n\t */\n\tvar SolidityFunction = function (eth, json, address) {\n\t    this._eth = eth;\n\t    this._inputTypes = json.inputs.map(function (i) {\n\t        return i.type;\n\t    });\n\t    this._outputTypes = json.outputs.map(function (i) {\n\t        return i.type;\n\t    });\n\t    this._constant = json.constant;\n\t    this._name = utils.transformToFullName(json);\n\t    this._address = address;\n\t};\n\t\n\tSolidityFunction.prototype.extractCallback = function (args) {\n\t    if (utils.isFunction(args[args.length - 1])) {\n\t        return args.pop(); // modify the args array!\n\t    }\n\t};\n\t\n\tSolidityFunction.prototype.extractDefaultBlock = function (args) {\n\t    if (args.length > this._inputTypes.length && !utils.isObject(args[args.length -1])) {\n\t        return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!\n\t    }\n\t};\n\t\n\t/**\n\t * Should be used to create payload from arguments\n\t *\n\t * @method toPayload\n\t * @param {Array} solidity function params\n\t * @param {Object} optional payload options\n\t */\n\tSolidityFunction.prototype.toPayload = function (args) {\n\t    var options = {};\n\t    if (args.length > this._inputTypes.length && utils.isObject(args[args.length -1])) {\n\t        options = args[args.length - 1];\n\t    }\n\t    options.to = this._address;\n\t    options.data = '0x' + this.signature() + coder.encodeParams(this._inputTypes, args);\n\t    return options;\n\t};\n\t\n\t/**\n\t * Should be used to get function signature\n\t *\n\t * @method signature\n\t * @return {String} function signature\n\t */\n\tSolidityFunction.prototype.signature = function () {\n\t    return sha3(this._name).slice(0, 8);\n\t};\n\t\n\t\n\tSolidityFunction.prototype.unpackOutput = function (output) {\n\t    if (!output) {\n\t        return;\n\t    }\n\t\n\t    output = output.length >= 2 ? output.slice(2) : output;\n\t    var result = coder.decodeParams(this._outputTypes, output);\n\t    return result.length === 1 ? result[0] : result;\n\t};\n\t\n\t/**\n\t * Calls a contract function.\n\t *\n\t * @method call\n\t * @param {...Object} Contract function arguments\n\t * @param {function} If the last argument is a function, the contract function\n\t *   call will be asynchronous, and the callback will be passed the\n\t *   error and result.\n\t * @return {String} output bytes\n\t */\n\tSolidityFunction.prototype.call = function () {\n\t    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n\t    var callback = this.extractCallback(args);\n\t    var defaultBlock = this.extractDefaultBlock(args);\n\t    var payload = this.toPayload(args);\n\t\n\t\n\t    if (!callback) {\n\t        var output = this._eth.call(payload, defaultBlock);\n\t        return this.unpackOutput(output);\n\t    } \n\t        \n\t    var self = this;\n\t    this._eth.call(payload, defaultBlock, function (error, output) {\n\t        callback(error, self.unpackOutput(output));\n\t    });\n\t};\n\t\n\t/**\n\t * Should be used to sendTransaction to solidity function\n\t *\n\t * @method sendTransaction\n\t */\n\tSolidityFunction.prototype.sendTransaction = function () {\n\t    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n\t    var callback = this.extractCallback(args);\n\t    var payload = this.toPayload(args);\n\t\n\t    if (!callback) {\n\t        return this._eth.sendTransaction(payload);\n\t    }\n\t\n\t    this._eth.sendTransaction(payload, callback);\n\t};\n\t\n\t/**\n\t * Should be used to estimateGas of solidity function\n\t *\n\t * @method estimateGas\n\t */\n\tSolidityFunction.prototype.estimateGas = function () {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    var callback = this.extractCallback(args);\n\t    var payload = this.toPayload(args);\n\t\n\t    if (!callback) {\n\t        return this._eth.estimateGas(payload);\n\t    }\n\t\n\t    this._eth.estimateGas(payload, callback);\n\t};\n\t\n\t/**\n\t * Return the encoded data of the call\n\t *\n\t * @method getData\n\t * @return {String} the encoded data\n\t */\n\tSolidityFunction.prototype.getData = function () {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    var payload = this.toPayload(args);\n\t\n\t    return payload.data;\n\t};\n\t\n\t/**\n\t * Should be used to get function display name\n\t *\n\t * @method displayName\n\t * @return {String} display name of the function\n\t */\n\tSolidityFunction.prototype.displayName = function () {\n\t    return utils.extractDisplayName(this._name);\n\t};\n\t\n\t/**\n\t * Should be used to get function type name\n\t *\n\t * @method typeName\n\t * @return {String} type name of the function\n\t */\n\tSolidityFunction.prototype.typeName = function () {\n\t    return utils.extractTypeName(this._name);\n\t};\n\t\n\t/**\n\t * Should be called to get rpc requests from solidity function\n\t *\n\t * @method request\n\t * @returns {Object}\n\t */\n\tSolidityFunction.prototype.request = function () {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    var callback = this.extractCallback(args);\n\t    var payload = this.toPayload(args);\n\t    var format = this.unpackOutput.bind(this);\n\t    \n\t    return {\n\t        method: this._constant ? 'eth_call' : 'eth_sendTransaction',\n\t        callback: callback,\n\t        params: [payload], \n\t        format: format\n\t    };\n\t};\n\t\n\t/**\n\t * Should be called to execute function\n\t *\n\t * @method execute\n\t */\n\tSolidityFunction.prototype.execute = function () {\n\t    var transaction = !this._constant;\n\t\n\t    // send transaction\n\t    if (transaction) {\n\t        return this.sendTransaction.apply(this, Array.prototype.slice.call(arguments));\n\t    }\n\t\n\t    // call\n\t    return this.call.apply(this, Array.prototype.slice.call(arguments));\n\t};\n\t\n\t/**\n\t * Should be called to attach function to contract\n\t *\n\t * @method attachToContract\n\t * @param {Contract}\n\t */\n\tSolidityFunction.prototype.attachToContract = function (contract) {\n\t    var execute = this.execute.bind(this);\n\t    execute.request = this.request.bind(this);\n\t    execute.call = this.call.bind(this);\n\t    execute.sendTransaction = this.sendTransaction.bind(this);\n\t    execute.estimateGas = this.estimateGas.bind(this);\n\t    execute.getData = this.getData.bind(this);\n\t    var displayName = this.displayName();\n\t    if (!contract[displayName]) {\n\t        contract[displayName] = execute;\n\t    }\n\t    contract[displayName][this.typeName()] = execute; // circular!!!!\n\t};\n\t\n\tmodule.exports = SolidityFunction;\n\t\n\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file allevents.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2014\n\t */\n\t\n\tvar sha3 = __webpack_require__(27);\n\tvar SolidityEvent = __webpack_require__(85);\n\tvar formatters = __webpack_require__(68);\n\tvar utils = __webpack_require__(25);\n\tvar Filter = __webpack_require__(86);\n\tvar watches = __webpack_require__(87);\n\t\n\tvar AllSolidityEvents = function (requestManager, json, address) {\n\t    this._requestManager = requestManager;\n\t    this._json = json;\n\t    this._address = address;\n\t};\n\t\n\tAllSolidityEvents.prototype.encode = function (options) {\n\t    options = options || {};\n\t    var result = {};\n\t\n\t    ['fromBlock', 'toBlock'].filter(function (f) {\n\t        return options[f] !== undefined;\n\t    }).forEach(function (f) {\n\t        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n\t    });\n\t\n\t    result.address = this._address;\n\t\n\t    return result;\n\t};\n\t\n\tAllSolidityEvents.prototype.decode = function (data) {\n\t    data.data = data.data || '';\n\t    data.topics = data.topics || [];\n\t\n\t    var eventTopic = data.topics[0].slice(2);\n\t    var match = this._json.filter(function (j) {\n\t        return eventTopic === sha3(utils.transformToFullName(j));\n\t    })[0];\n\t\n\t    if (!match) { // cannot find matching event?\n\t        console.warn('cannot find event for log');\n\t        return data;\n\t    }\n\t\n\t    var event = new SolidityEvent(this._requestManager, match, this._address);\n\t    return event.decode(data);\n\t};\n\t\n\tAllSolidityEvents.prototype.execute = function (options, callback) {\n\t\n\t    if (utils.isFunction(arguments[arguments.length - 1])) {\n\t        callback = arguments[arguments.length - 1];\n\t        if(arguments.length === 1)\n\t            options = null;\n\t    }\n\t\n\t    var o = this.encode(options);\n\t    var formatter = this.decode.bind(this);\n\t    return new Filter(this._requestManager, o, watches.eth(), formatter, callback);\n\t};\n\t\n\tAllSolidityEvents.prototype.attachToContract = function (contract) {\n\t    var execute = this.execute.bind(this);\n\t    contract.allEvents = execute;\n\t};\n\t\n\tmodule.exports = AllSolidityEvents;\n\t\n\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file syncing.js\n\t * @authors:\n\t *   Fabian Vogelsteller <fabian@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar formatters = __webpack_require__(68);\n\tvar utils = __webpack_require__(25);\n\t\n\tvar count = 1;\n\t\n\t/**\n\tAdds the callback and sets up the methods, to iterate over the results.\n\t\n\t@method pollSyncing\n\t@param {Object} self\n\t*/\n\tvar pollSyncing = function(self) {\n\t\n\t    var onMessage = function (error, sync) {\n\t        if (error) {\n\t            return self.callbacks.forEach(function (callback) {\n\t                callback(error);\n\t            });\n\t        }\n\t\n\t        if(utils.isObject(sync) && sync.startingBlock)\n\t            sync = formatters.outputSyncingFormatter(sync);\n\t\n\t        self.callbacks.forEach(function (callback) {\n\t            if (self.lastSyncState !== sync) {\n\t                \n\t                // call the callback with true first so the app can stop anything, before receiving the sync data\n\t                if(!self.lastSyncState && utils.isObject(sync))\n\t                    callback(null, true);\n\t                \n\t                // call on the next CPU cycle, so the actions of the sync stop can be processes first\n\t                setTimeout(function() {\n\t                    callback(null, sync);\n\t                }, 0);\n\t                \n\t                self.lastSyncState = sync;\n\t            }\n\t        });\n\t    };\n\t\n\t    self.requestManager.startPolling({\n\t        method: 'eth_syncing',\n\t        params: [],\n\t    }, self.pollId, onMessage, self.stopWatching.bind(self));\n\t\n\t};\n\t\n\tvar IsSyncing = function (requestManager, callback) {\n\t    this.requestManager = requestManager;\n\t    this.pollId = 'syncPoll_'+ count++;\n\t    this.callbacks = [];\n\t    this.addCallback(callback);\n\t    this.lastSyncState = false;\n\t    pollSyncing(this);\n\t\n\t    return this;\n\t};\n\t\n\tIsSyncing.prototype.addCallback = function (callback) {\n\t    if(callback)\n\t        this.callbacks.push(callback);\n\t    return this;\n\t};\n\t\n\tIsSyncing.prototype.stopWatching = function () {\n\t    this.requestManager.stopPolling(this.pollId);\n\t    this.callbacks = [];\n\t};\n\t\n\tmodule.exports = IsSyncing;\n\t\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file namereg.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar globalRegistrarAbi = __webpack_require__(92);\n\tvar icapRegistrarAbi= __webpack_require__(93);\n\t\n\tvar globalNameregAddress = '0xc6d9d2cd449a754c494264e1809c50e34d64562b';\n\tvar icapNameregAddress = '0xa1a111bc074c9cfa781f0c38e63bd51c91b8af00';\n\t\n\tmodule.exports = {\n\t    global: {\n\t        abi: globalRegistrarAbi,\n\t        address: globalNameregAddress\n\t    },\n\t    icap: {\n\t        abi: icapRegistrarAbi,\n\t        address: icapNameregAddress\n\t    }\n\t};\n\t\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"o_name\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"content\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"reserve\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"subRegistrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_registrar\",\"type\":\"address\"}],\"name\":\"setSubRegistrar\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Registrar\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_a\",\"type\":\"address\"},{\"name\":\"_primary\",\"type\":\"bool\"}],\"name\":\"setAddress\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_content\",\"type\":\"bytes32\"}],\"name\":\"setContent\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"disown\",\"outputs\":[],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_winner\",\"type\":\"address\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_bidder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"PrimaryChanged\",\"type\":\"event\"}]\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_refund\",\"type\":\"address\"}],\"name\":\"disown\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"reserve\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"Changed\",\"type\":\"event\"}]\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file transfer.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar Iban = __webpack_require__(66);\n\tvar exchangeAbi = __webpack_require__(95);\n\t\n\t/**\n\t * Should be used to make Iban transfer\n\t *\n\t * @method transfer\n\t * @param {String} from\n\t * @param {String} to iban\n\t * @param {Value} value to be tranfered\n\t * @param {Function} callback, callback\n\t */\n\tvar transfer = function (eth, from, to, value, callback) {\n\t    var iban = new Iban(to); \n\t    if (!iban.isValid()) {\n\t        throw new Error('invalid iban address');\n\t    }\n\t\n\t    if (iban.isDirect()) {\n\t        return transferToAddress(eth, from, iban.address(), value, callback);\n\t    }\n\t    \n\t    if (!callback) {\n\t        var address = eth.icapNamereg().addr(iban.institution());\n\t        return deposit(eth, from, address, value, iban.client());\n\t    }\n\t\n\t    eth.icapNamereg().addr(iban.institution(), function (err, address) {\n\t        return deposit(eth, from, address, value, iban.client(), callback);\n\t    });\n\t    \n\t};\n\t\n\t/**\n\t * Should be used to transfer funds to certain address\n\t *\n\t * @method transferToAddress\n\t * @param {String} from\n\t * @param {String} to\n\t * @param {Value} value to be tranfered\n\t * @param {Function} callback, callback\n\t */\n\tvar transferToAddress = function (eth, from, to, value, callback) {\n\t    return eth.sendTransaction({\n\t        address: to,\n\t        from: from,\n\t        value: value\n\t    }, callback);\n\t};\n\t\n\t/**\n\t * Should be used to deposit funds to generic Exchange contract (must implement deposit(bytes32) method!)\n\t *\n\t * @method deposit\n\t * @param {String} from\n\t * @param {String} to\n\t * @param {Value} value to be transfered\n\t * @param {String} client unique identifier\n\t * @param {Function} callback, callback\n\t */\n\tvar deposit = function (eth, from, to, value, client, callback) {\n\t    var abi = exchangeAbi;\n\t    return eth.contract(abi).at(to).deposit(client, {\n\t        from: from,\n\t        value: value\n\t    }, callback);\n\t};\n\t\n\tmodule.exports = transfer;\n\t\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = [{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"bytes32\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"bytes32\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"indirectId\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"icapTransfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AnonymousDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"indirectId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"IcapTransfer\",\"type\":\"event\"}]\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file db.js\n\t * @authors:\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar Method = __webpack_require__(69);\n\t\n\tvar DB = function (web3) {\n\t    this._requestManager = web3._requestManager;\n\t\n\t    var self = this;\n\t    \n\t    methods().forEach(function(method) { \n\t        method.attachToObject(self);\n\t        method.setRequestManager(web3._requestManager);\n\t    });\n\t};\n\t\n\tvar methods = function () {\n\t    var putString = new Method({\n\t        name: 'putString',\n\t        call: 'db_putString',\n\t        params: 3\n\t    });\n\t\n\t    var getString = new Method({\n\t        name: 'getString',\n\t        call: 'db_getString',\n\t        params: 2\n\t    });\n\t\n\t    var putHex = new Method({\n\t        name: 'putHex',\n\t        call: 'db_putHex',\n\t        params: 3\n\t    });\n\t\n\t    var getHex = new Method({\n\t        name: 'getHex',\n\t        call: 'db_getHex',\n\t        params: 2\n\t    });\n\t\n\t    return [\n\t        putString, getString, putHex, getHex\n\t    ];\n\t};\n\t\n\tmodule.exports = DB;\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file shh.js\n\t * @authors:\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar Method = __webpack_require__(69);\n\tvar formatters = __webpack_require__(68);\n\tvar Filter = __webpack_require__(86);\n\tvar watches = __webpack_require__(87);\n\t\n\tvar Shh = function (web3) {\n\t    this._requestManager = web3._requestManager;\n\t\n\t    var self = this;\n\t\n\t    methods().forEach(function(method) { \n\t        method.attachToObject(self);\n\t        method.setRequestManager(self._requestManager);\n\t    });\n\t};\n\t\n\tShh.prototype.filter = function (fil, callback) {\n\t    return new Filter(this._requestManager, fil, watches.shh(), formatters.outputPostFormatter, callback);\n\t};\n\t\n\tvar methods = function () { \n\t\n\t    var post = new Method({\n\t        name: 'post', \n\t        call: 'shh_post', \n\t        params: 1,\n\t        inputFormatter: [formatters.inputPostFormatter]\n\t    });\n\t\n\t    var newIdentity = new Method({\n\t        name: 'newIdentity',\n\t        call: 'shh_newIdentity',\n\t        params: 0\n\t    });\n\t\n\t    var hasIdentity = new Method({\n\t        name: 'hasIdentity',\n\t        call: 'shh_hasIdentity',\n\t        params: 1\n\t    });\n\t\n\t    var newGroup = new Method({\n\t        name: 'newGroup',\n\t        call: 'shh_newGroup',\n\t        params: 0\n\t    });\n\t\n\t    var addToGroup = new Method({\n\t        name: 'addToGroup',\n\t        call: 'shh_addToGroup',\n\t        params: 0\n\t    });\n\t\n\t    return [\n\t        post,\n\t        newIdentity,\n\t        hasIdentity,\n\t        newGroup,\n\t        addToGroup\n\t    ];\n\t};\n\t\n\tmodule.exports = Shh;\n\t\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file eth.js\n\t * @authors:\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar utils = __webpack_require__(25);\n\tvar Property = __webpack_require__(70);\n\t\n\tvar Net = function (web3) {\n\t    this._requestManager = web3._requestManager;\n\t\n\t    var self = this;\n\t\n\t    properties().forEach(function(p) { \n\t        p.attachToObject(self);\n\t        p.setRequestManager(web3._requestManager);\n\t    });\n\t};\n\t\n\t/// @returns an array of objects describing web3.eth api properties\n\tvar properties = function () {\n\t    return [\n\t        new Property({\n\t            name: 'listening',\n\t            getter: 'net_listening'\n\t        }),\n\t        new Property({\n\t            name: 'peerCount',\n\t            getter: 'net_peerCount',\n\t            outputFormatter: utils.toDecimal\n\t        })\n\t    ];\n\t};\n\t\n\tmodule.exports = Net;\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/**\n\t * @file eth.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @author Fabian Vogelsteller <fabian@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar Method = __webpack_require__(69);\n\tvar Property = __webpack_require__(70);\n\t\n\tfunction Personal(web3) {\n\t    this._requestManager = web3._requestManager;\n\t\n\t    var self = this;\n\t\n\t    methods().forEach(function(method) {\n\t        method.attachToObject(self);\n\t        method.setRequestManager(self._requestManager);\n\t    });\n\t\n\t    properties().forEach(function(p) {\n\t        p.attachToObject(self);\n\t        p.setRequestManager(self._requestManager);\n\t    });\n\t}\n\t\n\tvar methods = function () {\n\t    var newAccount = new Method({\n\t        name: 'newAccount',\n\t        call: 'personal_newAccount',\n\t        params: 1,\n\t        inputFormatter: [null]\n\t    });\n\t\n\t    var unlockAccount = new Method({\n\t        name: 'unlockAccount',\n\t        call: 'personal_unlockAccount',\n\t        params: 3,\n\t        inputFormatter: [null, null, null]\n\t    });\n\t\n\t    return [\n\t        newAccount,\n\t        unlockAccount\n\t    ];\n\t};\n\t\n\tvar properties = function () {\n\t    return [\n\t        new Property({\n\t            name: 'listAccounts',\n\t            getter: 'personal_listAccounts'\n\t        })\n\t    ];\n\t};\n\t\n\t\n\tmodule.exports = Personal;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports) {\n\n\t\n\t\n\tvar Settings = function () {\n\t    this.defaultBlock = 'latest';\n\t    this.defaultAccount = undefined;\n\t};\n\t\n\tmodule.exports = Settings;\n\t\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"version\":\"0.15.3\"}\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar formatters = __webpack_require__(68);\n\tvar utils = __webpack_require__(25);\n\tvar Method = __webpack_require__(69);\n\tvar Property = __webpack_require__(70);\n\t\n\t// TODO: refactor, so the input params are not altered.\n\t// it's necessary to make same 'extension' work with multiple providers\n\tvar extend = function (web3) {\n\t    /* jshint maxcomplexity:5 */\n\t    var ex = function (extension) {\n\t\n\t        var extendedObject;\n\t        if (extension.property) {\n\t            if (!web3[extension.property]) {\n\t                web3[extension.property] = {};\n\t            }\n\t            extendedObject = web3[extension.property];\n\t        } else {\n\t            extendedObject = web3;\n\t        }\n\t\n\t        if (extension.methods) {\n\t            extension.methods.forEach(function (method) {\n\t                method.attachToObject(extendedObject);\n\t                method.setRequestManager(web3._requestManager);\n\t            });\n\t        }\n\t\n\t        if (extension.properties) {\n\t            extension.properties.forEach(function (property) {\n\t                property.attachToObject(extendedObject);\n\t                property.setRequestManager(web3._requestManager);\n\t            });\n\t        }\n\t    };\n\t\n\t    ex.formatters = formatters; \n\t    ex.utils = utils;\n\t    ex.Method = Method;\n\t    ex.Property = Property;\n\t\n\t    return ex;\n\t};\n\t\n\t\n\t\n\tmodule.exports = extend;\n\t\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** \n\t * @file batch.js\n\t * @author Marek Kotewicz <marek@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\tvar Jsonrpc = __webpack_require__(24);\n\tvar errors = __webpack_require__(65);\n\t\n\tvar Batch = function (web3) {\n\t    this.requestManager = web3._requestManager;\n\t    this.requests = [];\n\t};\n\t\n\t/**\n\t * Should be called to add create new request to batch request\n\t *\n\t * @method add\n\t * @param {Object} jsonrpc requet object\n\t */\n\tBatch.prototype.add = function (request) {\n\t    this.requests.push(request);\n\t};\n\t\n\t/**\n\t * Should be called to execute batch request\n\t *\n\t * @method execute\n\t */\n\tBatch.prototype.execute = function () {\n\t    var requests = this.requests;\n\t    this.requestManager.sendBatch(requests, function (err, results) {\n\t        results = results || [];\n\t        requests.map(function (request, index) {\n\t            return results[index] || {};\n\t        }).forEach(function (result, index) {\n\t            if (requests[index].callback) {\n\t\n\t                if (!Jsonrpc.getInstance().isValidResponse(result)) {\n\t                    return requests[index].callback(errors.InvalidResponse(result));\n\t                }\n\t\n\t                requests[index].callback(null, (requests[index].format ? requests[index].format(result.result) : result.result));\n\t            }\n\t        });\n\t    }); \n\t};\n\t\n\tmodule.exports = Batch;\n\t\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file httpprovider.js\n\t * @authors:\n\t *   Marek Kotewicz <marek@ethdev.com>\n\t *   Marian Oancea <marian@ethdev.com>\n\t *   Fabian Vogelsteller <fabian@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar errors = __webpack_require__(65);\n\t\n\t// workaround to use httpprovider in different envs\n\tvar XMLHttpRequest; // jshint ignore: line\n\t\n\t// meteor server environment\n\tif (typeof Meteor !== 'undefined' && Meteor.isServer) { // jshint ignore: line\n\t    XMLHttpRequest = Npm.require('xmlhttprequest').XMLHttpRequest; // jshint ignore: line\n\t\n\t// browser\n\t} else if (typeof window !== 'undefined' && window.XMLHttpRequest) {\n\t    XMLHttpRequest = window.XMLHttpRequest; // jshint ignore: line\n\t\n\t// node\n\t} else {\n\t    XMLHttpRequest = __webpack_require__(105).XMLHttpRequest; // jshint ignore: line\n\t}\n\t\n\t/**\n\t * HttpProvider should be used to send rpc calls over http\n\t */\n\tvar HttpProvider = function (host) {\n\t    this.host = host || 'http://localhost:8545';\n\t};\n\t\n\t/**\n\t * Should be called to prepare new XMLHttpRequest\n\t *\n\t * @method prepareRequest\n\t * @param {Boolean} true if request should be async\n\t * @return {XMLHttpRequest} object\n\t */\n\tHttpProvider.prototype.prepareRequest = function (async) {\n\t    var request = new XMLHttpRequest();\n\t    request.open('POST', this.host, async);\n\t    request.setRequestHeader('Content-Type','application/json');\n\t    return request;\n\t};\n\t\n\t/**\n\t * Should be called to make sync request\n\t *\n\t * @method send\n\t * @param {Object} payload\n\t * @return {Object} result\n\t */\n\tHttpProvider.prototype.send = function (payload) {\n\t    var request = this.prepareRequest(false);\n\t\n\t    try {\n\t        request.send(JSON.stringify(payload));\n\t    } catch(error) {\n\t        throw errors.InvalidConnection(this.host);\n\t    }\n\t\n\t    var result = request.responseText;\n\t\n\t    try {\n\t        result = JSON.parse(result);\n\t    } catch(e) {\n\t        throw errors.InvalidResponse(request.responseText);                \n\t    }\n\t\n\t    return result;\n\t};\n\t\n\t/**\n\t * Should be used to make async request\n\t *\n\t * @method sendAsync\n\t * @param {Object} payload\n\t * @param {Function} callback triggered on end with (err, result)\n\t */\n\tHttpProvider.prototype.sendAsync = function (payload, callback) {\n\t    var request = this.prepareRequest(true); \n\t\n\t    request.onreadystatechange = function() {\n\t        if (request.readyState === 4) {\n\t            var result = request.responseText;\n\t            var error = null;\n\t\n\t            try {\n\t                result = JSON.parse(result);\n\t            } catch(e) {\n\t                error = errors.InvalidResponse(request.responseText);                \n\t            }\n\t\n\t            callback(error, result);\n\t        }\n\t    };\n\t    \n\t    try {\n\t        request.send(JSON.stringify(payload));\n\t    } catch(error) {\n\t        callback(errors.InvalidConnection(this.host));\n\t    }\n\t};\n\t\n\t/**\n\t * Synchronously tries to make Http request\n\t *\n\t * @method isConnected\n\t * @return {Boolean} returns true if request haven't failed. Otherwise false\n\t */\n\tHttpProvider.prototype.isConnected = function() {\n\t    try {\n\t        this.send({\n\t            id: 9999999999,\n\t            jsonrpc: '2.0',\n\t            method: 'net_listening',\n\t            params: []\n\t        });\n\t        return true;\n\t    } catch(e) {\n\t        return false;\n\t    }\n\t};\n\t\n\tmodule.exports = HttpProvider;\n\t\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// go env doesn't have and need XMLHttpRequest\n\tif (typeof XMLHttpRequest === 'undefined') {\n\t    exports.XMLHttpRequest = {};\n\t} else {\n\t    exports.XMLHttpRequest = XMLHttpRequest; // jshint ignore:line\n\t}\n\t\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*\n\t    This file is part of web3.js.\n\t\n\t    web3.js is free software: you can redistribute it and/or modify\n\t    it under the terms of the GNU Lesser General Public License as published by\n\t    the Free Software Foundation, either version 3 of the License, or\n\t    (at your option) any later version.\n\t\n\t    web3.js is distributed in the hope that it will be useful,\n\t    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\t    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\t    GNU Lesser General Public License for more details.\n\t\n\t    You should have received a copy of the GNU Lesser General Public License\n\t    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\t*/\n\t/** @file ipcprovider.js\n\t * @authors:\n\t *   Fabian Vogelsteller <fabian@ethdev.com>\n\t * @date 2015\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar utils = __webpack_require__(25);\n\tvar errors = __webpack_require__(65);\n\t\n\t\n\tvar IpcProvider = function (path, net) {\n\t    var _this = this;\n\t    this.responseCallbacks = {};\n\t    this.path = path;\n\t    \n\t    this.connection = net.connect({path: this.path});\n\t\n\t    this.connection.on('error', function(e){\n\t        console.error('IPC Connection Error', e);\n\t        _this._timeout();\n\t    });\n\t\n\t    this.connection.on('end', function(){\n\t        _this._timeout();\n\t    }); \n\t\n\t\n\t    // LISTEN FOR CONNECTION RESPONSES\n\t    this.connection.on('data', function(data) {\n\t        /*jshint maxcomplexity: 6 */\n\t\n\t        _this._parseResponse(data.toString()).forEach(function(result){\n\t\n\t            var id = null;\n\t\n\t            // get the id which matches the returned id\n\t            if(utils.isArray(result)) {\n\t                result.forEach(function(load){\n\t                    if(_this.responseCallbacks[load.id])\n\t                        id = load.id;\n\t                });\n\t            } else {\n\t                id = result.id;\n\t            }\n\t\n\t            // fire the callback\n\t            if(_this.responseCallbacks[id]) {\n\t                _this.responseCallbacks[id](null, result);\n\t                delete _this.responseCallbacks[id];\n\t            }\n\t        });\n\t    });\n\t};\n\t\n\t/**\n\tWill parse the response and make an array out of it.\n\t\n\t@method _parseResponse\n\t@param {String} data\n\t*/\n\tIpcProvider.prototype._parseResponse = function(data) {\n\t    var _this = this,\n\t        returnValues = [];\n\t    \n\t    // DE-CHUNKER\n\t    var dechunkedData = data\n\t        .replace(/\\}[\\n\\r]?\\{/g,'}|--|{') // }{\n\t        .replace(/\\}\\][\\n\\r]?\\[\\{/g,'}]|--|[{') // }][{\n\t        .replace(/\\}[\\n\\r]?\\[\\{/g,'}|--|[{') // }[{\n\t        .replace(/\\}\\][\\n\\r]?\\{/g,'}]|--|{') // }]{\n\t        .split('|--|');\n\t\n\t    dechunkedData.forEach(function(data){\n\t\n\t        // prepend the last chunk\n\t        if(_this.lastChunk)\n\t            data = _this.lastChunk + data;\n\t\n\t        var result = null;\n\t\n\t        try {\n\t            result = JSON.parse(data);\n\t\n\t        } catch(e) {\n\t\n\t            _this.lastChunk = data;\n\t\n\t            // start timeout to cancel all requests\n\t            clearTimeout(_this.lastChunkTimeout);\n\t            _this.lastChunkTimeout = setTimeout(function(){\n\t                _this._timeout();\n\t                throw errors.InvalidResponse(data);\n\t            }, 1000 * 15);\n\t\n\t            return;\n\t        }\n\t\n\t        // cancel timeout and set chunk to null\n\t        clearTimeout(_this.lastChunkTimeout);\n\t        _this.lastChunk = null;\n\t\n\t        if(result)\n\t            returnValues.push(result);\n\t    });\n\t\n\t    return returnValues;\n\t};\n\t\n\t\n\t/**\n\tGet the adds a callback to the responseCallbacks object,\n\twhich will be called if a response matching the response Id will arrive.\n\t\n\t@method _addResponseCallback\n\t*/\n\tIpcProvider.prototype._addResponseCallback = function(payload, callback) {\n\t    var id = payload.id || payload[0].id;\n\t    var method = payload.method || payload[0].method;\n\t\n\t    this.responseCallbacks[id] = callback;\n\t    this.responseCallbacks[id].method = method;\n\t};\n\t\n\t/**\n\tTimeout all requests when the end/error event is fired\n\t\n\t@method _timeout\n\t*/\n\tIpcProvider.prototype._timeout = function() {\n\t    for(var key in this.responseCallbacks) {\n\t        if(this.responseCallbacks.hasOwnProperty(key)){\n\t            this.responseCallbacks[key](errors.InvalidConnection('on IPC'));\n\t            delete this.responseCallbacks[key];\n\t        }\n\t    }\n\t};\n\t\n\t\n\t/**\n\tCheck if the current connection is still valid.\n\t\n\t@method isConnected\n\t*/\n\tIpcProvider.prototype.isConnected = function() {\n\t    var _this = this;\n\t\n\t    // try reconnect, when connection is gone\n\t    if(!_this.connection.writable)\n\t        _this.connection.connect({path: _this.path});\n\t\n\t    return !!this.connection.writable;\n\t};\n\t\n\tIpcProvider.prototype.send = function (payload) {\n\t\n\t    if(this.connection.writeSync) {\n\t        var result;\n\t\n\t        // try reconnect, when connection is gone\n\t        if(!this.connection.writable)\n\t            this.connection.connect({path: this.path});\n\t\n\t        var data = this.connection.writeSync(JSON.stringify(payload));\n\t\n\t        try {\n\t            result = JSON.parse(data);\n\t        } catch(e) {\n\t            throw errors.InvalidResponse(data);                \n\t        }\n\t\n\t        return result;\n\t\n\t    } else {\n\t        throw new Error('You tried to send \"'+ payload.method +'\" synchronously. Synchronous requests are not supported by the IPC provider.');\n\t    }\n\t};\n\t\n\tIpcProvider.prototype.sendAsync = function (payload, callback) {\n\t    // try reconnect, when connection is gone\n\t    if(!this.connection.writable)\n\t        this.connection.connect({path: this.path});\n\t\n\t\n\t    this.connection.write(JSON.stringify(payload));\n\t    this._addResponseCallback(payload, callback);\n\t};\n\t\n\tmodule.exports = IpcProvider;\n\t\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/* global angular, mist */\n\tangular.module('dappChess').config(function ($routeProvider, $provide) {\n\t  var pages = {\n\t    welcomePage: 'welcome',\n\t    initializeGamePage: 'initializeGame',\n\t    joinGamePage: 'joinGame',\n\t    playGamePage: 'playGame'\n\t  };\n\t\n\t  $provide.factory('navigation', function ($route) {\n\t    var navigation = pages;\n\t\n\t    navigation.isActivePage = function (page) {\n\t      if (typeof $route.current !== 'undefined') {\n\t        return page === $route.current.activePage;\n\t      }\n\t    };\n\t\n\t    navigation.isActiveGame = function (game) {\n\t      if (typeof $route.current !== 'undefined' && typeof $route.current.params.id !== 'undefined') {\n\t        return $route.current.activePage === navigation.playGamePage && game.gameId === $route.current.params.id;\n\t      }\n\t    };\n\t\n\t    navigation.goto = function (page, parameter) {\n\t      if (parameter) {\n\t        window.location = '#/' + page + '/' + parameter;\n\t      } else {\n\t        window.location = '#/' + page;\n\t      }\n\t    };\n\t\n\t    return navigation;\n\t  });\n\t\n\t  $routeProvider.when('/' + pages.welcomePage, {\n\t    templateUrl: pages.welcomePage + '.html',\n\t    controller: 'WelcomeCtrl',\n\t    activePage: pages.welcomePage\n\t  }).when('/' + pages.initializeGamePage, {\n\t    templateUrl: pages.initializeGamePage + '.html',\n\t    controller: 'InitializeGameCtrl',\n\t    activePage: pages.initializeGamePage\n\t  }).when('/' + pages.joinGamePage, {\n\t    templateUrl: pages.joinGamePage + '.html',\n\t    controller: 'JoinGameCtrl',\n\t    activePage: pages.joinGamePage\n\t  }).when('/' + pages.playGamePage + '/:id', {\n\t    templateUrl: pages.playGamePage + '.html',\n\t    controller: 'PlayGameCtrl',\n\t    activePage: pages.playGamePage\n\t  }).otherwise({ redirectTo: '/' + pages.welcomePage });\n\t}).controller('NavigationCtrl', function (accounts, navigation, games, $scope) {\n\t  $scope.games = games.list;\n\t\n\t  $scope.navigation = navigation;\n\t\n\t  $scope.isMist = false;\n\t\n\t  console.log(typeof mist === 'undefined' ? 'No mist browser' : 'Mist browser');\n\t  console.log(games);\n\t  if (typeof mist !== 'undefined') {\n\t    $scope.isMist = true;\n\t\n\t    console.log('Clearing mist menu');\n\t    mist.menu.clear();\n\t\n\t    mist.menu.add('welcome', {\n\t      name: 'Welcome',\n\t      position: 1,\n\t      selected: navigation.isActivePage(navigation.welcomePage)\n\t    }, function () {\n\t      navigation.goto(navigation.welcomePage);\n\t    });\n\t    mist.menu.add('initializeGame', {\n\t      name: 'New game',\n\t      position: 2,\n\t      selected: navigation.isActivePage(navigation.initializeGamePage)\n\t    }, function () {\n\t      navigation.goto(navigation.initializeGamePage);\n\t    });\n\t    mist.menu.add('joinGame', {\n\t      name: 'Join game',\n\t      position: 3,\n\t      selected: navigation.isActivePage(navigation.joinGamePage)\n\t    }, function () {\n\t      navigation.goto(navigation.joinGamePage);\n\t    });\n\t\n\t    $scope.$watch('games', function (newGames, oldGames) {\n\t      console.log('games changed');\n\t\n\t      var oldGameIds = [];\n\t\n\t      for (var i in oldGames) {\n\t        oldGameIds.push(oldGames[i].gameId);\n\t      }\n\t\n\t      var _loop = function _loop(_i) {\n\t        if (accounts.availableAccounts.indexOf(newGames[_i].self.accountId) !== -1 || typeof newGames[_i].opponent !== 'undefined' && accounts.availableAccounts.indexOf(newGames[_i].opponent.accountId) !== -1) {\n\t\n\t          var oldGameIndex = oldGameIds.indexOf(newGames[_i].gameId);\n\t\n\t          if (oldGameIndex !== -1) {\n\t            oldGameIds.splice(oldGameIndex, 1);\n\t          }\n\t\n\t          var menuName = typeof newGames[_i].opponent !== 'undefined' ? newGames[_i].opponent.username : 'Open game';\n\t\n\t          console.log('Adding menu entry for game with id ' + newGames[_i].gameId + ' (' + menuName + ')');\n\t          // Since mist menu callbacks don't provide the clicked element, we need to\n\t          // create the callbacks in a loop; thus the JSHint error has to be suppressed\n\t          /*jshint -W083 */\n\t          mist.menu.update(newGames[_i].gameId, {\n\t            name: menuName,\n\t            position: _i + 3,\n\t            selected: navigation.isActiveGame(newGames[_i])\n\t          }, function () {\n\t            navigation.goto(navigation.playGamePage, newGames[_i].gameId);\n\t          });\n\t          /*jshint +W083 */\n\t        }\n\t      };\n\t\n\t      for (var _i in newGames) {\n\t        _loop(_i);\n\t      }\n\t\n\t      for (var _i2 in oldGameIds) {\n\t        console.log('Removing menu entry for game with id ' + oldGameIds[_i2]);\n\t        mist.menu.remove(oldGameIds[_i2]);\n\t      }\n\t    }, true);\n\t  }\n\t});\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /* global angular */\n\t\n\t\n\tvar _Chess = __webpack_require__(20);\n\t\n\tangular.module('dappChess').factory('gameStates', function () {\n\t  var gameStates = {\n\t    selfMoves: {},\n\t    opponentMoves: {},\n\t    lastMoveNumber: {},\n\t    lastMoveTime: {}\n\t  };\n\t\n\t  gameStates.getMoveNumberFromState = function (state) {\n\t    return state[8] * 128 + state[9];\n\t  };\n\t\n\t  gameStates.initializeGame = function (gameId) {\n\t    if (typeof gameStates.selfMoves[gameId] === 'undefined') {\n\t      gameStates.selfMoves[gameId] = [];\n\t    }\n\t    if (typeof gameStates.opponentMoves[gameId] === 'undefined') {\n\t      gameStates.opponentMoves[gameId] = [];\n\t    }\n\t    if (typeof gameStates.lastMoveNumber[gameId] === 'undefined') {\n\t      gameStates.lastMoveNumber[gameId] = 0;\n\t    }\n\t    if (typeof gameStates.lastMoveTime[gameId] === 'undefined') {\n\t      gameStates.lastMoveTime[gameId] = 0;\n\t    }\n\t  };\n\t\n\t  gameStates.addSelfMove = function (gameId, moveFrom, moveTo, newState) {\n\t\n\t    gameStates.initializeGame(gameId);\n\t\n\t    var moveNumber = gameStates.getMoveNumberFromState(newState);\n\t\n\t    // If we already stored this move, don't do anything\n\t    if (gameStates.lastMoveNumber[gameId] === moveNumber) {\n\t      return;\n\t    }\n\t    if (gameStates.lastMoveNumber[gameId] > moveNumber) {\n\t      throw 'Invalid move: The last store move number is higher';\n\t    }\n\t\n\t    gameStates.selfMoves[gameId].push({\n\t      moveFrom: moveFrom,\n\t      moveTo: moveTo,\n\t      newState: newState\n\t    });\n\t    gameStates.lastMoveNumber[gameId] = moveNumber;\n\t    gameStates.lastMoveTime[gameId] = new Date().getTime();\n\t\n\t    gameStates.updateLocalStorage();\n\t  };\n\t  gameStates.addOpponentMove = function (gameId, moveFrom, moveTo, moveSignature, newState, newStateSignature) {\n\t    gameStates.initializeGame(gameId);\n\t\n\t    var moveNumber = gameStates.getMoveNumberFromState(newState);\n\t\n\t    // If we already stored this move, don't do anything\n\t    if (gameStates.lastMoveNumber[gameId] === moveNumber) {\n\t      return;\n\t    }\n\t    if (gameStates.lastMoveNumber[gameId] > moveNumber) {\n\t      throw 'Invalid move: The last store move number is higher';\n\t    }\n\t\n\t    gameStates.opponentMoves[gameId].push({\n\t      moveFrom: moveFrom,\n\t      moveTo: moveTo,\n\t      moveSignature: moveSignature,\n\t      newState: newState,\n\t      newStateSignature: newStateSignature\n\t    });\n\t    gameStates.lastMoveNumber[gameId] = moveNumber;\n\t    gameStates.lastMoveTime[gameId] = new Date().getTime();\n\t\n\t    gameStates.updateLocalStorage();\n\t  };\n\t\n\t  /**\n\t   * Delete a game from the local storage\n\t   * @param gameId\n\t     */\n\t  gameStates.delete = function (gameId) {\n\t    delete gameStates.selfMoves[gameId];\n\t    delete gameStates.opponentMoves[gameId];\n\t    delete gameStates.lastMoveNumber[gameId];\n\t    delete gameStates.lastMoveTime[gameId];\n\t\n\t    gameStates.updateLocalStorage();\n\t  };\n\t\n\t  gameStates.getSelfMoves = function (gameId) {\n\t    if (typeof gameStates.selfMoves[gameId] === 'undefined') {\n\t      return [];\n\t    }\n\t\n\t    return gameStates.selfMoves[gameId];\n\t  };\n\t  gameStates.getLastSelfMove = function (gameId) {\n\t    if (typeof gameStates.selfMoves[gameId] === 'undefined' || gameStates.selfMoves[gameId].length === 0) {\n\t      throw 'This game has no self moves yet';\n\t    }\n\t\n\t    return gameStates.selfMoves[gameId][gameStates.selfMoves[gameId].length - 1];\n\t  };\n\t  gameStates.getSelfMove = function (gameId, moveNumber) {\n\t    if (typeof gameStates.selfMoves[gameId] === 'undefined') {\n\t      throw 'This game has no moves yet';\n\t    }\n\t    if (gameStates.selfMoves[gameId].length === 0) {\n\t      throw 'This game has no self moves yet';\n\t    }\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t      for (var _iterator = gameStates.selfMoves[gameId][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var currentMove = _step.value;\n\t\n\t        var currentMoveNumber = gameStates.getMoveNumberFromState(currentMove.newState);\n\t\n\t        if (currentMoveNumber === moveNumber) {\n\t          return currentMove;\n\t        }\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t\n\t    throw 'Could not find moveNumber ' + moveNumber + ' for the game ' + gameId;\n\t  };\n\t\n\t  gameStates.getPreviousOpponentMove = function (gameId) {\n\t    if (typeof gameStates.opponentMoves[gameId] === 'undefined') {\n\t      throw 'This game has no moves yet';\n\t    }\n\t    if (gameStates.opponentMoves[gameId].length === 0) {\n\t      throw 'This game has no opponent moves yet';\n\t    }\n\t    if (gameStates.opponentMoves[gameId].length < 2) {\n\t      throw 'This game has no previous opponent move';\n\t    }\n\t\n\t    return gameStates.opponentMoves[gameId][gameStates.opponentMoves[gameId].length - 2];\n\t  };\n\t  gameStates.getLastOpponentMove = function (gameId) {\n\t    if (typeof gameStates.opponentMoves[gameId] === 'undefined') {\n\t      throw 'This game has no moves yet';\n\t    }\n\t    if (gameStates.opponentMoves[gameId].length === 0) {\n\t      throw 'This game has no opponent moves yet';\n\t    }\n\t\n\t    return gameStates.opponentMoves[gameId][gameStates.opponentMoves[gameId].length - 1];\n\t  };\n\t\n\t  /**\n\t   *\n\t   * @param gameId\n\t   * @return boolean\n\t     */\n\t  gameStates.isBlockchainStateNewer = function (gameId) {\n\t    var blockchainState = _Chess.Chess.getCurrentGameState(gameId);\n\t\n\t    if (blockchainState) {\n\t      if (typeof gameStates.lastMoveNumber[gameId] === 'undefined') {\n\t        // No state in the local states, so return true\n\t        return true;\n\t      }\n\t\n\t      var blockchainMoveNumber = gameStates.getMoveNumberFromState(blockchainState);\n\t\n\t      return blockchainMoveNumber > gameStates.lastMoveNumber[gameId];\n\t    }\n\t    // No state in the blockchain, so return false\n\t    return false;\n\t  };\n\t\n\t  /**\n\t   * Get an array with all parameters needed to send them to the blockchain.\n\t   * @param gameId\n\t   * @return [opponentState, opponentStateSignature, moveSelfFrom, moveSelfTo]\n\t     */\n\t  gameStates.getLastMovePackage = function (gameId) {\n\t    if (typeof gameStates.selfMoves[gameId] === 'undefined') {\n\t      throw 'This game has no moves yet';\n\t    }\n\t    if (gameStates.selfMoves[gameId].length === 0) {\n\t      throw 'This game has no self moves yet';\n\t    }\n\t\n\t    var lastSelfMove = gameStates.getLastSelfMove(gameId);\n\t    var lastSelfMoveNumber = gameStates.getMoveNumberFromState(lastSelfMove.newState);\n\t\n\t    // There was only one move, and it was the self move\n\t    // => we do not have a state for this\n\t    if (gameStates.lastMoveNumber[gameId] === 1) {\n\t      throw 'No move package found for last self move.';\n\t    }\n\t\n\t    var opponentMove = gameStates.getLastOpponentMove(gameId);\n\t    var opponentMoveNumber = gameStates.getMoveNumberFromState(opponentMove.newState);\n\t\n\t    // We have to fetch the opponent move that was the last move before our own move\n\t    // If the opponents move was the last move, we need to check for the previous\n\t    // move that *should* be the move before our last move\n\t    if (opponentMoveNumber + 1 !== lastSelfMoveNumber) {\n\t      // Fetch the previous opponents move\n\t      opponentMove = gameStates.getPreviousOpponentMove(gameId);\n\t      opponentMoveNumber = gameStates.getMoveNumberFromState(opponentMove.newState);\n\t\n\t      // If this is not the move previous to our move, there was an error\n\t      // Thus: *Something* has to fetch the last move from the blockchain\n\t      if (opponentMoveNumber + 1 !== lastSelfMoveNumber) {\n\t        throw 'No move package found for last self move.';\n\t      }\n\t    }\n\t\n\t    return [opponentMove.newState, opponentMove.newStateSignature, lastSelfMove.moveFrom, lastSelfMove.moveTo];\n\t  };\n\t\n\t  /**\n\t   * Get last state from local storage\n\t   * @param gameId\n\t   * @returns state | false if not in local storage\n\t     */\n\t  gameStates.getLastLocalState = function (game) {\n\t    if (typeof gameStates.lastMoveNumber[game.gameId] === 'undefined') {\n\t      return false;\n\t    }\n\t\n\t    if (gameStates.selfMoves[game.gameId].length > 0) {\n\t      var lastSelfMove = gameStates.getLastSelfMove(game.gameId);\n\t      var lastSelfMoveNumber = gameStates.getMoveNumberFromState(lastSelfMove.newState);\n\t\n\t      if (lastSelfMoveNumber === gameStates.lastMoveNumber[game.gameId]) {\n\t        return lastSelfMove.newState;\n\t      }\n\t    }\n\t\n\t    if (gameStates.opponentMoves[game.gameId].length > 0) {\n\t      var lastOpponentMove = gameStates.getLastOpponentMove(game.gameId);\n\t      var lastOpponentMoveNumber = gameStates.getMoveNumberFromState(lastOpponentMove.newState);\n\t\n\t      if (lastOpponentMoveNumber === gameStates.lastMoveNumber[game.gameId]) {\n\t        return lastOpponentMove.newState;\n\t      }\n\t    }\n\t\n\t    throw 'Could not find last move in self or opponent moves';\n\t  };\n\t\n\t  gameStates.getLastBlockchainState = function (game) {\n\t    var blockchainGameState = _Chess.Chess.getCurrentGameState(game.gameId, { from: game.self.accountId,\n\t      gas: 10000000 });\n\t\n\t    blockchainGameState = blockchainGameState.map(function (element) {\n\t      if ((typeof element === 'undefined' ? 'undefined' : _typeof(element)) === 'object' && typeof element.toNumber === 'function') {\n\t        return element.toNumber();\n\t      }\n\t\n\t      return element;\n\t    });\n\t\n\t    return blockchainGameState;\n\t  };\n\t\n\t  gameStates.getLastMoveTime = function (game) {\n\t    return gameStates.lastMoveTime[game.gameId];\n\t  };\n\t\n\t  gameStates.getLastMoveNumber = function (game) {\n\t    return gameStates.lastMoveNumber[game.gameId];\n\t  };\n\t\n\t  gameStates.updateLocalStorage = function () {\n\t    window.localStorage.setItem('gameStates.selfMoves', angular.toJson(gameStates.selfMoves));\n\t    window.localStorage.setItem('gameStates.opponentMoves', angular.toJson(gameStates.opponentMoves));\n\t    window.localStorage.setItem('gameStates.lastMoveNumber', angular.toJson(gameStates.lastMoveNumber));\n\t    window.localStorage.setItem('gameStates.lastMoveTime', angular.toJson(gameStates.lastMoveTime));\n\t  };\n\t  gameStates.fetchFromLocalStorage = function () {\n\t    if (typeof window.localStorage['gameStates.selfMoves'] !== 'undefined') {\n\t      try {\n\t        var movesInLocalStorage = JSON.parse(window.localStorage['gameStates.selfMoves']);\n\t        if ((typeof movesInLocalStorage === 'undefined' ? 'undefined' : _typeof(movesInLocalStorage)) === 'object') {\n\t          gameStates.selfMoves = movesInLocalStorage;\n\t        } else {\n\t          throw 'Invalid data format of selfMoves';\n\t        }\n\t      } catch (e) {\n\t        console.log('Could not parse selfMoves from local storage', e);\n\t      }\n\t    }\n\t    if (typeof window.localStorage['gameStates.opponentMoves'] !== 'undefined') {\n\t      try {\n\t        var _movesInLocalStorage = JSON.parse(window.localStorage['gameStates.opponentMoves']);\n\t        if ((typeof _movesInLocalStorage === 'undefined' ? 'undefined' : _typeof(_movesInLocalStorage)) === 'object') {\n\t          gameStates.opponentMoves = _movesInLocalStorage;\n\t        } else {\n\t          throw 'Invalid data format of opponentMoves';\n\t        }\n\t      } catch (e) {\n\t        console.log('Could not parse opponentMoves from local storage', e);\n\t      }\n\t    }\n\t    if (typeof window.localStorage['gameStates.lastMoveNumber'] !== 'undefined') {\n\t      try {\n\t        var lastMoveNumber = JSON.parse(window.localStorage['gameStates.lastMoveNumber']);\n\t        if ((typeof lastMoveNumber === 'undefined' ? 'undefined' : _typeof(lastMoveNumber)) === 'object') {\n\t          gameStates.lastMoveNumber = lastMoveNumber;\n\t        } else {\n\t          throw 'Invalid data format of lastMoveNumber';\n\t        }\n\t      } catch (e) {\n\t        console.log('Could not parse lastMoveNumber from local storage', e);\n\t      }\n\t    }\n\t    if (typeof window.localStorage['gameStates.lastMoveTime'] !== 'undefined') {\n\t      try {\n\t        var lastMoveTime = JSON.parse(window.localStorage['gameStates.lastMoveTime']);\n\t        if ((typeof lastMoveTime === 'undefined' ? 'undefined' : _typeof(lastMoveTime)) === 'object') {\n\t          gameStates.lastMoveTime = lastMoveTime;\n\t        } else {\n\t          throw 'Invalid data format of lastMoveTime';\n\t        }\n\t      } catch (e) {\n\t        console.log('Could not parse lastMoveTime from local storage', e);\n\t      }\n\t    }\n\t  };\n\t\n\t  gameStates.fetchFromLocalStorage();\n\t\n\t  return gameStates;\n\t});\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }(); /* global angular */\n\t\n\t\n\tvar _Chess = __webpack_require__(20);\n\t\n\tvar _fenConversion = __webpack_require__(110);\n\t\n\tvar _config = __webpack_require__(111);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ChessJS = __webpack_require__(112);\n\tvar shhFactory = __webpack_require__(113);\n\t\n\tvar proxyUri = _config2.default.proxyUri;\n\tvar shhTopic = _config2.default.appId;\n\tvar TIMEOUT_ACK = _config2.default.timeouts.ack;\n\t\n\tangular.module('dappChess').factory('games', function (crypto, navigation, gameStates, accounts, $rootScope, $route) {\n\t  // Only needed for fake Whisper proxy\n\t  var shh = shhFactory(proxyUri, function (shh) {\n\t    // Register all my accounts with proxy\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t      for (var _iterator = accounts.availableAccounts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var account = _step.value;\n\t\n\t        shh.register(account);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  });\n\t\n\t  var games = {\n\t    list: [],\n\t    openGames: [],\n\t    viewingGame: { id: 0 }\n\t  };\n\t\n\t  games.getGame = function (id) {\n\t    return games.list.find(function (game) {\n\t      return game.gameId === id;\n\t    });\n\t  };\n\t\n\t  games.removeGame = function (gameId) {\n\t    for (var i in games.list) {\n\t      if (games.list[i].gameId === gameId) {\n\t        console.log('game removed', games.list.splice(i, 1));\n\t        break;\n\t      }\n\t    }\n\t\n\t    gameStates.delete(gameId);\n\t  };\n\t\n\t  /**\n\t   * Convert an array to a game object as seen in the contract with the given gameId.\n\t   * @param gameId of the game\n\t   * @param array containing the data\n\t   * @returns object as seen in the contract (contractGameObject)\n\t   */\n\t  games.parseContractGameArray = function (gameId, array) {\n\t    var playerWhite = _Chess.Chess.getWhitePlayer(gameId);\n\t    return {\n\t      gameId: gameId,\n\t      player1: array[0],\n\t      player2: array[1],\n\t      player1Alias: array[2],\n\t      player2Alias: array[3],\n\t      nextPlayer: array[4],\n\t      winner: array[5],\n\t      ended: array[6],\n\t      pot: array[7],\n\t      player1WonEther: array[8],\n\t      player2WonEther: array[9],\n\t      turnTime: array[10],\n\t      timeoutStarted: array[11],\n\t      timeoutState: array[12],\n\t      playerWhite: playerWhite\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Convert a game array to a game for the games list\n\t   * Structure of the game:\n\t   *  gameId: <string>,\n\t   *  {\n\t   *    self: {\n\t   *      username: <string>,\n\t   *      accountId: <string>,\n\t   *      color: <string>,\n\t   *      wonEther: <int>\n\t   *    },\n\t   *    opponent: {\n\t   *      username: <string>,\n\t   *      accountId: <string>,\n\t   *      color: <string>,\n\t   *      wonEther: <int>\n\t   *    }\n\t   *  },\n\t   *  ended: <boolean>,\n\t   *  pot: <number>,\n\t   *  turnTime: <number>,\n\t   *  timeoutStarted: <date>,\n\t   *  timeoutState: <{-2,-1,0,1,2}>\n\t   * @param contractGameObject\n\t   * @returns game\n\t     */\n\t  games.convertGameToObject = function (contractGameObject) {\n\t    var game = {\n\t      gameId: contractGameObject.gameId,\n\t      nextPlayer: contractGameObject.nextPlayer,\n\t      turnTime: contractGameObject.turnTime.toNumber(),\n\t      ended: contractGameObject.ended,\n\t      pot: _Chess.web3.fromWei(contractGameObject.pot, 'ether').toDigits().toString()\n\t    };\n\t\n\t    if (typeof contractGameObject.timeoutState !== 'undefined') {\n\t      game.timeoutState = contractGameObject.timeoutState.toNumber();\n\t      game.timeoutStarted = contractGameObject.timeoutStarted.toNumber() || 0;\n\t    } else {\n\t      game.timeoutState = 0;\n\t      game.timeoutStarted = 0;\n\t    }\n\t\n\t    if (accounts.availableAccounts.indexOf(contractGameObject.player2) !== -1) {\n\t      game.self = {\n\t        username: contractGameObject.player2Alias,\n\t        accountId: contractGameObject.player2,\n\t        color: contractGameObject.playerWhite === contractGameObject.player2 ? 'white' : 'black',\n\t        wonEther: contractGameObject.player2WonEther ? _Chess.web3.fromWei(contractGameObject.player2WonEther, 'ether').toDigits().toString() : 0\n\t      };\n\t      game.opponent = {\n\t        username: contractGameObject.player1Alias,\n\t        accountId: contractGameObject.player1,\n\t        color: contractGameObject.playerWhite === contractGameObject.player1 ? 'white' : 'black',\n\t        wonEther: contractGameObject.player1WonEther ? _Chess.web3.fromWei(contractGameObject.player1WonEther, 'ether').toDigits().toString() : 0\n\t      };\n\t    } else {\n\t      game.self = {\n\t        username: contractGameObject.player1Alias,\n\t        accountId: contractGameObject.player1,\n\t        color: contractGameObject.playerWhite === contractGameObject.player1 ? 'white' : 'black',\n\t        wonEther: contractGameObject.player1WonEther ? _Chess.web3.fromWei(contractGameObject.player1WonEther, 'ether').toDigits().toString() : 0\n\t      };\n\t      if (typeof contractGameObject.player2 !== 'undefined' && contractGameObject.player2 !== '0x0000000000000000000000000000000000000000') {\n\t        game.opponent = {\n\t          username: contractGameObject.player2Alias,\n\t          accountId: contractGameObject.player2,\n\t          color: contractGameObject.playerWhite === contractGameObject.player2 ? 'white' : 'black',\n\t          wonEther: contractGameObject.player2WonEther ? _Chess.web3.fromWei(contractGameObject.player2WonEther, 'ether').toDigits().toString() : 0\n\t        };\n\t      }\n\t    }\n\t    if (typeof contractGameObject.winner !== 'undefined' && contractGameObject.winner !== '0x0000000000000000000000000000000000000000') {\n\t      if (game.self.accountId === contractGameObject.winner) {\n\t        game.winner = 'self';\n\t      } else if (game.opponent.accountId === contractGameObject.winner) {\n\t        game.winner = 'opponent';\n\t      }\n\t    }\n\t\n\t    return game;\n\t  };\n\t\n\t  /**\n\t   * Add a game to the list, if there is no game with the same id.\n\t   * @param game A game in the format required for the game list\n\t   */\n\t  games.add = function (game) {\n\t    console.log('game add called', game);\n\t\n\t    for (var i in games.list) {\n\t      if (games.list[i].gameId === game.gameId) {\n\t        console.log('game with id ' + game.gameId + ' already exists');\n\t        return;\n\t      }\n\t    }\n\t    games.list.push(game);\n\t\n\t    // Initialize chess object\n\t    game.chess = new ChessJS();\n\t\n\t    if (gameStates.isBlockchainStateNewer(game.gameId)) {\n\t      game.state = gameStates.getLastBlockchainState(game);\n\t    } else {\n\t      game.state = gameStates.getLastLocalState(game);\n\t    }\n\t\n\t    game.chess.load((0, _fenConversion.generateFen)(game.state));\n\t    if (game.self.color[0] === game.chess.turn()) {\n\t      game.nextPlayer = game.self.accountId;\n\t    } else {\n\t      game.nextPlayer = game.opponent.accountId;\n\t    }\n\t\n\t    var lastMoveTime = void 0;\n\t    try {\n\t      // Try to find out time of last move\n\t      lastMoveTime = gameStates.getLastMoveTime(game);\n\t      if (!lastMoveTime) {\n\t        // get it from blockchain?\n\t      }\n\t    } catch (e) {}\n\t    if (lastMoveTime) {\n\t      game.currentTimeout = new Date(lastMoveTime + game.turnTime * 60 * 1000);\n\t    }\n\t\n\t    // Add events for this game\n\t    games.listenForMoves(game, function (m) {\n\t      var _m$payload = _slicedToArray(m.payload, 6),\n\t          state = _m$payload[1],\n\t          stateSignature = _m$payload[2],\n\t          fromIndex = _m$payload[3],\n\t          toIndex = _m$payload[4],\n\t          moveSignature = _m$payload[5];\n\t\n\t      // Apply move\n\t\n\t\n\t      var opponentChessMove = game.chess.move({\n\t        from: fromIndex,\n\t        to: toIndex,\n\t        promotion: 'q'\n\t      });\n\t\n\t      if (opponentChessMove !== null) {\n\t        game.state = state;\n\t        game.nextPlayer = game.self.accountId;\n\t        game.lastMove = opponentChessMove;\n\t        games.sendAck(game);\n\t        var toBackend = (0, _fenConversion.generateMapping)().toBackend;\n\t        gameStates.addOpponentMove(game.gameId, toBackend[fromIndex], toBackend[toIndex], moveSignature, state, stateSignature);\n\t\n\t        if (game.gameId !== games.viewingGame.id) {\n\t          // Player is currently in another game\n\t          $rootScope.$broadcast('message', game.opponent.username + ' made a move!', 'message', 'playgame');\n\t        }\n\t        $rootScope.$apply();\n\t      } else {\n\t        console.log('Move is not valid, send last state and move to blockchain');\n\t        try {\n\t          games.sendLastStateOrMoveToBlockchain(game);\n\t          // TODO call Chess.claimTimeout ?\n\t        } catch (e) {\n\t          // TODO inform user?\n\t          console.log('Sending state + move to blockchain failed:', e);\n\t        }\n\t      }\n\t    });\n\t\n\t    console.log('added game with id ' + game.gameId);\n\t  };\n\t\n\t  /**\n\t   * Add a game to the list, if there is no game with the same id;\n\t   * otherwise update it\n\t   * @param game A game in the format required for the game list\n\t   */\n\t  games.update = function (game) {\n\t    var g = games.getGame(game.gameId);\n\t    if (typeof g !== 'undefined') {\n\t      jQuery.extend(g, game);\n\t      // update game view to new state\n\t      g.chess.load((0, _fenConversion.generateFen)(g.state));\n\t      if (g.self.color[0] === g.chess.turn()) {\n\t        g.nextPlayer = g.self.accountId;\n\t      } else {\n\t        g.nextPlayer = g.opponent.accountId;\n\t      }\n\t      // TODO update move timer, listeners, ...?\n\t    } else {\n\t      games.add(game);\n\t    }\n\t  };\n\t\n\t  games.showWinner = function (game) {\n\t    console.log('show winner', game);\n\t    // Only do this if we are part of this game\n\t    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t      // Perform actions if game is won\n\t      if (game.winner === 'self') {\n\t        $rootScope.$broadcast('message', 'You have won the game against ' + game.opponent.username, 'message', 'playgame');\n\t      }\n\t      // Perform action if the winner was the opponent\n\t      else if (game.winner === 'opponent') {\n\t          $rootScope.$broadcast('message', 'You have lost the game against ' + game.opponent.username, 'message', 'playgame');\n\t        } else {\n\t          $rootScope.$broadcast('message', 'Your game against ' + game.opponent.username + ' ended in a draw', 'message', 'playgame');\n\t        }\n\t    } else {\n\t      console.log(game.self.accountId + ' not in account ids', accounts.availableAccounts);\n\t    }\n\t  };\n\t\n\t  games.claimWin = function (game) {\n\t    console.log('claimWin', game);\n\t    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t      if (game.timeoutState !== 0) {\n\t        $rootScope.$broadcast('message', 'Not able to claim win, while other claim is active in game with the id ' + game.gameId, 'error', 'claimwin');\n\t      } else {\n\t        $rootScope.$broadcast('message', 'Claiming win for your game with the id ' + game.gameId, 'message', 'claimwin');\n\t        try {\n\t          games.sendLastStateOrMoveToBlockchain(game);\n\t        } catch (e) {\n\t          console.log('sendLastStateOrMoveToBlockchain error', e);\n\t          $rootScope.$broadcast('message', 'An error occurred while sending the game state to the blockchain', 'error', 'claimwin');\n\t        }\n\t        try {\n\t          _Chess.Chess.claimWin(game.gameId, { from: game.self.accountId, gas: 1000000000 });\n\t        } catch (e) {\n\t          console.log('claimWin error', e);\n\t          $rootScope.$broadcast('message', 'An error occurred while trying to claim win', 'error', 'claimwin');\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.offerDraw = function (game) {\n\t    console.log('offerDraw', game);\n\t    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t      if (game.timeoutState !== 0) {\n\t        $rootScope.$broadcast('message', 'Not able to offer draw, while other claim is active in game with the id ' + game.gameId, 'error', 'offerdraw');\n\t      } else {\n\t        $rootScope.$broadcast('message', 'Offering draw for your game with the id ' + game.gameId, 'message', 'offerdraw');\n\t        try {\n\t          games.sendLastStateOrMoveToBlockchain(game);\n\t          _Chess.Chess.offerDraw(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t        } catch (e) {\n\t          console.log('offerDraw error', e);\n\t          $rootScope.$broadcast('message', 'Could not offer a draw', 'error', 'offerdraw');\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.claimTimeout = function (game) {\n\t    console.log('claimTimeout', game);\n\t    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t      if (game.timeoutState !== 0) {\n\t        $rootScope.$broadcast('message', 'Not able to claim timeout while other claim is active in game with the id ' + game.gameId, 'error', 'claimtimeout');\n\t      } else {\n\t        $rootScope.$broadcast('message', 'Claim timeout for your game with the id ' + game.gameId, 'message', 'claimtimeout');\n\t        try {\n\t          games.sendLastStateOrMoveToBlockchain(game);\n\t          _Chess.Chess.claimTimeout(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t        } catch (e) {\n\t          console.log('claimTimeout error', e);\n\t          $rootScope.$broadcast('message', 'Could not claim timeout', 'error', 'claimtimeout');\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.confirmGameEnded = function (game) {\n\t    console.log('confirmGameEnded', game);\n\t    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t      if (game.timeoutState === 0) {\n\t        $rootScope.$broadcast('message', 'Not able to comfirm game ended, while no claim is active ' + 'in game with the id ' + game.gameId, 'error', 'confirmgameended');\n\t      } else {\n\t        $rootScope.$broadcast('message', 'Sending confirmation to end your game with the id ' + game.gameId, 'message', 'confirmgameended');\n\t        try {\n\t          _Chess.Chess.confirmGameEnded(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t        } catch (e) {\n\t          console.log('confirmGameEnded error', e);\n\t          $rootScope.$broadcast('message', 'Could not end the game', 'error', 'confirmgameended');\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.claimTimeoutEnded = function (game) {\n\t    console.log('claimTimeoutEnded', game);\n\t    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t      if (game.timeoutState === 0) {\n\t        $rootScope.$broadcast('message', 'Not able to claim timeout, while no claim is active ' + 'in game with the id ' + game.gameId, 'error', 'claimtimeoutended');\n\t      } else {\n\t        $rootScope.$broadcast('message', 'Claiming timeout for your game with the id ' + game.gameId, 'message', 'claimtimeoutended');\n\t        try {\n\t          _Chess.Chess.claimTimeoutEnded(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t        } catch (e) {\n\t          console.log('claimTimeoutEnded error', e);\n\t          $rootScope.$broadcast('message', 'Could not claim timeout', 'error', 'claimtimeoutended');\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.claimEther = function (game) {\n\t    console.log('claim ether', game);\n\t    // Only do this if we are part of this game\n\t    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t      // When the player has won ether, claim this\n\t      if (game.self.wonEther > 0) {\n\t        if (game.opponent) {\n\t          $rootScope.$broadcast('message', 'Claiming your won ether in the game against ' + game.opponent.username, 'message', 'claimpot');\n\t        } else {\n\t          $rootScope.$broadcast('message', 'Reclaiming your ether in your game with the id ' + game.gameId, 'message', 'claimpot');\n\t        }\n\t\n\t        try {\n\t          console.log('Trying to claim ether for game ', game);\n\t          _Chess.Chess.withdraw(game.gameId, { from: game.self.accountId, gas: 1000000000 });\n\t          $rootScope.$broadcast('message', 'Your ether with the amount of ' + game.self.wonEther + ' has been added to your account', 'success', 'claimpot');\n\t\n\t          game.self.wonEther = 0;\n\t          game.pot = 0;\n\t        } catch (e) {\n\t          $rootScope.$broadcast('message', 'Could not claim your ether', 'error', 'claimpot');\n\t        }\n\t      } else {\n\t        console.log('no ether to claim for self: ', game.self);\n\t      }\n\t    } else {\n\t      console.log(game.self.accountId + ' not in account ids', accounts.availableAccounts);\n\t    }\n\t  };\n\t\n\t  /* Send move and resulting new state to second player */\n\t  games.sendMove = function (game, fromIndex, toIndex) {\n\t    // update game information\n\t    gameStates.addSelfMove(game.gameId, (0, _fenConversion.algebraicToIndex)(fromIndex), (0, _fenConversion.algebraicToIndex)(toIndex), game.state);\n\t    game.nextPlayer = game.opponent.accountId;\n\t    console.log('sendMove move number', gameStates.getMoveNumberFromState(game.state));\n\t\n\t    // if there is a timeout running against us, send the move to blockchain\n\t    if (game.timeoutState !== 0 && game.timeoutState !== -2) {\n\t      games.sendLastStateOrMoveToBlockchain(game);\n\t      return;\n\t    }\n\t    var identity = game.self.accountId;\n\t    var payload = ['MOVE', game.state, crypto.sign(identity, game.gameId, game.state), fromIndex, toIndex, crypto.sign(identity, game.gameId, [fromIndex, toIndex])];\n\t    game.lastSentHash = crypto.solSha3(payload);\n\t    shh.post({\n\t      'from': identity,\n\t      'to': game.opponent.accountId,\n\t      'topic': [shhTopic, game.gameId],\n\t      'payload': payload\n\t    });\n\t    console.log('Sent move no', game.state[8] * 128 + game.state[9], 'from', fromIndex, 'to', toIndex);\n\t\n\t    // Wait for ACK\n\t    if (typeof game.ackTimeout !== 'undefined') {\n\t      clearTimeout(game.ackTimeout);\n\t    }\n\t    game.ackTimeout = setTimeout(function () {\n\t      if (game.lastAckHash !== game.lastSentHash) {\n\t        console.log('Opponent did not ACK, sending last state and move to blockchain');\n\t        // If not ACKed, send my last move to blockchain\n\t        try {\n\t          games.sendLastStateOrMoveToBlockchain(game);\n\t          console.log('after t/o ACK sendLastStateOrMoveToBlockchain');\n\t          // then send claimTimeout\n\t          _Chess.Chess.claimTimeout(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t\n\t          game.moveTimeout = setTimeout(function () {\n\t            var _games$getValidMove = games.getValidMove(game),\n\t                _games$getValidMove2 = _slicedToArray(_games$getValidMove, 2),\n\t                fromIndex = _games$getValidMove2[0],\n\t                toIndex = _games$getValidMove2[1];\n\t\n\t            try {\n\t              _Chess.Chess.claimTimeoutEndedWithMove(game.gameId, fromIndex, toIndex, { from: game.self.accountId,\n\t                gas: 10000000 });\n\t            } catch (e) {\n\t              console.error('Could not claimTimeoutEndedWithMove', e);\n\t            }\n\t          }, game.turnTime * 60 * 1000);\n\t          game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n\t        } catch (e) {\n\t          console.log('Could not send state and move to blockchain', e);\n\t        }\n\t      }\n\t    }, TIMEOUT_ACK);\n\t\n\t    // Wait for next move\n\t    if (typeof game.moveTimeout !== 'undefined') {\n\t      clearTimeout(game.moveTimeout);\n\t    }\n\t    game.moveTimeout = setTimeout(function () {\n\t      console.log('Opponent did not send move, sending' + 'last state and move to blockchain');\n\t      // If opponent did not move, send my last state and move to blockchain\n\t      try {\n\t        games.sendLastStateOrMoveToBlockchain(game);\n\t        // then send claimTimeout\n\t        _Chess.Chess.claimTimeout(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t\n\t        game.moveTimeout = setTimeout(function () {\n\t          var _games$getValidMove3 = games.getValidMove(game),\n\t              _games$getValidMove4 = _slicedToArray(_games$getValidMove3, 2),\n\t              fromIndex = _games$getValidMove4[0],\n\t              toIndex = _games$getValidMove4[1];\n\t\n\t          try {\n\t            _Chess.Chess.claimTimeoutEndedWithMove(game.gameId, fromIndex, toIndex, { from: game.self.accountId, gas: 10000000 });\n\t          } catch (e) {\n\t            console.error('Could not claimTimeoutEndedWithMove', e);\n\t          }\n\t        }, game.turnTime * 60 * 1000 + 10000); // half game time plus 10 seconds extra\n\t        game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n\t      } catch (e) {\n\t        console.log('Could not send state and move to blockchain', e);\n\t      }\n\t    }, game.turnTime * 60 * 1000); // half game time\n\t    game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n\t    $rootScope.$apply();\n\t  };\n\t\n\t  /**\n\t   * Returns a random valid move, throws if no valid moves are possible\n\t   *\n\t   * @param game\n\t   * @returns {*[from index in 0x88, to index in 0x88]}\n\t   */\n\t  games.getValidMove = function (game) {\n\t    console.log('get valid move for', game);\n\t    var move = game.chess.moves()[0];\n\t    move = game.chess.move(move);\n\t    game.chess.undo();\n\t    var toBackend = _fenConversion.generateMapping.toBackend;\n\t    return [toBackend[move.from], toBackend[move.to]];\n\t  };\n\t\n\t  games.sendLastStateOrMoveToBlockchain = function (game) {\n\t    var state = void 0,\n\t        stateSignature = void 0,\n\t        fromIndex = void 0,\n\t        toIndex = void 0;\n\t    try {\n\t      var _gameStates$getLastMo = gameStates.getLastMovePackage(game.gameId);\n\t\n\t      var _gameStates$getLastMo2 = _slicedToArray(_gameStates$getLastMo, 4);\n\t\n\t      state = _gameStates$getLastMo2[0];\n\t      stateSignature = _gameStates$getLastMo2[1];\n\t      fromIndex = _gameStates$getLastMo2[2];\n\t      toIndex = _gameStates$getLastMo2[3];\n\t\n\t      console.log('getLastMovePackage', state, stateSignature, fromIndex, toIndex, gameStates.getMoveNumberFromState(state));\n\t    } catch (e) {\n\t      console.log('getLastMovePackage failed');\n\t      // last state + move not present, move base on blockchain state\n\t      var blockchainMoveNumber = gameStates.getMoveNumberFromState(gameStates.getLastBlockchainState(game));\n\t      console.log('lastBlockchainState Number', gameStates.getMoveNumberFromState(gameStates.getLastBlockchainState(game)));\n\t      var lastSelfMove = void 0;\n\t      try {\n\t        lastSelfMove = gameStates.getLastSelfMove(game.gameId);\n\t      } catch (e) {\n\t        if (blockchainMoveNumber === 0) {\n\t          // blockchain has no move, we have no move... fine\n\t          console.log('state = 0 --> no move ... fine');\n\t          return;\n\t        }\n\t      }\n\t      var lastSelfMoveNumber = gameStates.getMoveNumberFromState(lastSelfMove.newState);\n\t      console.log('lastSelfMove Number', lastSelfMoveNumber);\n\t      if (blockchainMoveNumber === lastSelfMoveNumber) {\n\t        return;\n\t      } else if (blockchainMoveNumber + 1 === lastSelfMoveNumber) {\n\t        _Chess.Chess.move(game.gameId, lastSelfMove.moveFrom, lastSelfMove.moveTo, { from: game.self.accountId,\n\t          gas: 10000000 });\n\t      } else {\n\t        // should not happen\n\t        throw Error('Blockchain state and local move do not match.');\n\t      }\n\t      return;\n\t    }\n\t    console.log('getLastMovePackage success... sending move', state, fromIndex, toIndex, stateSignature);\n\t    _Chess.Chess.moveFromState(game.gameId, state, fromIndex, toIndex, stateSignature, { from: game.self.accountId, gas: 10000000 });\n\t  };\n\t\n\t  /* Send acknowledgment of last received move */\n\t  games.sendAck = function (game) {\n\t    console.log('Acknowledge reception of', game.lastReceivedHash);\n\t    shh.post({\n\t      'from': game.self.accountId,\n\t      'to': game.opponent.accountId,\n\t      'topic': [shhTopic, game.gameId],\n\t      'payload': ['ACK', game.lastReceivedHash]\n\t    });\n\t  };\n\t\n\t  /* Receive move and resulting new state from opponent */\n\t  /* callback({[state, stateSignature, fromIndex, toIndex, moveSignature], from}) */\n\t  games.listenForMoves = function (game, callback) {\n\t    var moveEvents = shh.watch({\n\t      'topic': [shhTopic, game.gameId],\n\t      'to': game.self.accountId\n\t    });\n\t    moveEvents.arrived(function (m) {\n\t      console.log('moveEvents.arrived', m);\n\t      if (m.payload[0] === 'ACK') {\n\t        var hash = m.payload[1];\n\t        game.lastAckHash = hash;\n\t        console.log('Received acknowledgment of', hash);\n\t      }\n\t      if (m.payload[0] === 'MOVE') {\n\t        var _m$payload2 = _slicedToArray(m.payload, 6),\n\t            state = _m$payload2[1],\n\t            stateSignature = _m$payload2[2],\n\t            fromIndex = _m$payload2[3],\n\t            toIndex = _m$payload2[4],\n\t            moveSignature = _m$payload2[5];\n\t\n\t        if (!crypto.verify(game.opponent.accountId, game.gameId, stateSignature, state) || !crypto.verify(game.opponent.accountId, game.gameId, moveSignature, [fromIndex, toIndex])) {\n\t          console.log('Could not verify opponent\\'s move signature, sending last ' + 'valid state and move to blockchain');\n\t          // TODO Send my last known state and move to the blockchain\n\t        } else {\n\t          game.lastReceivedHash = crypto.solSha3(m.payload);\n\t          game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n\t          callback(m);\n\t        }\n\t      }\n\t    });\n\t\n\t    return {\n\t      stopListening: function stopListening() {\n\t        moveEvents.remove();\n\t      }\n\t    };\n\t  };\n\t\n\t  games.eventGameInitialized = function (err, data) {\n\t    console.log('eventGameInitialized', err, data);\n\t    if (err) {\n\t      console.log('error occured', err);\n\t      /*$rootScope.$broadcast('message',\n\t       'Your game could not be created, the following error occured: ' + err,\n\t       'error', 'startgame');*/\n\t    } else {\n\t      var game = games.convertGameToObject(data.args);\n\t      games.add(game);\n\t      games.openGames.push(game.gameId);\n\t\n\t      if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t        $rootScope.$broadcast('message', 'Your game has successfully been created and has the id ' + game.gameId, 'success', 'startgame');\n\t      }\n\t\n\t      $rootScope.$apply();\n\t    }\n\t  };\n\t\n\t  games.eventGameJoined = function (err, data) {\n\t    console.log('eventGameJoined', err, data);\n\t    if (err) {\n\t      console.log('error occured', err);\n\t      /*$rootScope.$broadcast('message',\n\t       'It was not possible to join the game, the following error occured: ' + err,\n\t       'error', 'joingame');*/\n\t    } else {\n\t      var gameId = data.args.gameId;\n\t      var p1accountId = data.args.player1;\n\t      var p1username = data.args.player1Alias;\n\t      var p1color = data.args.playerWhite === data.args.player1 ? 'white' : 'black';\n\t      var p2accountId = data.args.player2;\n\t      var p2username = data.args.player2Alias;\n\t      var p2color = data.args.playerWhite === data.args.player2 ? 'white' : 'black';\n\t\n\t      var game = games.getGame(gameId);\n\t      if (typeof game === 'undefined') {\n\t        game = games.convertGameToObject(data.args);\n\t        games.add(game);\n\t      } else {\n\t        // remove game from openGames\n\t        var gameIndex = games.openGames.indexOf(gameId);\n\t        games.openGames.splice(gameIndex, 1);\n\t        if (accounts.availableAccounts.indexOf(p2accountId) !== -1) {\n\t          game.self = {\n\t            username: p2username,\n\t            accountId: p2accountId,\n\t            color: p2color\n\t          };\n\t          game.opponent = {\n\t            username: p1username,\n\t            accountId: p1accountId,\n\t            color: p1color\n\t          };\n\t        } else {\n\t          game.self = {\n\t            username: p1username,\n\t            accountId: p1accountId,\n\t            color: p1color\n\t          };\n\t          game.opponent = {\n\t            username: p2username,\n\t            accountId: p2accountId,\n\t            color: p2color\n\t          };\n\t        }\n\t        game.pot = _Chess.web3.fromWei(data.args.pot, 'ether').toDigits().toString();\n\t        game.player1WonEther = 0;\n\t        game.player2WonEther = 0;\n\t      }\n\t\n\t      if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n\t        $rootScope.$broadcast('message', 'Your game against ' + game.opponent.username.replace(/<(?:.|\\n)*?>/gm, '') + ' has started', 'success', 'joingame');\n\t\n\t        if ($route.current.activePage === navigation.joinGamePage) {\n\t          navigation.goto(navigation.playGamePage, gameId);\n\t        } else {\n\t          $rootScope.$apply();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.eventGameStateChanged = function (err, data) {\n\t    console.log('eventGameStateChanged', err, data);\n\t    var game = games.getGame(data.args.gameId);\n\t    if (typeof game !== 'undefined') {\n\t      game.state = data.args.state;\n\t      games.update(game);\n\t    }\n\t  };\n\t\n\t  games.eventMove = function (err, data) {\n\t    console.log('eventMove', err, data);\n\t    var game = games.getGame(data.args.gameId);\n\t    if (typeof game !== 'undefined') {\n\t      // Apply move\n\t      var toFrontend = (0, _fenConversion.generateMapping)().toFrontend;\n\t      var opponentChessMove = game.chess.move({\n\t        from: toFrontend[data.args.fromIndex],\n\t        to: toFrontend[data.args.toIndex],\n\t        promotion: 'q'\n\t      });\n\t\n\t      game.state = (0, _fenConversion.generateState)(game.chess.fen());\n\t      game.nextPlayer = data.args.player === game.self.accountId ? game.opponent.accountId : game.self.accountId;\n\t      game.lastMove = opponentChessMove;\n\t      game.timeoutState = 0;\n\t\n\t      $rootScope.$apply();\n\t    }\n\t  };\n\t\n\t  games.eventGameEnded = function (err, data) {\n\t    console.log('eventGameEnded', err, data);\n\t    if (err) {\n\t      console.log('error occured', err);\n\t      /* $rootScope.$broadcast('message',\n\t       'The surrender could not be saved, the following error occurred: ' + err,\n\t       'error', 'playgame');*/\n\t    } else {\n\t      // Update game in games list\n\t      var gameInContract = _Chess.Chess.games(data.args.gameId);\n\t\n\t      if (gameInContract) {\n\t        for (var i in games.list) {\n\t          if (games.list[i].gameId === data.args.gameId) {\n\t            var game = games.convertGameToObject(games.parseContractGameArray(data.args.gameId, gameInContract));\n\t            console.log('updated game after close', game);\n\t            games.update(game);\n\t\n\t            // Show the winner of the game\n\t            games.showWinner(game);\n\t\n\t            // Claim the ether automatically\n\t            games.claimEther(game);\n\t\n\t            $rootScope.$apply();\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.eventGameClosed = function (err, data) {\n\t    console.log('eventGameClosed', err, data);\n\t    if (err) {\n\t      console.log('error occured', err);\n\t      /*$rootScope.$broadcast('message',\n\t       'The surrender could not be saved, the following error occurred: ' + err,\n\t       'error', 'playgame');*/\n\t    } else {\n\t      // Update game in games list\n\t      var gameInContract = _Chess.Chess.games(data.args.gameId);\n\t\n\t      if (gameInContract) {\n\t        for (var i in games.list) {\n\t          if (games.list[i].gameId === data.args.gameId) {\n\t            var game = games.convertGameToObject(games.parseContractGameArray(data.args.gameId, gameInContract));\n\t            games.update(game);\n\t\n\t            // If the player closed his own game\n\t            if (accounts.availableAccounts.indexOf(data.args.player) !== -1) {\n\t              navigation.goto(navigation.welcomePage);\n\t\n\t              $rootScope.$broadcast('message', 'Your game with the id ' + data.args.gameId + ' was closed', 'success', 'playgame');\n\t\n\t              // If the game did not have an opponent: Claim the ether from this game\n\t              if (typeof game.opponent === 'undefined') {\n\t                games.claimEther(game);\n\t              }\n\t\n\t              games.removeGame(data.args.gameId);\n\t\n\t              $rootScope.$apply();\n\t            } else {\n\t              var openGameIndex = games.openGames.indexOf(game.gameId);\n\t\n\t              // If this was an open game of another player\n\t              if (openGameIndex !== -1) {\n\t                games.removeGame(data.args.gameId);\n\t                games.openGames.splice(openGameIndex, 1);\n\t\n\t                $rootScope.$apply();\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  games.eventGameTimeoutStarted = function (err, data) {\n\t    console.log('eventGameTimeoutStarted', err, data);\n\t    if (err) {\n\t      console.error('error occured', err);\n\t      return;\n\t    }\n\t    var game = games.getGame(data.args.gameId);\n\t    if (typeof game === 'undefined') {\n\t      return;\n\t    }\n\t    game.timeoutStarted = data.args.timeoutStarted.toNumber();\n\t    game.timeoutState = data.args.timeoutState.toNumber();\n\t\n\t    if (gameStates.isBlockchainStateNewer(game.gameId)) {\n\t      console.log('blockchain state newer, update');\n\t      game.state = gameStates.getLastBlockchainState(game);\n\t      games.update(game);\n\t      // TODO update chessboard !\n\t    }\n\t\n\t    /*\n\t     * -2 draw offered by nextPlayer\n\t     * -1 draw offered by waiting player\n\t     * 0 nothing\n\t     * 1 checkmate\n\t     * 2 timeout\n\t     */\n\t    console.log('eventGameTimeoutStarted for', game);\n\t    if (game.timeoutState === -1 && game.nextPlayer === game.self.accountId || game.timeoutState === -2 && game.nextPlayer === game.opponent.accountId) {\n\t      $rootScope.$broadcast('message', 'Player ' + game.opponent.username + ' wants to offer a draw', 'message', 'playgame-' + game.gameId);\n\t    } else if (game.timeoutState === 1 && game.nextPlayer === game.self.accountId) {\n\t      $rootScope.$broadcast('message', 'Player ' + game.opponent.username + ' claims that he won the game', 'message', 'playgame-' + game.gameId);\n\t    } else if (game.timeoutState === 2 && game.nextPlayer === game.self.accountId) {\n\t      $rootScope.$broadcast('message', 'Player ' + game.opponent.username + ' claims that he won the game due to a timeout', 'message', 'playgame-' + game.gameId);\n\t    }\n\t\n\t    $rootScope.$apply();\n\t\n\t    // Check own state to confirm or decline\n\t    if (data.args.timeoutState !== 0 && (game.chess.turn() === 'w' && game.self.color === 'white' || game.chess.turn() === 'b' && game.self.color === 'black')) {\n\t      if ( // confirm if [1, 2] (claimWin, claimTimeout) and we are checkmate\n\t      [1, 2].indexOf(data.args.timeoutState) !== -1 && game.chess.in_checkmate() || // jshint ignore:line\n\t      // or confirm if -1 (offerDraw) and stalemate of draw\n\t      data.args.timeoutState === -1 && (game.chess.in_stalemate() || game.chess.in_draw()) // jshint ignore:line\n\t      ) {\n\t          try {\n\t            _Chess.Chess.confirmGameEnded(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t          } catch (e) {\n\t            $rootScope.$broadcast('message', 'Could not confirm your game against ' + game.opponent.username + ' ended', 'error', 'playgame-' + game.gameId);\n\t            console.log('error while trying to confirm the game ended after draw', e);\n\t          }\n\t        } else {\n\t        // no valid endgame\n\t        try {\n\t          games.sendLastStateOrMoveToBlockchain(game);\n\t        } catch (e) {\n\t          // no move found that user made before. user has to make a move\n\t          $rootScope.$broadcast('message', game.opponent.username + ' has started a timeout. ' + 'You have to move withing the next ' + game.turnTime + ' minutes ' + 'to decline.', 'error', 'playgame-' + game.gameId);\n\t          // Set countdown. We cannot know when the opponent moves, so just start it from now\n\t          game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n\t          console.log(game.opponent.username + ' has started a timeout. You have to move withing ' + 'the next ' + game.turnTime + ' minutes ' + 'to decline.');\n\t        }\n\t      }\n\t    } else if (data.args.timeoutState === -2 && ( // -2 = offerDraw by turning player\n\t    // confirm if in stalemate or draw\n\t    game.chess.in_stalemate() || game.chess.in_draw()) && ( // jshint ignore:line\n\t    game.chess.turn() === 'w' && game.self.color === 'black' || game.chess.turn() === 'b' && game.self.color === 'white')) {\n\t      // opponent (currently turning player) offers draw\n\t      try {\n\t        _Chess.Chess.confirmGameEnded(game.gameId, { from: game.self.accountId, gas: 10000000 });\n\t      } catch (e) {\n\t        $rootScope.$broadcast('message', 'Could not confirm your game against ' + game.opponent.username + ' ended', 'error', 'playgame-' + game.gameId);\n\t        console.error('error while trying to confirm the game ended after draw', e);\n\t      }\n\t    }\n\t    $rootScope.$apply();\n\t  };\n\t\n\t  // Fetch games of player\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\t\n\t  try {\n\t    for (var _iterator2 = accounts.availableAccounts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var accountId = _step2.value;\n\t      var _iteratorNormalCompletion4 = true;\n\t      var _didIteratorError4 = false;\n\t      var _iteratorError4 = undefined;\n\t\n\t      try {\n\t        for (var _iterator4 = _Chess.Chess.getGamesOfPlayer(accountId)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t          var currentGameId = _step4.value;\n\t\n\t          // Check if the game already exists in the games list\n\t          var game = games.getGame(currentGameId);\n\t          if (typeof game === 'undefined') {\n\t            games.add(games.convertGameToObject(games.parseContractGameArray(currentGameId, _Chess.Chess.games(currentGameId))));\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t            _iterator4.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Fetch open games\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\t\n\t  var _iteratorNormalCompletion3 = true;\n\t  var _didIteratorError3 = false;\n\t  var _iteratorError3 = undefined;\n\t\n\t  try {\n\t    for (var _iterator3 = _Chess.Chess.getOpenGameIds()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t      var openGameId = _step3.value;\n\t\n\t      // Check if the game already exists in the games list\n\t      var _game = games.getGame(openGameId);\n\t      if (typeof _game === 'undefined') {\n\t        games.add(games.convertGameToObject(games.parseContractGameArray(openGameId, _Chess.Chess.games(openGameId))));\n\t      }\n\t      if (games.openGames.indexOf(openGameId) === -1) {\n\t        games.openGames.push(openGameId);\n\t      }\n\t      if (games.openGames.indexOf(openGameId) === -1) {\n\t        games.openGames.push(openGameId);\n\t      }\n\t    }\n\t\n\t    // Event listeners\n\t  } catch (err) {\n\t    _didIteratorError3 = true;\n\t    _iteratorError3 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t        _iterator3.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError3) {\n\t        throw _iteratorError3;\n\t      }\n\t    }\n\t  }\n\t\n\t  _Chess.Chess.GameInitialized({}, games.eventGameInitialized);\n\t  _Chess.Chess.GameJoined({}, games.eventGameJoined);\n\t  _Chess.Chess.GameStateChanged({}, games.eventGameStateChanged);\n\t  _Chess.Chess.Move({}, games.eventMove);\n\t  _Chess.Chess.GameEnded({}, games.eventGameEnded);\n\t  _Chess.Chess.GameClosed({}, games.eventGameClosed);\n\t  _Chess.Chess.GameTimeoutStarted({}, games.eventGameTimeoutStarted);\n\t\n\t  return games;\n\t}).filter('ownGames', function (accounts) {\n\t  return function (games) {\n\t    return games.filter(function (game) {\n\t      return accounts.availableAccounts.indexOf(game.self.accountId) !== -1;\n\t    });\n\t  };\n\t}).filter('othersOpenGames', function (accounts) {\n\t  return function (games, openGames) {\n\t    if (typeof games !== 'undefined') {\n\t      return games.filter(function (game) {\n\t        return accounts.availableAccounts.indexOf(game.self.accountId) === -1;\n\t      }).filter(function (game) {\n\t        return openGames.indexOf(game.gameId) !== -1;\n\t      });\n\t    }\n\t  };\n\t});\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.generateMapping = generateMapping;\n\texports.algebraicToIndex = algebraicToIndex;\n\texports.generateState = generateState;\n\texports.generateFen = generateFen;\n\tfunction generatePieceMapping() {\n\t  return {\n\t\n\t    // for 0x88 to fen\n\t    '-6': 'k',\n\t    '-5': 'q',\n\t    '-4': 'r',\n\t    '-3': 'b',\n\t    '-2': 'n',\n\t    '-1': 'p',\n\t    '1': 'P',\n\t    '2': 'N',\n\t    '3': 'B',\n\t    '4': 'R',\n\t    '5': 'Q',\n\t    '6': 'K',\n\t\n\t    // for fen to 0x88\n\t    'k': -6,\n\t    'q': -5,\n\t    'r': -4,\n\t    'b': -3,\n\t    'n': -2,\n\t    'p': -1,\n\t    'P': 1,\n\t    'N': 2,\n\t    'B': 3,\n\t    'R': 4,\n\t    'Q': 5,\n\t    'K': 6\n\t\n\t  };\n\t}\n\t\n\tfunction generateMapping() {\n\t  var x = 0,\n\t      y = 8;\n\t  var toBackend = {};\n\t  var toFrontend = {};\n\t  var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\t\n\t  for (var i = 0; i < 128; i++) {\n\t    toBackend[alphabet[x] + y] = i;\n\t    toFrontend[i] = alphabet[x] + y;\n\t\n\t    x++;\n\t    if (x === 8) {\n\t      x = 0;\n\t      y--;\n\t      i += 8;\n\t    }\n\t  }\n\t\n\t  return { 'toBackend': toBackend, 'toFrontend': toFrontend };\n\t}\n\t\n\t/**\n\t * Convert Standard Algebraic Notation to 0x88 index\n\t * @param string: SAN string (e.g. 'a3')\n\t * @return number: Index in 0x88 board\n\t */\n\tfunction algebraicToIndex(string) {\n\t  var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\t  return (8 - parseInt(string[1])) * 16 + alphabet.indexOf(string[0]);\n\t}\n\t\n\tfunction generateState(fen) {\n\t  var fenComponents = fen.split(' ');\n\t  var board = fenComponents[0],\n\t      activeColor = fenComponents[1],\n\t      castling = fenComponents[2],\n\t      enPassant = fenComponents[3],\n\t\n\t  // halfMoveClock = fenComponents[4],\n\t  fullMoveCounter = fenComponents[5];\n\t\n\t  // set board to 0x88\n\t  var state = [];\n\t  var counter = 0;\n\t  var toState = generatePieceMapping();\n\t  var whiteKing = void 0,\n\t      blackKing = void 0;\n\t  for (var i = 0; i < board.length; i++) {\n\t    if (isNaN(Number(board[i]))) {\n\t      if (board[i] === '/') {\n\t        for (var _k = 0; _k < 8; _k++) {\n\t          state.push(0);\n\t          counter++;\n\t        }\n\t      } else {\n\t        state.push(toState[board[i]]);\n\t        if (board[i] === 'k') {\n\t          blackKing = counter;\n\t        }\n\t        if (board[i] === 'K') {\n\t          whiteKing = counter;\n\t        }\n\t        counter++;\n\t      }\n\t    } else {\n\t      for (var j = 0; j < Number(board[i]); j++) {\n\t        state.push(0);\n\t        counter++;\n\t      }\n\t    }\n\t  }\n\t  // fill rest of shadow field\n\t  for (var _j = 0; _j < 8; _j++) {\n\t    state.push(0);\n\t  }\n\t\n\t  // fullmove\n\t  var halfMoveCounter = 2 * fullMoveCounter + (activeColor === 'w' ? -2 : -1);\n\t  state[8] = parseInt(halfMoveCounter / 128);\n\t  state[9] = parseInt(halfMoveCounter % 128);\n\t\n\t  // set king position\n\t  state[11] = blackKing;\n\t  state[123] = whiteKing;\n\t\n\t  // set color\n\t  if (activeColor === 'w') {\n\t    state[56] = 1;\n\t  } else {\n\t    state[56] = -1;\n\t  }\n\t\n\t  // init for castling\n\t  state[78] = -1;\n\t  state[79] = -1;\n\t  state[62] = -1;\n\t  state[63] = -1;\n\t\n\t  // change state if castling is possible\n\t  for (var k = 0; k < castling.length; k++) {\n\t    // white right - kleine rochade für weiß\n\t    if (castling[k] === 'K') {\n\t      state[79] = 0;\n\t    }\n\t    // white left - große rochade für weiß\n\t    else if (castling[k] === 'Q') {\n\t        state[78] = 0;\n\t      }\n\t      // black right - kleine rochade für schwarz\n\t      else if (castling[k] === 'k') {\n\t          state[63] = 0;\n\t        }\n\t        // black left - große rochade für schwarz\n\t        else if (castling[k] === 'q') {\n\t            state[62] = 0;\n\t          }\n\t  }\n\t\n\t  // set enpassant\n\t  var mapping = generateMapping();\n\t  state[61] = mapping.toBackend[enPassant];\n\t  if (typeof state[61] === 'undefined') {\n\t    state[61] = 0;\n\t  }\n\t  state[77] = mapping.toBackend[enPassant];\n\t  if (typeof state[77] === 'undefined') {\n\t    state[77] = 0;\n\t  }\n\t\n\t  return state;\n\t}\n\t\n\tfunction generateFen(state) {\n\t  var skip = 0,\n\t      fen = '',\n\t      zero = 0,\n\t      toPiece = generatePieceMapping();\n\t\n\t  for (var i = 0; i < state.length; i++) {\n\t    // field is empty\n\t    if (state[i] === 0) {\n\t      zero += 1;\n\t    }\n\t    // field contains a piece\n\t    else {\n\t\n\t        // before concatinate piece to fen, check if zeros exist\n\t        if (zero > 0) {\n\t          fen += zero;\n\t          zero = 0;\n\t        }\n\t        fen += toPiece[state[i]];\n\t      }\n\t\n\t    skip++;\n\t\n\t    // shadow board\n\t    if (skip === 8) {\n\t\n\t      // concatinate rest to fen if exists\n\t      if (zero > 0) {\n\t        fen += zero;\n\t        zero = 0;\n\t      }\n\t\n\t      // concatinate '/'\n\t      if (i < 118) {\n\t        fen += '/';\n\t      }\n\t\n\t      // skip shadow board and reset skip\n\t      i += 8;\n\t      skip = 0;\n\t    }\n\t  }\n\t\n\t  // set current player\n\t  if (state[56] === 1) {\n\t    // white\n\t    fen += ' w ';\n\t  } else {\n\t    // black\n\t    fen += ' b ';\n\t  }\n\t\n\t  // set Rochade\n\t  if (state[79] === 0 || state[78] === 0 || state[62] === 0 || state[63] === 0) {\n\t    if (state[79] === 0) {\n\t      fen += 'K';\n\t    }\n\t    if (state[78] === 0) {\n\t      fen += 'Q';\n\t    }\n\t    if (state[62] === 0) {\n\t      fen += 'k';\n\t    }\n\t    if (state[63] === 0) {\n\t      fen += 'q';\n\t    }\n\t  } else {\n\t    fen += '-';\n\t  }\n\t\n\t  // set En passant\n\t  if (state[61] > 0 || state[77] > 0) {\n\t    var position = generateMapping();\n\t    if (state[61] > 0) {\n\t      fen += ' ' + position.toFrontend[state[61]];\n\t    } else if (state[77] > 0) {\n\t      fen += ' ' + position.toFrontend[state[77]];\n\t    }\n\t  } else {\n\t    fen += ' -';\n\t  }\n\t\n\t  // set clock for halfmoves since last capture or pawn advance\n\t  // not implemented, so always 0\n\t  fen += ' 0 ';\n\t\n\t  // set fullmove number\n\t  var halfMoveCounter = 128 * state[8] + state[9];\n\t  fen += Math.ceil((halfMoveCounter + 1) / 2);\n\t\n\t  return fen;\n\t}\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  'appId': 'dappChess_server',\n\t  'proxyUri': 'https://dappchessserver.sdhacson.repl.co',\n\t  'timeouts': {\n\t    'ack': 10000\n\t  }\n\t};\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t * Copyright (c) 2020, Jeff Hlywa (jhlywa@gmail.com)\n\t * All rights reserved.\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are met:\n\t *\n\t * 1. Redistributions of source code must retain the above copyright notice,\n\t *    this list of conditions and the following disclaimer.\n\t * 2. Redistributions in binary form must reproduce the above copyright notice,\n\t *    this list of conditions and the following disclaimer in the documentation\n\t *    and/or other materials provided with the distribution.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\t * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\t * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\t * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\t * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\t * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\t * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\t * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\t * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\t * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\t * POSSIBILITY OF SUCH DAMAGE.\n\t *\n\t *----------------------------------------------------------------------------*/\n\t\n\t/* minified license below  */\n\t\n\t/* @license\n\t * Copyright (c) 2018, Jeff Hlywa (jhlywa@gmail.com)\n\t * Released under the BSD license\n\t * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n\t */\n\t\n\tvar Chess = function(fen) {\n\t  var BLACK = 'b'\n\t  var WHITE = 'w'\n\t\n\t  var EMPTY = -1\n\t\n\t  var PAWN = 'p'\n\t  var KNIGHT = 'n'\n\t  var BISHOP = 'b'\n\t  var ROOK = 'r'\n\t  var QUEEN = 'q'\n\t  var KING = 'k'\n\t\n\t  var SYMBOLS = 'pnbrqkPNBRQK'\n\t\n\t  var DEFAULT_POSITION =\n\t    'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\t\n\t  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*']\n\t\n\t  var PAWN_OFFSETS = {\n\t    b: [16, 32, 17, 15],\n\t    w: [-16, -32, -17, -15]\n\t  }\n\t\n\t  var PIECE_OFFSETS = {\n\t    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n\t    b: [-17, -15, 17, 15],\n\t    r: [-16, 1, 16, -1],\n\t    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n\t    k: [-17, -16, -15, 1, 17, 16, 15, -1]\n\t  }\n\t\n\t  // prettier-ignore\n\t  var ATTACKS = [\n\t    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n\t     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n\t     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n\t     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n\t     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n\t    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n\t     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n\t     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n\t     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n\t     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n\t     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n\t    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n\t  ];\n\t\n\t  // prettier-ignore\n\t  var RAYS = [\n\t     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n\t      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n\t      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n\t      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n\t      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n\t      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n\t      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n\t      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n\t      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n\t      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n\t      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n\t    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n\t  ];\n\t\n\t  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\n\t\n\t  var FLAGS = {\n\t    NORMAL: 'n',\n\t    CAPTURE: 'c',\n\t    BIG_PAWN: 'b',\n\t    EP_CAPTURE: 'e',\n\t    PROMOTION: 'p',\n\t    KSIDE_CASTLE: 'k',\n\t    QSIDE_CASTLE: 'q'\n\t  }\n\t\n\t  var BITS = {\n\t    NORMAL: 1,\n\t    CAPTURE: 2,\n\t    BIG_PAWN: 4,\n\t    EP_CAPTURE: 8,\n\t    PROMOTION: 16,\n\t    KSIDE_CASTLE: 32,\n\t    QSIDE_CASTLE: 64\n\t  }\n\t\n\t  var RANK_1 = 7\n\t  var RANK_2 = 6\n\t  var RANK_3 = 5\n\t  var RANK_4 = 4\n\t  var RANK_5 = 3\n\t  var RANK_6 = 2\n\t  var RANK_7 = 1\n\t  var RANK_8 = 0\n\t\n\t  // prettier-ignore\n\t  var SQUARES = {\n\t    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n\t    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n\t    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n\t    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n\t    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n\t    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n\t    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n\t    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n\t  };\n\t\n\t  var ROOKS = {\n\t    w: [\n\t      { square: SQUARES.a1, flag: BITS.QSIDE_CASTLE },\n\t      { square: SQUARES.h1, flag: BITS.KSIDE_CASTLE }\n\t    ],\n\t    b: [\n\t      { square: SQUARES.a8, flag: BITS.QSIDE_CASTLE },\n\t      { square: SQUARES.h8, flag: BITS.KSIDE_CASTLE }\n\t    ]\n\t  }\n\t\n\t  var board = new Array(128)\n\t  var kings = { w: EMPTY, b: EMPTY }\n\t  var turn = WHITE\n\t  var castling = { w: 0, b: 0 }\n\t  var ep_square = EMPTY\n\t  var half_moves = 0\n\t  var move_number = 1\n\t  var history = []\n\t  var header = {}\n\t\n\t  /* if the user passes in a fen string, load it, else default to\n\t   * starting position\n\t   */\n\t  if (typeof fen === 'undefined') {\n\t    load(DEFAULT_POSITION)\n\t  } else {\n\t    load(fen)\n\t  }\n\t\n\t  function clear(keep_headers) {\n\t    if (typeof keep_headers === 'undefined') {\n\t      keep_headers = false\n\t    }\n\t\n\t    board = new Array(128)\n\t    kings = { w: EMPTY, b: EMPTY }\n\t    turn = WHITE\n\t    castling = { w: 0, b: 0 }\n\t    ep_square = EMPTY\n\t    half_moves = 0\n\t    move_number = 1\n\t    history = []\n\t    if (!keep_headers) header = {}\n\t    update_setup(generate_fen())\n\t  }\n\t\n\t  function reset() {\n\t    load(DEFAULT_POSITION)\n\t  }\n\t\n\t  function load(fen, keep_headers) {\n\t    if (typeof keep_headers === 'undefined') {\n\t      keep_headers = false\n\t    }\n\t\n\t    var tokens = fen.split(/\\s+/)\n\t    var position = tokens[0]\n\t    var square = 0\n\t\n\t    if (!validate_fen(fen).valid) {\n\t      return false\n\t    }\n\t\n\t    clear(keep_headers)\n\t\n\t    for (var i = 0; i < position.length; i++) {\n\t      var piece = position.charAt(i)\n\t\n\t      if (piece === '/') {\n\t        square += 8\n\t      } else if (is_digit(piece)) {\n\t        square += parseInt(piece, 10)\n\t      } else {\n\t        var color = piece < 'a' ? WHITE : BLACK\n\t        put({ type: piece.toLowerCase(), color: color }, algebraic(square))\n\t        square++\n\t      }\n\t    }\n\t\n\t    turn = tokens[1]\n\t\n\t    if (tokens[2].indexOf('K') > -1) {\n\t      castling.w |= BITS.KSIDE_CASTLE\n\t    }\n\t    if (tokens[2].indexOf('Q') > -1) {\n\t      castling.w |= BITS.QSIDE_CASTLE\n\t    }\n\t    if (tokens[2].indexOf('k') > -1) {\n\t      castling.b |= BITS.KSIDE_CASTLE\n\t    }\n\t    if (tokens[2].indexOf('q') > -1) {\n\t      castling.b |= BITS.QSIDE_CASTLE\n\t    }\n\t\n\t    ep_square = tokens[3] === '-' ? EMPTY : SQUARES[tokens[3]]\n\t    half_moves = parseInt(tokens[4], 10)\n\t    move_number = parseInt(tokens[5], 10)\n\t\n\t    update_setup(generate_fen())\n\t\n\t    return true\n\t  }\n\t\n\t  /* TODO: this function is pretty much crap - it validates structure but\n\t   * completely ignores content (e.g. doesn't verify that each side has a king)\n\t   * ... we should rewrite this, and ditch the silly error_number field while\n\t   * we're at it\n\t   */\n\t  function validate_fen(fen) {\n\t    var errors = {\n\t      0: 'No errors.',\n\t      1: 'FEN string must contain six space-delimited fields.',\n\t      2: '6th field (move number) must be a positive integer.',\n\t      3: '5th field (half move counter) must be a non-negative integer.',\n\t      4: '4th field (en-passant square) is invalid.',\n\t      5: '3rd field (castling availability) is invalid.',\n\t      6: '2nd field (side to move) is invalid.',\n\t      7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\n\t      8: '1st field (piece positions) is invalid [consecutive numbers].',\n\t      9: '1st field (piece positions) is invalid [invalid piece].',\n\t      10: '1st field (piece positions) is invalid [row too large].',\n\t      11: 'Illegal en-passant square'\n\t    }\n\t\n\t    /* 1st criterion: 6 space-seperated fields? */\n\t    var tokens = fen.split(/\\s+/)\n\t    if (tokens.length !== 6) {\n\t      return { valid: false, error_number: 1, error: errors[1] }\n\t    }\n\t\n\t    /* 2nd criterion: move number field is a integer value > 0? */\n\t    if (isNaN(tokens[5]) || parseInt(tokens[5], 10) <= 0) {\n\t      return { valid: false, error_number: 2, error: errors[2] }\n\t    }\n\t\n\t    /* 3rd criterion: half move counter is an integer >= 0? */\n\t    if (isNaN(tokens[4]) || parseInt(tokens[4], 10) < 0) {\n\t      return { valid: false, error_number: 3, error: errors[3] }\n\t    }\n\t\n\t    /* 4th criterion: 4th field is a valid e.p.-string? */\n\t    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n\t      return { valid: false, error_number: 4, error: errors[4] }\n\t    }\n\t\n\t    /* 5th criterion: 3th field is a valid castle-string? */\n\t    if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n\t      return { valid: false, error_number: 5, error: errors[5] }\n\t    }\n\t\n\t    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n\t    if (!/^(w|b)$/.test(tokens[1])) {\n\t      return { valid: false, error_number: 6, error: errors[6] }\n\t    }\n\t\n\t    /* 7th criterion: 1st field contains 8 rows? */\n\t    var rows = tokens[0].split('/')\n\t    if (rows.length !== 8) {\n\t      return { valid: false, error_number: 7, error: errors[7] }\n\t    }\n\t\n\t    /* 8th criterion: every row is valid? */\n\t    for (var i = 0; i < rows.length; i++) {\n\t      /* check for right sum of fields AND not two numbers in succession */\n\t      var sum_fields = 0\n\t      var previous_was_number = false\n\t\n\t      for (var k = 0; k < rows[i].length; k++) {\n\t        if (!isNaN(rows[i][k])) {\n\t          if (previous_was_number) {\n\t            return { valid: false, error_number: 8, error: errors[8] }\n\t          }\n\t          sum_fields += parseInt(rows[i][k], 10)\n\t          previous_was_number = true\n\t        } else {\n\t          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n\t            return { valid: false, error_number: 9, error: errors[9] }\n\t          }\n\t          sum_fields += 1\n\t          previous_was_number = false\n\t        }\n\t      }\n\t      if (sum_fields !== 8) {\n\t        return { valid: false, error_number: 10, error: errors[10] }\n\t      }\n\t    }\n\t\n\t    if (\n\t      (tokens[3][1] == '3' && tokens[1] == 'w') ||\n\t      (tokens[3][1] == '6' && tokens[1] == 'b')\n\t    ) {\n\t      return { valid: false, error_number: 11, error: errors[11] }\n\t    }\n\t\n\t    /* everything's okay! */\n\t    return { valid: true, error_number: 0, error: errors[0] }\n\t  }\n\t\n\t  function generate_fen() {\n\t    var empty = 0\n\t    var fen = ''\n\t\n\t    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t      if (board[i] == null) {\n\t        empty++\n\t      } else {\n\t        if (empty > 0) {\n\t          fen += empty\n\t          empty = 0\n\t        }\n\t        var color = board[i].color\n\t        var piece = board[i].type\n\t\n\t        fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n\t      }\n\t\n\t      if ((i + 1) & 0x88) {\n\t        if (empty > 0) {\n\t          fen += empty\n\t        }\n\t\n\t        if (i !== SQUARES.h1) {\n\t          fen += '/'\n\t        }\n\t\n\t        empty = 0\n\t        i += 8\n\t      }\n\t    }\n\t\n\t    var cflags = ''\n\t    if (castling[WHITE] & BITS.KSIDE_CASTLE) {\n\t      cflags += 'K'\n\t    }\n\t    if (castling[WHITE] & BITS.QSIDE_CASTLE) {\n\t      cflags += 'Q'\n\t    }\n\t    if (castling[BLACK] & BITS.KSIDE_CASTLE) {\n\t      cflags += 'k'\n\t    }\n\t    if (castling[BLACK] & BITS.QSIDE_CASTLE) {\n\t      cflags += 'q'\n\t    }\n\t\n\t    /* do we have an empty castling flag? */\n\t    cflags = cflags || '-'\n\t    var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\n\t\n\t    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\n\t  }\n\t\n\t  function set_header(args) {\n\t    for (var i = 0; i < args.length; i += 2) {\n\t      if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n\t        header[args[i]] = args[i + 1]\n\t      }\n\t    }\n\t    return header\n\t  }\n\t\n\t  /* called when the initial board setup is changed with put() or remove().\n\t   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n\t   * equal to the default position, the SetUp and FEN are deleted\n\t   * the setup is only updated if history.length is zero, ie moves haven't been\n\t   * made.\n\t   */\n\t  function update_setup(fen) {\n\t    if (history.length > 0) return\n\t\n\t    if (fen !== DEFAULT_POSITION) {\n\t      header['SetUp'] = '1'\n\t      header['FEN'] = fen\n\t    } else {\n\t      delete header['SetUp']\n\t      delete header['FEN']\n\t    }\n\t  }\n\t\n\t  function get(square) {\n\t    var piece = board[SQUARES[square]]\n\t    return piece ? { type: piece.type, color: piece.color } : null\n\t  }\n\t\n\t  function put(piece, square) {\n\t    /* check for valid piece object */\n\t    if (!('type' in piece && 'color' in piece)) {\n\t      return false\n\t    }\n\t\n\t    /* check for piece */\n\t    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n\t      return false\n\t    }\n\t\n\t    /* check for valid square */\n\t    if (!(square in SQUARES)) {\n\t      return false\n\t    }\n\t\n\t    var sq = SQUARES[square]\n\t\n\t    /* don't let the user place more than one king */\n\t    if (\n\t      piece.type == KING &&\n\t      !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\n\t    ) {\n\t      return false\n\t    }\n\t\n\t    board[sq] = { type: piece.type, color: piece.color }\n\t    if (piece.type === KING) {\n\t      kings[piece.color] = sq\n\t    }\n\t\n\t    update_setup(generate_fen())\n\t\n\t    return true\n\t  }\n\t\n\t  function remove(square) {\n\t    var piece = get(square)\n\t    board[SQUARES[square]] = null\n\t    if (piece && piece.type === KING) {\n\t      kings[piece.color] = EMPTY\n\t    }\n\t\n\t    update_setup(generate_fen())\n\t\n\t    return piece\n\t  }\n\t\n\t  function build_move(board, from, to, flags, promotion) {\n\t    var move = {\n\t      color: turn,\n\t      from: from,\n\t      to: to,\n\t      flags: flags,\n\t      piece: board[from].type\n\t    }\n\t\n\t    if (promotion) {\n\t      move.flags |= BITS.PROMOTION\n\t      move.promotion = promotion\n\t    }\n\t\n\t    if (board[to]) {\n\t      move.captured = board[to].type\n\t    } else if (flags & BITS.EP_CAPTURE) {\n\t      move.captured = PAWN\n\t    }\n\t    return move\n\t  }\n\t\n\t  function generate_moves(options) {\n\t    function add_move(board, moves, from, to, flags) {\n\t      /* if pawn promotion */\n\t      if (\n\t        board[from].type === PAWN &&\n\t        (rank(to) === RANK_8 || rank(to) === RANK_1)\n\t      ) {\n\t        var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\n\t        for (var i = 0, len = pieces.length; i < len; i++) {\n\t          moves.push(build_move(board, from, to, flags, pieces[i]))\n\t        }\n\t      } else {\n\t        moves.push(build_move(board, from, to, flags))\n\t      }\n\t    }\n\t\n\t    var moves = []\n\t    var us = turn\n\t    var them = swap_color(us)\n\t    var second_rank = { b: RANK_7, w: RANK_2 }\n\t\n\t    var first_sq = SQUARES.a8\n\t    var last_sq = SQUARES.h1\n\t    var single_square = false\n\t\n\t    /* do we want legal moves? */\n\t    var legal =\n\t      typeof options !== 'undefined' && 'legal' in options\n\t        ? options.legal\n\t        : true\n\t\n\t    /* are we generating moves for a single square? */\n\t    if (typeof options !== 'undefined' && 'square' in options) {\n\t      if (options.square in SQUARES) {\n\t        first_sq = last_sq = SQUARES[options.square]\n\t        single_square = true\n\t      } else {\n\t        /* invalid square */\n\t        return []\n\t      }\n\t    }\n\t\n\t    for (var i = first_sq; i <= last_sq; i++) {\n\t      /* did we run off the end of the board */\n\t      if (i & 0x88) {\n\t        i += 7\n\t        continue\n\t      }\n\t\n\t      var piece = board[i]\n\t      if (piece == null || piece.color !== us) {\n\t        continue\n\t      }\n\t\n\t      if (piece.type === PAWN) {\n\t        /* single square, non-capturing */\n\t        var square = i + PAWN_OFFSETS[us][0]\n\t        if (board[square] == null) {\n\t          add_move(board, moves, i, square, BITS.NORMAL)\n\t\n\t          /* double square */\n\t          var square = i + PAWN_OFFSETS[us][1]\n\t          if (second_rank[us] === rank(i) && board[square] == null) {\n\t            add_move(board, moves, i, square, BITS.BIG_PAWN)\n\t          }\n\t        }\n\t\n\t        /* pawn captures */\n\t        for (j = 2; j < 4; j++) {\n\t          var square = i + PAWN_OFFSETS[us][j]\n\t          if (square & 0x88) continue\n\t\n\t          if (board[square] != null && board[square].color === them) {\n\t            add_move(board, moves, i, square, BITS.CAPTURE)\n\t          } else if (square === ep_square) {\n\t            add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\n\t          }\n\t        }\n\t      } else {\n\t        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n\t          var offset = PIECE_OFFSETS[piece.type][j]\n\t          var square = i\n\t\n\t          while (true) {\n\t            square += offset\n\t            if (square & 0x88) break\n\t\n\t            if (board[square] == null) {\n\t              add_move(board, moves, i, square, BITS.NORMAL)\n\t            } else {\n\t              if (board[square].color === us) break\n\t              add_move(board, moves, i, square, BITS.CAPTURE)\n\t              break\n\t            }\n\t\n\t            /* break, if knight or king */\n\t            if (piece.type === 'n' || piece.type === 'k') break\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /* check for castling if: a) we're generating all moves, or b) we're doing\n\t     * single square move generation on the king's square\n\t     */\n\t    if (!single_square || last_sq === kings[us]) {\n\t      /* king-side castling */\n\t      if (castling[us] & BITS.KSIDE_CASTLE) {\n\t        var castling_from = kings[us]\n\t        var castling_to = castling_from + 2\n\t\n\t        if (\n\t          board[castling_from + 1] == null &&\n\t          board[castling_to] == null &&\n\t          !attacked(them, kings[us]) &&\n\t          !attacked(them, castling_from + 1) &&\n\t          !attacked(them, castling_to)\n\t        ) {\n\t          add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\n\t        }\n\t      }\n\t\n\t      /* queen-side castling */\n\t      if (castling[us] & BITS.QSIDE_CASTLE) {\n\t        var castling_from = kings[us]\n\t        var castling_to = castling_from - 2\n\t\n\t        if (\n\t          board[castling_from - 1] == null &&\n\t          board[castling_from - 2] == null &&\n\t          board[castling_from - 3] == null &&\n\t          !attacked(them, kings[us]) &&\n\t          !attacked(them, castling_from - 1) &&\n\t          !attacked(them, castling_to)\n\t        ) {\n\t          add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\n\t        }\n\t      }\n\t    }\n\t\n\t    /* return all pseudo-legal moves (this includes moves that allow the king\n\t     * to be captured)\n\t     */\n\t    if (!legal) {\n\t      return moves\n\t    }\n\t\n\t    /* filter out illegal moves */\n\t    var legal_moves = []\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      make_move(moves[i])\n\t      if (!king_attacked(us)) {\n\t        legal_moves.push(moves[i])\n\t      }\n\t      undo_move()\n\t    }\n\t\n\t    return legal_moves\n\t  }\n\t\n\t  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n\t   * (SAN)\n\t   *\n\t   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n\t   * disambiguation bugs in Fritz and Chessbase.  See below:\n\t   *\n\t   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n\t   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n\t   * 4. ... Ne7 is technically the valid SAN\n\t   */\n\t  function move_to_san(move, sloppy) {\n\t    var output = ''\n\t\n\t    if (move.flags & BITS.KSIDE_CASTLE) {\n\t      output = 'O-O'\n\t    } else if (move.flags & BITS.QSIDE_CASTLE) {\n\t      output = 'O-O-O'\n\t    } else {\n\t      var disambiguator = get_disambiguator(move, sloppy)\n\t\n\t      if (move.piece !== PAWN) {\n\t        output += move.piece.toUpperCase() + disambiguator\n\t      }\n\t\n\t      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n\t        if (move.piece === PAWN) {\n\t          output += algebraic(move.from)[0]\n\t        }\n\t        output += 'x'\n\t      }\n\t\n\t      output += algebraic(move.to)\n\t\n\t      if (move.flags & BITS.PROMOTION) {\n\t        output += '=' + move.promotion.toUpperCase()\n\t      }\n\t    }\n\t\n\t    make_move(move)\n\t    if (in_check()) {\n\t      if (in_checkmate()) {\n\t        output += '#'\n\t      } else {\n\t        output += '+'\n\t      }\n\t    }\n\t    undo_move()\n\t\n\t    return output\n\t  }\n\t\n\t  // parses all of the decorators out of a SAN string\n\t  function stripped_san(move) {\n\t    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n\t  }\n\t\n\t  function attacked(color, square) {\n\t    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t      /* did we run off the end of the board */\n\t      if (i & 0x88) {\n\t        i += 7\n\t        continue\n\t      }\n\t\n\t      /* if empty square or wrong color */\n\t      if (board[i] == null || board[i].color !== color) continue\n\t\n\t      var piece = board[i]\n\t      var difference = i - square\n\t      var index = difference + 119\n\t\n\t      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n\t        if (piece.type === PAWN) {\n\t          if (difference > 0) {\n\t            if (piece.color === WHITE) return true\n\t          } else {\n\t            if (piece.color === BLACK) return true\n\t          }\n\t          continue\n\t        }\n\t\n\t        /* if the piece is a knight or a king */\n\t        if (piece.type === 'n' || piece.type === 'k') return true\n\t\n\t        var offset = RAYS[index]\n\t        var j = i + offset\n\t\n\t        var blocked = false\n\t        while (j !== square) {\n\t          if (board[j] != null) {\n\t            blocked = true\n\t            break\n\t          }\n\t          j += offset\n\t        }\n\t\n\t        if (!blocked) return true\n\t      }\n\t    }\n\t\n\t    return false\n\t  }\n\t\n\t  function king_attacked(color) {\n\t    return attacked(swap_color(color), kings[color])\n\t  }\n\t\n\t  function in_check() {\n\t    return king_attacked(turn)\n\t  }\n\t\n\t  function in_checkmate() {\n\t    return in_check() && generate_moves().length === 0\n\t  }\n\t\n\t  function in_stalemate() {\n\t    return !in_check() && generate_moves().length === 0\n\t  }\n\t\n\t  function insufficient_material() {\n\t    var pieces = {}\n\t    var bishops = []\n\t    var num_pieces = 0\n\t    var sq_color = 0\n\t\n\t    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t      sq_color = (sq_color + 1) % 2\n\t      if (i & 0x88) {\n\t        i += 7\n\t        continue\n\t      }\n\t\n\t      var piece = board[i]\n\t      if (piece) {\n\t        pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n\t        if (piece.type === BISHOP) {\n\t          bishops.push(sq_color)\n\t        }\n\t        num_pieces++\n\t      }\n\t    }\n\t\n\t    /* k vs. k */\n\t    if (num_pieces === 2) {\n\t      return true\n\t    } else if (\n\t      /* k vs. kn .... or .... k vs. kb */\n\t      num_pieces === 3 &&\n\t      (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n\t    ) {\n\t      return true\n\t    } else if (num_pieces === pieces[BISHOP] + 2) {\n\t      /* kb vs. kb where any number of bishops are all on the same color */\n\t      var sum = 0\n\t      var len = bishops.length\n\t      for (var i = 0; i < len; i++) {\n\t        sum += bishops[i]\n\t      }\n\t      if (sum === 0 || sum === len) {\n\t        return true\n\t      }\n\t    }\n\t\n\t    return false\n\t  }\n\t\n\t  function in_threefold_repetition() {\n\t    /* TODO: while this function is fine for casual use, a better\n\t     * implementation would use a Zobrist key (instead of FEN). the\n\t     * Zobrist key would be maintained in the make_move/undo_move functions,\n\t     * avoiding the costly that we do below.\n\t     */\n\t    var moves = []\n\t    var positions = {}\n\t    var repetition = false\n\t\n\t    while (true) {\n\t      var move = undo_move()\n\t      if (!move) break\n\t      moves.push(move)\n\t    }\n\t\n\t    while (true) {\n\t      /* remove the last two fields in the FEN string, they're not needed\n\t       * when checking for draw by rep */\n\t      var fen = generate_fen()\n\t        .split(' ')\n\t        .slice(0, 4)\n\t        .join(' ')\n\t\n\t      /* has the position occurred three or move times */\n\t      positions[fen] = fen in positions ? positions[fen] + 1 : 1\n\t      if (positions[fen] >= 3) {\n\t        repetition = true\n\t      }\n\t\n\t      if (!moves.length) {\n\t        break\n\t      }\n\t      make_move(moves.pop())\n\t    }\n\t\n\t    return repetition\n\t  }\n\t\n\t  function push(move) {\n\t    history.push({\n\t      move: move,\n\t      kings: { b: kings.b, w: kings.w },\n\t      turn: turn,\n\t      castling: { b: castling.b, w: castling.w },\n\t      ep_square: ep_square,\n\t      half_moves: half_moves,\n\t      move_number: move_number\n\t    })\n\t  }\n\t\n\t  function make_move(move) {\n\t    var us = turn\n\t    var them = swap_color(us)\n\t    push(move)\n\t\n\t    board[move.to] = board[move.from]\n\t    board[move.from] = null\n\t\n\t    /* if ep capture, remove the captured pawn */\n\t    if (move.flags & BITS.EP_CAPTURE) {\n\t      if (turn === BLACK) {\n\t        board[move.to - 16] = null\n\t      } else {\n\t        board[move.to + 16] = null\n\t      }\n\t    }\n\t\n\t    /* if pawn promotion, replace with new piece */\n\t    if (move.flags & BITS.PROMOTION) {\n\t      board[move.to] = { type: move.promotion, color: us }\n\t    }\n\t\n\t    /* if we moved the king */\n\t    if (board[move.to].type === KING) {\n\t      kings[board[move.to].color] = move.to\n\t\n\t      /* if we castled, move the rook next to the king */\n\t      if (move.flags & BITS.KSIDE_CASTLE) {\n\t        var castling_to = move.to - 1\n\t        var castling_from = move.to + 1\n\t        board[castling_to] = board[castling_from]\n\t        board[castling_from] = null\n\t      } else if (move.flags & BITS.QSIDE_CASTLE) {\n\t        var castling_to = move.to + 1\n\t        var castling_from = move.to - 2\n\t        board[castling_to] = board[castling_from]\n\t        board[castling_from] = null\n\t      }\n\t\n\t      /* turn off castling */\n\t      castling[us] = ''\n\t    }\n\t\n\t    /* turn off castling if we move a rook */\n\t    if (castling[us]) {\n\t      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n\t        if (\n\t          move.from === ROOKS[us][i].square &&\n\t          castling[us] & ROOKS[us][i].flag\n\t        ) {\n\t          castling[us] ^= ROOKS[us][i].flag\n\t          break\n\t        }\n\t      }\n\t    }\n\t\n\t    /* turn off castling if we capture a rook */\n\t    if (castling[them]) {\n\t      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n\t        if (\n\t          move.to === ROOKS[them][i].square &&\n\t          castling[them] & ROOKS[them][i].flag\n\t        ) {\n\t          castling[them] ^= ROOKS[them][i].flag\n\t          break\n\t        }\n\t      }\n\t    }\n\t\n\t    /* if big pawn move, update the en passant square */\n\t    if (move.flags & BITS.BIG_PAWN) {\n\t      if (turn === 'b') {\n\t        ep_square = move.to - 16\n\t      } else {\n\t        ep_square = move.to + 16\n\t      }\n\t    } else {\n\t      ep_square = EMPTY\n\t    }\n\t\n\t    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n\t    if (move.piece === PAWN) {\n\t      half_moves = 0\n\t    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n\t      half_moves = 0\n\t    } else {\n\t      half_moves++\n\t    }\n\t\n\t    if (turn === BLACK) {\n\t      move_number++\n\t    }\n\t    turn = swap_color(turn)\n\t  }\n\t\n\t  function undo_move() {\n\t    var old = history.pop()\n\t    if (old == null) {\n\t      return null\n\t    }\n\t\n\t    var move = old.move\n\t    kings = old.kings\n\t    turn = old.turn\n\t    castling = old.castling\n\t    ep_square = old.ep_square\n\t    half_moves = old.half_moves\n\t    move_number = old.move_number\n\t\n\t    var us = turn\n\t    var them = swap_color(turn)\n\t\n\t    board[move.from] = board[move.to]\n\t    board[move.from].type = move.piece // to undo any promotions\n\t    board[move.to] = null\n\t\n\t    if (move.flags & BITS.CAPTURE) {\n\t      board[move.to] = { type: move.captured, color: them }\n\t    } else if (move.flags & BITS.EP_CAPTURE) {\n\t      var index\n\t      if (us === BLACK) {\n\t        index = move.to - 16\n\t      } else {\n\t        index = move.to + 16\n\t      }\n\t      board[index] = { type: PAWN, color: them }\n\t    }\n\t\n\t    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n\t      var castling_to, castling_from\n\t      if (move.flags & BITS.KSIDE_CASTLE) {\n\t        castling_to = move.to + 1\n\t        castling_from = move.to - 1\n\t      } else if (move.flags & BITS.QSIDE_CASTLE) {\n\t        castling_to = move.to - 2\n\t        castling_from = move.to + 1\n\t      }\n\t\n\t      board[castling_to] = board[castling_from]\n\t      board[castling_from] = null\n\t    }\n\t\n\t    return move\n\t  }\n\t\n\t  /* this function is used to uniquely identify ambiguous moves */\n\t  function get_disambiguator(move, sloppy) {\n\t    var moves = generate_moves({ legal: !sloppy })\n\t\n\t    var from = move.from\n\t    var to = move.to\n\t    var piece = move.piece\n\t\n\t    var ambiguities = 0\n\t    var same_rank = 0\n\t    var same_file = 0\n\t\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      var ambig_from = moves[i].from\n\t      var ambig_to = moves[i].to\n\t      var ambig_piece = moves[i].piece\n\t\n\t      /* if a move of the same piece type ends on the same to square, we'll\n\t       * need to add a disambiguator to the algebraic notation\n\t       */\n\t      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n\t        ambiguities++\n\t\n\t        if (rank(from) === rank(ambig_from)) {\n\t          same_rank++\n\t        }\n\t\n\t        if (file(from) === file(ambig_from)) {\n\t          same_file++\n\t        }\n\t      }\n\t    }\n\t\n\t    if (ambiguities > 0) {\n\t      /* if there exists a similar moving piece on the same rank and file as\n\t       * the move in question, use the square as the disambiguator\n\t       */\n\t      if (same_rank > 0 && same_file > 0) {\n\t        return algebraic(from)\n\t      } else if (same_file > 0) {\n\t        /* if the moving piece rests on the same file, use the rank symbol as the\n\t         * disambiguator\n\t         */\n\t        return algebraic(from).charAt(1)\n\t      } else {\n\t        /* else use the file symbol */\n\t        return algebraic(from).charAt(0)\n\t      }\n\t    }\n\t\n\t    return ''\n\t  }\n\t\n\t  function ascii() {\n\t    var s = '   +------------------------+\\n'\n\t    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t      /* display the rank */\n\t      if (file(i) === 0) {\n\t        s += ' ' + '87654321'[rank(i)] + ' |'\n\t      }\n\t\n\t      /* empty piece */\n\t      if (board[i] == null) {\n\t        s += ' . '\n\t      } else {\n\t        var piece = board[i].type\n\t        var color = board[i].color\n\t        var symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n\t        s += ' ' + symbol + ' '\n\t      }\n\t\n\t      if ((i + 1) & 0x88) {\n\t        s += '|\\n'\n\t        i += 8\n\t      }\n\t    }\n\t    s += '   +------------------------+\\n'\n\t    s += '     a  b  c  d  e  f  g  h\\n'\n\t\n\t    return s\n\t  }\n\t\n\t  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n\t  function move_from_san(move, sloppy) {\n\t    // strip off any move decorations: e.g Nf3+?!\n\t    var clean_move = stripped_san(move)\n\t\n\t    // if we're using the sloppy parser run a regex to grab piece, to, and from\n\t    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n\t    if (sloppy) {\n\t      var matches = clean_move.match(\n\t        /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n\t      )\n\t      if (matches) {\n\t        var piece = matches[1]\n\t        var from = matches[2]\n\t        var to = matches[3]\n\t        var promotion = matches[4]\n\t      }\n\t    }\n\t\n\t    var moves = generate_moves()\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      // try the strict parser first, then the sloppy parser if requested\n\t      // by the user\n\t      if (\n\t        clean_move === stripped_san(move_to_san(moves[i])) ||\n\t        (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))\n\t      ) {\n\t        return moves[i]\n\t      } else {\n\t        if (\n\t          matches &&\n\t          (!piece || piece.toLowerCase() == moves[i].piece) &&\n\t          SQUARES[from] == moves[i].from &&\n\t          SQUARES[to] == moves[i].to &&\n\t          (!promotion || promotion.toLowerCase() == moves[i].promotion)\n\t        ) {\n\t          return moves[i]\n\t        }\n\t      }\n\t    }\n\t\n\t    return null\n\t  }\n\t\n\t  /*****************************************************************************\n\t   * UTILITY FUNCTIONS\n\t   ****************************************************************************/\n\t  function rank(i) {\n\t    return i >> 4\n\t  }\n\t\n\t  function file(i) {\n\t    return i & 15\n\t  }\n\t\n\t  function algebraic(i) {\n\t    var f = file(i),\n\t      r = rank(i)\n\t    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\n\t  }\n\t\n\t  function swap_color(c) {\n\t    return c === WHITE ? BLACK : WHITE\n\t  }\n\t\n\t  function is_digit(c) {\n\t    return '0123456789'.indexOf(c) !== -1\n\t  }\n\t\n\t  /* pretty = external move object */\n\t  function make_pretty(ugly_move) {\n\t    var move = clone(ugly_move)\n\t    move.san = move_to_san(move, false)\n\t    move.to = algebraic(move.to)\n\t    move.from = algebraic(move.from)\n\t\n\t    var flags = ''\n\t\n\t    for (var flag in BITS) {\n\t      if (BITS[flag] & move.flags) {\n\t        flags += FLAGS[flag]\n\t      }\n\t    }\n\t    move.flags = flags\n\t\n\t    return move\n\t  }\n\t\n\t  function clone(obj) {\n\t    var dupe = obj instanceof Array ? [] : {}\n\t\n\t    for (var property in obj) {\n\t      if (typeof property === 'object') {\n\t        dupe[property] = clone(obj[property])\n\t      } else {\n\t        dupe[property] = obj[property]\n\t      }\n\t    }\n\t\n\t    return dupe\n\t  }\n\t\n\t  function trim(str) {\n\t    return str.replace(/^\\s+|\\s+$/g, '')\n\t  }\n\t\n\t  /*****************************************************************************\n\t   * DEBUGGING UTILITIES\n\t   ****************************************************************************/\n\t  function perft(depth) {\n\t    var moves = generate_moves({ legal: false })\n\t    var nodes = 0\n\t    var color = turn\n\t\n\t    for (var i = 0, len = moves.length; i < len; i++) {\n\t      make_move(moves[i])\n\t      if (!king_attacked(color)) {\n\t        if (depth - 1 > 0) {\n\t          var child_nodes = perft(depth - 1)\n\t          nodes += child_nodes\n\t        } else {\n\t          nodes++\n\t        }\n\t      }\n\t      undo_move()\n\t    }\n\t\n\t    return nodes\n\t  }\n\t\n\t  return {\n\t    /***************************************************************************\n\t     * PUBLIC CONSTANTS (is there a better way to do this?)\n\t     **************************************************************************/\n\t    WHITE: WHITE,\n\t    BLACK: BLACK,\n\t    PAWN: PAWN,\n\t    KNIGHT: KNIGHT,\n\t    BISHOP: BISHOP,\n\t    ROOK: ROOK,\n\t    QUEEN: QUEEN,\n\t    KING: KING,\n\t    SQUARES: (function() {\n\t      /* from the ECMA-262 spec (section 12.6.4):\n\t       * \"The mechanics of enumerating the properties ... is\n\t       * implementation dependent\"\n\t       * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n\t       * ordered correctly\n\t       */\n\t      var keys = []\n\t      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t        if (i & 0x88) {\n\t          i += 7\n\t          continue\n\t        }\n\t        keys.push(algebraic(i))\n\t      }\n\t      return keys\n\t    })(),\n\t    FLAGS: FLAGS,\n\t\n\t    /***************************************************************************\n\t     * PUBLIC API\n\t     **************************************************************************/\n\t    load: function(fen) {\n\t      return load(fen)\n\t    },\n\t\n\t    reset: function() {\n\t      return reset()\n\t    },\n\t\n\t    moves: function(options) {\n\t      /* The internal representation of a chess move is in 0x88 format, and\n\t       * not meant to be human-readable.  The code below converts the 0x88\n\t       * square coordinates to algebraic coordinates.  It also prunes an\n\t       * unnecessary move keys resulting from a verbose call.\n\t       */\n\t\n\t      var ugly_moves = generate_moves(options)\n\t      var moves = []\n\t\n\t      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n\t        /* does the user want a full move object (most likely not), or just\n\t         * SAN\n\t         */\n\t        if (\n\t          typeof options !== 'undefined' &&\n\t          'verbose' in options &&\n\t          options.verbose\n\t        ) {\n\t          moves.push(make_pretty(ugly_moves[i]))\n\t        } else {\n\t          moves.push(move_to_san(ugly_moves[i], false))\n\t        }\n\t      }\n\t\n\t      return moves\n\t    },\n\t\n\t    in_check: function() {\n\t      return in_check()\n\t    },\n\t\n\t    in_checkmate: function() {\n\t      return in_checkmate()\n\t    },\n\t\n\t    in_stalemate: function() {\n\t      return in_stalemate()\n\t    },\n\t\n\t    in_draw: function() {\n\t      return (\n\t        half_moves >= 100 ||\n\t        in_stalemate() ||\n\t        insufficient_material() ||\n\t        in_threefold_repetition()\n\t      )\n\t    },\n\t\n\t    insufficient_material: function() {\n\t      return insufficient_material()\n\t    },\n\t\n\t    in_threefold_repetition: function() {\n\t      return in_threefold_repetition()\n\t    },\n\t\n\t    game_over: function() {\n\t      return (\n\t        half_moves >= 100 ||\n\t        in_checkmate() ||\n\t        in_stalemate() ||\n\t        insufficient_material() ||\n\t        in_threefold_repetition()\n\t      )\n\t    },\n\t\n\t    validate_fen: function(fen) {\n\t      return validate_fen(fen)\n\t    },\n\t\n\t    fen: function() {\n\t      return generate_fen()\n\t    },\n\t\n\t    board: function() {\n\t      var output = [],\n\t        row = []\n\t\n\t      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n\t        if (board[i] == null) {\n\t          row.push(null)\n\t        } else {\n\t          row.push({ type: board[i].type, color: board[i].color })\n\t        }\n\t        if ((i + 1) & 0x88) {\n\t          output.push(row)\n\t          row = []\n\t          i += 8\n\t        }\n\t      }\n\t\n\t      return output\n\t    },\n\t\n\t    pgn: function(options) {\n\t      /* using the specification from http://www.chessclub.com/help/PGN-spec\n\t       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n\t       */\n\t      var newline =\n\t        typeof options === 'object' && typeof options.newline_char === 'string'\n\t          ? options.newline_char\n\t          : '\\n'\n\t      var max_width =\n\t        typeof options === 'object' && typeof options.max_width === 'number'\n\t          ? options.max_width\n\t          : 0\n\t      var result = []\n\t      var header_exists = false\n\t\n\t      /* add the PGN header headerrmation */\n\t      for (var i in header) {\n\t        /* TODO: order of enumerated properties in header object is not\n\t         * guaranteed, see ECMA-262 spec (section 12.6.4)\n\t         */\n\t        result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\n\t        header_exists = true\n\t      }\n\t\n\t      if (header_exists && history.length) {\n\t        result.push(newline)\n\t      }\n\t\n\t      /* pop all of history onto reversed_history */\n\t      var reversed_history = []\n\t      while (history.length > 0) {\n\t        reversed_history.push(undo_move())\n\t      }\n\t\n\t      var moves = []\n\t      var move_string = ''\n\t\n\t      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n\t      while (reversed_history.length > 0) {\n\t        var move = reversed_history.pop()\n\t\n\t        /* if the position started with black to move, start PGN with 1. ... */\n\t        if (!history.length && move.color === 'b') {\n\t          move_string = move_number + '. ...'\n\t        } else if (move.color === 'w') {\n\t          /* store the previous generated move_string if we have one */\n\t          if (move_string.length) {\n\t            moves.push(move_string)\n\t          }\n\t          move_string = move_number + '.'\n\t        }\n\t\n\t        move_string = move_string + ' ' + move_to_san(move, false)\n\t        make_move(move)\n\t      }\n\t\n\t      /* are there any other leftover moves? */\n\t      if (move_string.length) {\n\t        moves.push(move_string)\n\t      }\n\t\n\t      /* is there a result? */\n\t      if (typeof header.Result !== 'undefined') {\n\t        moves.push(header.Result)\n\t      }\n\t\n\t      /* history should be back to what is was before we started generating PGN,\n\t       * so join together moves\n\t       */\n\t      if (max_width === 0) {\n\t        return result.join('') + moves.join(' ')\n\t      }\n\t\n\t      /* wrap the PGN output at max_width */\n\t      var current_width = 0\n\t      for (var i = 0; i < moves.length; i++) {\n\t        /* if the current move will push past max_width */\n\t        if (current_width + moves[i].length > max_width && i !== 0) {\n\t          /* don't end the line with whitespace */\n\t          if (result[result.length - 1] === ' ') {\n\t            result.pop()\n\t          }\n\t\n\t          result.push(newline)\n\t          current_width = 0\n\t        } else if (i !== 0) {\n\t          result.push(' ')\n\t          current_width++\n\t        }\n\t        result.push(moves[i])\n\t        current_width += moves[i].length\n\t      }\n\t\n\t      return result.join('')\n\t    },\n\t\n\t    load_pgn: function(pgn, options) {\n\t      // allow the user to specify the sloppy move parser to work around over\n\t      // disambiguation bugs in Fritz and Chessbase\n\t      var sloppy =\n\t        typeof options !== 'undefined' && 'sloppy' in options\n\t          ? options.sloppy\n\t          : false\n\t\n\t      function mask(str) {\n\t        return str.replace(/\\\\/g, '\\\\')\n\t      }\n\t\n\t      function has_keys(object) {\n\t        for (var key in object) {\n\t          return true\n\t        }\n\t        return false\n\t      }\n\t\n\t      function parse_pgn_header(header, options) {\n\t        var newline_char =\n\t          typeof options === 'object' &&\n\t          typeof options.newline_char === 'string'\n\t            ? options.newline_char\n\t            : '\\r?\\n'\n\t        var header_obj = {}\n\t        var headers = header.split(new RegExp(mask(newline_char)))\n\t        var key = ''\n\t        var value = ''\n\t\n\t        for (var i = 0; i < headers.length; i++) {\n\t          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1')\n\t          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1')\n\t          if (trim(key).length > 0) {\n\t            header_obj[key] = value\n\t          }\n\t        }\n\t\n\t        return header_obj\n\t      }\n\t\n\t      var newline_char =\n\t        typeof options === 'object' && typeof options.newline_char === 'string'\n\t          ? options.newline_char\n\t          : '\\r?\\n'\n\t\n\t      // RegExp to split header. Takes advantage of the fact that header and movetext\n\t      // will always have a blank line between them (ie, two newline_char's).\n\t      // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\r?\\n){2}/\n\t      var header_regex = new RegExp(\n\t        '^(\\\\[((?:' +\n\t          mask(newline_char) +\n\t          ')|.)*\\\\])' +\n\t          '(?:' +\n\t          mask(newline_char) +\n\t          '){2}'\n\t      )\n\t\n\t      // If no header given, begin with moves.\n\t      var header_string = header_regex.test(pgn)\n\t        ? header_regex.exec(pgn)[1]\n\t        : ''\n\t\n\t      // Put the board in the starting position\n\t      reset()\n\t\n\t      /* parse PGN header */\n\t      var headers = parse_pgn_header(header_string, options)\n\t      for (var key in headers) {\n\t        set_header([key, headers[key]])\n\t      }\n\t\n\t      /* load the starting position indicated by [Setup '1'] and\n\t       * [FEN position] */\n\t      if (headers['SetUp'] === '1') {\n\t        if (!('FEN' in headers && load(headers['FEN'], true))) {\n\t          // second argument to load: don't clear the headers\n\t          return false\n\t        }\n\t      }\n\t\n\t      /* delete header to get the moves */\n\t      var ms = pgn\n\t        .replace(header_string, '')\n\t        .replace(new RegExp(mask(newline_char), 'g'), ' ')\n\t\n\t      /* delete comments */\n\t      ms = ms.replace(/(\\{[^}]+\\})+?/g, '')\n\t\n\t      /* delete recursive annotation variations */\n\t      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n\t      while (rav_regex.test(ms)) {\n\t        ms = ms.replace(rav_regex, '')\n\t      }\n\t\n\t      /* delete move numbers */\n\t      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\t\n\t      /* delete ... indicating black to move */\n\t      ms = ms.replace(/\\.\\.\\./g, '')\n\t\n\t      /* delete numeric annotation glyphs */\n\t      ms = ms.replace(/\\$\\d+/g, '')\n\t\n\t      /* trim and get array of moves */\n\t      var moves = trim(ms).split(new RegExp(/\\s+/))\n\t\n\t      /* delete empty entries */\n\t      moves = moves\n\t        .join(',')\n\t        .replace(/,,+/g, ',')\n\t        .split(',')\n\t      var move = ''\n\t\n\t      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n\t        move = move_from_san(moves[half_move], sloppy)\n\t\n\t        /* move not possible! (don't clear the board to examine to show the\n\t         * latest valid position)\n\t         */\n\t        if (move == null) {\n\t          return false\n\t        } else {\n\t          make_move(move)\n\t        }\n\t      }\n\t\n\t      /* examine last move */\n\t      move = moves[moves.length - 1]\n\t      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n\t        if (has_keys(header) && typeof header.Result === 'undefined') {\n\t          set_header(['Result', move])\n\t        }\n\t      } else {\n\t        move = move_from_san(move, sloppy)\n\t        if (move == null) {\n\t          return false\n\t        } else {\n\t          make_move(move)\n\t        }\n\t      }\n\t      return true\n\t    },\n\t\n\t    header: function() {\n\t      return set_header(arguments)\n\t    },\n\t\n\t    ascii: function() {\n\t      return ascii()\n\t    },\n\t\n\t    turn: function() {\n\t      return turn\n\t    },\n\t\n\t    move: function(move, options) {\n\t      /* The move function can be called with in the following parameters:\n\t       *\n\t       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n\t       *\n\t       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n\t       *         to :'h8',      fields are ignored)\n\t       *         promotion: 'q',\n\t       *      })\n\t       */\n\t\n\t      // allow the user to specify the sloppy move parser to work around over\n\t      // disambiguation bugs in Fritz and Chessbase\n\t      var sloppy =\n\t        typeof options !== 'undefined' && 'sloppy' in options\n\t          ? options.sloppy\n\t          : false\n\t\n\t      var move_obj = null\n\t\n\t      if (typeof move === 'string') {\n\t        move_obj = move_from_san(move, sloppy)\n\t      } else if (typeof move === 'object') {\n\t        var moves = generate_moves()\n\t\n\t        /* convert the pretty move object to an ugly move object */\n\t        for (var i = 0, len = moves.length; i < len; i++) {\n\t          if (\n\t            move.from === algebraic(moves[i].from) &&\n\t            move.to === algebraic(moves[i].to) &&\n\t            (!('promotion' in moves[i]) ||\n\t              move.promotion === moves[i].promotion)\n\t          ) {\n\t            move_obj = moves[i]\n\t            break\n\t          }\n\t        }\n\t      }\n\t\n\t      /* failed to find move */\n\t      if (!move_obj) {\n\t        return null\n\t      }\n\t\n\t      /* need to make a copy of move because we can't generate SAN after the\n\t       * move is made\n\t       */\n\t      var pretty_move = make_pretty(move_obj)\n\t\n\t      make_move(move_obj)\n\t\n\t      return pretty_move\n\t    },\n\t\n\t    undo: function() {\n\t      var move = undo_move()\n\t      return move ? make_pretty(move) : null\n\t    },\n\t\n\t    clear: function() {\n\t      return clear()\n\t    },\n\t\n\t    put: function(piece, square) {\n\t      return put(piece, square)\n\t    },\n\t\n\t    get: function(square) {\n\t      return get(square)\n\t    },\n\t\n\t    remove: function(square) {\n\t      return remove(square)\n\t    },\n\t\n\t    perft: function(depth) {\n\t      return perft(depth)\n\t    },\n\t\n\t    square_color: function(square) {\n\t      if (square in SQUARES) {\n\t        var sq_0x88 = SQUARES[square]\n\t        return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\n\t      }\n\t\n\t      return null\n\t    },\n\t\n\t    history: function(options) {\n\t      var reversed_history = []\n\t      var move_history = []\n\t      var verbose =\n\t        typeof options !== 'undefined' &&\n\t        'verbose' in options &&\n\t        options.verbose\n\t\n\t      while (history.length > 0) {\n\t        reversed_history.push(undo_move())\n\t      }\n\t\n\t      while (reversed_history.length > 0) {\n\t        var move = reversed_history.pop()\n\t        if (verbose) {\n\t          move_history.push(make_pretty(move))\n\t        } else {\n\t          move_history.push(move_to_san(move))\n\t        }\n\t        make_move(move)\n\t      }\n\t\n\t      return move_history\n\t    }\n\t  }\n\t}\n\t\n\t/* export Chess object if using node or any other CommonJS compatible\n\t * environment */\n\tif (true) exports.Chess = Chess\n\t/* export Chess object for any RequireJS compatible environment */\n\tif (true)\n\t  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t    return Chess\n\t  }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar io = __webpack_require__(114);\r\n\tvar uuid = __webpack_require__(167);\r\n\t\r\n\tvar shhFactory = function(uri, next) {\r\n\t  var instance = {\r\n\t    watchers: {},\r\n\t\r\n\t    connect: function(uri) {\r\n\t      this.socket = io.connect(uri);\r\n\t    },\r\n\t\r\n\t    newIdentity: function() {\r\n\t      this.identity = '0x' + uuid.v4().replace(/\\-/g, '').substr(0,20);\r\n\t      this.socket.emit('register', {address: this.identity});\r\n\t      return this.identity;\r\n\t    },\r\n\t\r\n\t    register: function(identity) {\r\n\t      this.socket.emit('register', {address: identity});\r\n\t    },\r\n\t\r\n\t    post: function(options) {\r\n\t      if (typeof options.topic != 'undefined') {\r\n\t        options.topic = options.topic.join('');\r\n\t      }\r\n\t      this.socket.emit('send', options);\r\n\t    },\r\n\t\r\n\t    watch: function(options) {\r\n\t      var topic = '';\r\n\t      if (typeof options.topic != 'undefined') {\r\n\t        topic = options.topic.join('');\r\n\t      }\r\n\t      var ev = {\r\n\t        arrived: function(fun){\r\n\t          if (typeof instance.watchers[this.topic] == 'undefined') {\r\n\t            instance.watchers[this.topic] = [fun];\r\n\t          } else {\r\n\t            instance.watchers[this.topic].push(fun);\r\n\t          }  \r\n\t        },\r\n\t        remove: function() {\r\n\t          if (typeof instance.watchers[this.topic] != 'undefined') {\r\n\t            delete instance.watchers[this.topic];\r\n\t          }\r\n\t        }\r\n\t      };\r\n\t      ev.topic = topic;\r\n\t      return ev;\r\n\t    },\r\n\t\r\n\t    arrivedTopic: function(topic, data) {\r\n\t      if (typeof this.watchers[topic] == 'undefined') {\r\n\t        // Message for not-watched topic.\r\n\t        return;\r\n\t      }\r\n\t      this.watchers[topic].forEach(function(watcher) {\r\n\t        watcher(data);\r\n\t      });\r\n\t    }\r\n\t  };\r\n\t  instance.connect(uri);\r\n\t  instance.socket.on('connect', function() {\r\n\t    if (typeof next == 'function') {\r\n\t      next(instance);\r\n\t    }\r\n\t  });\r\n\t  instance.socket.on('receive', function(data) {\r\n\t    instance.arrivedTopic(data.topic, data);\r\n\t  });\r\n\t  return instance;\r\n\t};\r\n\t\r\n\tmodule.exports = shhFactory;\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar url = __webpack_require__(115);\n\tvar parser = __webpack_require__(121);\n\tvar Manager = __webpack_require__(131);\n\tvar debug = __webpack_require__(117)('socket.io-client');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\n\t * Managers cache.\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\n\t * Looks up an existing `Manager` for multiplexing.\n\t * If the user summons:\n\t *\n\t *   `io('http://localhost/a');`\n\t *   `io('http://localhost/b');`\n\t *\n\t * We reuse the existing instance based on same scheme/port/host,\n\t * and we initialize sockets for each namespace.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction lookup (uri, opts) {\n\t  if (typeof uri === 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] ||\n\t                      false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t    debug('ignoring socket cache for %s', source);\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t      debug('new io instance for %s', source);\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t  if (parsed.query && !opts.query) {\n\t    opts.query = parsed.query;\n\t  } else if (opts && 'object' === typeof opts.query) {\n\t    opts.query = encodeQueryString(opts.query);\n\t  }\n\t  return io.socket(parsed.path, opts);\n\t}\n\t/**\n\t *  Helper method to parse query objects to string.\n\t * @param {object} query\n\t * @returns {string}\n\t */\n\tfunction encodeQueryString (obj) {\n\t  var str = [];\n\t  for (var p in obj) {\n\t    if (obj.hasOwnProperty(p)) {\n\t      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n\t    }\n\t  }\n\t  return str.join('&');\n\t}\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\n\t * `connect`.\n\t *\n\t * @param {String} uri\n\t * @api public\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\n\t * Expose constructors for standalone build.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Manager = __webpack_require__(131);\n\texports.Socket = __webpack_require__(161);\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parseuri = __webpack_require__(116);\n\tvar debug = __webpack_require__(117)('socket.io-client:url');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @param {String} url\n\t * @param {Object} An object meant to mimic window.location.\n\t *                 Defaults to window.location.\n\t * @api public\n\t */\n\t\n\tfunction url (uri, loc) {\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  loc = loc || global.location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' === typeof uri) {\n\t    if ('/' === uri.charAt(0)) {\n\t      if ('/' === uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t      debug('protocol-less url %s', uri);\n\t      if ('undefined' !== typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t    debug('parse %s', uri);\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\t\n\t  return obj;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Parses an URI\r\n\t *\r\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n\t * @api private\r\n\t */\r\n\t\r\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\t\r\n\tvar parts = [\r\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n\t];\r\n\t\r\n\tmodule.exports = function parseuri(str) {\r\n\t    var src = str,\r\n\t        b = str.indexOf('['),\r\n\t        e = str.indexOf(']');\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n\t    }\r\n\t\r\n\t    var m = re.exec(str || ''),\r\n\t        uri = {},\r\n\t        i = 14;\r\n\t\r\n\t    while (i--) {\r\n\t        uri[parts[i]] = m[i] || '';\r\n\t    }\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        uri.source = src;\r\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n\t        uri.ipv6uri = true;\r\n\t    }\r\n\t\r\n\t    return uri;\r\n\t};\r\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(119);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  try {\n\t    return JSON.stringify(v);\n\t  } catch (err) {\n\t    return '[UnexpectedJSONParseError]: ' + err.message;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    return exports.storage.debug;\n\t  } catch(e) {}\n\t\n\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t  if (typeof process !== 'undefined' && 'env' in process) {\n\t    return process.env.DEBUG;\n\t  }\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(118)))\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug.debug = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(120);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    // apply env-specific formatting\n\t    args = exports.formatArgs.apply(self, args);\n\t\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000\n\tvar m = s * 60\n\tvar h = m * 60\n\tvar d = h * 24\n\tvar y = d * 365.25\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (val, options) {\n\t  options = options || {}\n\t  var type = typeof val\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val)\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ?\n\t\t\t\tfmtLong(val) :\n\t\t\t\tfmtShort(val)\n\t  }\n\t  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n\t}\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = String(str)\n\t  if (str.length > 10000) {\n\t    return\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n\t  if (!match) {\n\t    return\n\t  }\n\t  var n = parseFloat(match[1])\n\t  var type = (match[2] || 'ms').toLowerCase()\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n\n\t    default:\n\t      return undefined\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd'\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h'\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm'\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's'\n\t  }\n\t  return ms + 'ms'\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms'\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's'\n\t}\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(122)('socket.io-parser');\n\tvar json = __webpack_require__(125);\n\tvar Emitter = __webpack_require__(127);\n\tvar binary = __webpack_require__(128);\n\tvar isBuf = __webpack_require__(130);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t  debug('encoding packet %j', obj);\n\t\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  }\n\t  else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t  var str = '';\n\t  var nsp = false;\n\t\n\t  // first is type\n\t  str += obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n\t    str += obj.attachments;\n\t    str += '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' != obj.nsp) {\n\t    nsp = true;\n\t    str += obj.nsp;\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    if (nsp) {\n\t      str += ',';\n\t      nsp = false;\n\t    }\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    if (nsp) str += ',';\n\t    str += json.stringify(obj.data);\n\t  }\n\t\n\t  debug('encoded %j as %s', obj, str);\n\t  return str;\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an ecoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if ('string' == typeof obj) {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  }\n\t  else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  }\n\t  else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var p = {};\n\t  var i = 0;\n\t\n\t  // look up type\n\t  p.type = Number(str.charAt(0));\n\t  if (null == exports.types[p.type]) return error();\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) != '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) != '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' == str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' == c) break;\n\t      p.nsp += c;\n\t      if (i == str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    p = tryParse(p, str.substr(i));\n\t  }\n\t\n\t  debug('decoded %s as %j', str, p);\n\t  return p;\n\t}\n\t\n\tfunction tryParse(p, str) {\n\t  try {\n\t    p.data = json.parse(str);\n\t  } catch(e){\n\t    return error();\n\t  }\n\t  return p; \n\t};\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(data){\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error'\n\t  };\n\t}\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(123);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  return ('WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  return JSON.stringify(v);\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(124);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = Array.prototype.slice.call(arguments);\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    if ('function' === typeof exports.formatArgs) {\n\t      args = exports.formatArgs.apply(self, args);\n\t    }\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options){\n\t  options = options || {};\n\t  if ('string' == typeof val) return parse(val);\n\t  return options.long\n\t    ? long(val)\n\t    : short(val);\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = '' + str;\n\t  if (str.length > 10000) return;\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\t  if (!match) return;\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction short(ms) {\n\t  if (ms >= d) return Math.round(ms / d) + 'd';\n\t  if (ms >= h) return Math.round(ms / h) + 'h';\n\t  if (ms >= m) return Math.round(ms / m) + 'm';\n\t  if (ms >= s) return Math.round(ms / s) + 's';\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction long(ms) {\n\t  return plural(ms, d, 'day')\n\t    || plural(ms, h, 'hour')\n\t    || plural(ms, m, 'minute')\n\t    || plural(ms, s, 'second')\n\t    || ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) return;\n\t  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n\t;(function () {\n\t  // Detect the `define` function exposed by asynchronous module loaders. The\n\t  // strict `define` check is necessary for compatibility with `r.js`.\n\t  var isLoader = \"function\" === \"function\" && __webpack_require__(126);\n\t\n\t  // A set of types used to distinguish objects from primitives.\n\t  var objectTypes = {\n\t    \"function\": true,\n\t    \"object\": true\n\t  };\n\t\n\t  // Detect the `exports` object exposed by CommonJS implementations.\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  // Use the `global` object exposed by Node (including Browserify via\n\t  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n\t  // and the `window` object in browsers. Rhino exports a `global` function\n\t  // instead.\n\t  var root = objectTypes[typeof window] && window || this,\n\t      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\t\n\t  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n\t    root = freeGlobal;\n\t  }\n\t\n\t  // Public: Initializes JSON 3 using the given `context` object, attaching the\n\t  // `stringify` and `parse` functions to the specified `exports` object.\n\t  function runInContext(context, exports) {\n\t    context || (context = root[\"Object\"]());\n\t    exports || (exports = root[\"Object\"]());\n\t\n\t    // Native constructor aliases.\n\t    var Number = context[\"Number\"] || root[\"Number\"],\n\t        String = context[\"String\"] || root[\"String\"],\n\t        Object = context[\"Object\"] || root[\"Object\"],\n\t        Date = context[\"Date\"] || root[\"Date\"],\n\t        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n\t        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n\t        Math = context[\"Math\"] || root[\"Math\"],\n\t        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\t\n\t    // Delegate to the native `stringify` and `parse` implementations.\n\t    if (typeof nativeJSON == \"object\" && nativeJSON) {\n\t      exports.stringify = nativeJSON.stringify;\n\t      exports.parse = nativeJSON.parse;\n\t    }\n\t\n\t    // Convenience aliases.\n\t    var objectProto = Object.prototype,\n\t        getClass = objectProto.toString,\n\t        isProperty, forEach, undef;\n\t\n\t    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n\t    var isExtended = new Date(-3509827334573292);\n\t    try {\n\t      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n\t      // results for certain dates in Opera >= 10.53.\n\t      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n\t        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n\t        // but clips the values returned by the date methods to the range of\n\t        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n\t        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n\t    } catch (exception) {}\n\t\n\t    // Internal: Determines whether the native `JSON.stringify` and `parse`\n\t    // implementations are spec-compliant. Based on work by Ken Snyder.\n\t    function has(name) {\n\t      if (has[name] !== undef) {\n\t        // Return cached feature test result.\n\t        return has[name];\n\t      }\n\t      var isSupported;\n\t      if (name == \"bug-string-char-index\") {\n\t        // IE <= 7 doesn't support accessing string characters using square\n\t        // bracket notation. IE 8 only supports this for primitives.\n\t        isSupported = \"a\"[0] != \"a\";\n\t      } else if (name == \"json\") {\n\t        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n\t        // supported.\n\t        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n\t      } else {\n\t        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n\t        // Test `JSON.stringify`.\n\t        if (name == \"json-stringify\") {\n\t          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n\t          if (stringifySupported) {\n\t            // A test function object with a custom `toJSON` method.\n\t            (value = function () {\n\t              return 1;\n\t            }).toJSON = value;\n\t            try {\n\t              stringifySupported =\n\t                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n\t                // primitives as object literals.\n\t                stringify(0) === \"0\" &&\n\t                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n\t                // literals.\n\t                stringify(new Number()) === \"0\" &&\n\t                stringify(new String()) == '\"\"' &&\n\t                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n\t                // does not define a canonical JSON representation (this applies to\n\t                // objects with `toJSON` properties as well, *unless* they are nested\n\t                // within an object or array).\n\t                stringify(getClass) === undef &&\n\t                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n\t                // FF 3.1b3 pass this test.\n\t                stringify(undef) === undef &&\n\t                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n\t                // respectively, if the value is omitted entirely.\n\t                stringify() === undef &&\n\t                // FF 3.1b1, 2 throw an error if the given value is not a number,\n\t                // string, array, object, Boolean, or `null` literal. This applies to\n\t                // objects with custom `toJSON` methods as well, unless they are nested\n\t                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n\t                // methods entirely.\n\t                stringify(value) === \"1\" &&\n\t                stringify([value]) == \"[1]\" &&\n\t                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n\t                // `\"[null]\"`.\n\t                stringify([undef]) == \"[null]\" &&\n\t                // YUI 3.0.0b1 fails to serialize `null` literals.\n\t                stringify(null) == \"null\" &&\n\t                // FF 3.1b1, 2 halts serialization if an array contains a function:\n\t                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n\t                // elides non-JSON values from objects and arrays, unless they\n\t                // define custom `toJSON` methods.\n\t                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n\t                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n\t                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n\t                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n\t                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n\t                stringify(null, value) === \"1\" &&\n\t                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n\t                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n\t                // serialize extended years.\n\t                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n\t                // The milliseconds are optional in ES 5, but required in 5.1.\n\t                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n\t                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n\t                // four-digit years instead of six-digit years. Credits: @Yaffle.\n\t                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n\t                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n\t                // values less than 1000. Credits: @Yaffle.\n\t                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n\t            } catch (exception) {\n\t              stringifySupported = false;\n\t            }\n\t          }\n\t          isSupported = stringifySupported;\n\t        }\n\t        // Test `JSON.parse`.\n\t        if (name == \"json-parse\") {\n\t          var parse = exports.parse;\n\t          if (typeof parse == \"function\") {\n\t            try {\n\t              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n\t              // Conforming implementations should also coerce the initial argument to\n\t              // a string prior to parsing.\n\t              if (parse(\"0\") === 0 && !parse(false)) {\n\t                // Simple parsing test.\n\t                value = parse(serialized);\n\t                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n\t                if (parseSupported) {\n\t                  try {\n\t                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n\t                    parseSupported = !parse('\"\\t\"');\n\t                  } catch (exception) {}\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n\t                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n\t                      // certain octal literals.\n\t                      parseSupported = parse(\"01\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                  if (parseSupported) {\n\t                    try {\n\t                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n\t                      // points. These environments, along with FF 3.1b1 and 2,\n\t                      // also allow trailing commas in JSON objects and arrays.\n\t                      parseSupported = parse(\"1.\") !== 1;\n\t                    } catch (exception) {}\n\t                  }\n\t                }\n\t              }\n\t            } catch (exception) {\n\t              parseSupported = false;\n\t            }\n\t          }\n\t          isSupported = parseSupported;\n\t        }\n\t      }\n\t      return has[name] = !!isSupported;\n\t    }\n\t\n\t    if (!has(\"json\")) {\n\t      // Common `[[Class]]` name aliases.\n\t      var functionClass = \"[object Function]\",\n\t          dateClass = \"[object Date]\",\n\t          numberClass = \"[object Number]\",\n\t          stringClass = \"[object String]\",\n\t          arrayClass = \"[object Array]\",\n\t          booleanClass = \"[object Boolean]\";\n\t\n\t      // Detect incomplete support for accessing string characters by index.\n\t      var charIndexBuggy = has(\"bug-string-char-index\");\n\t\n\t      // Define additional utility methods if the `Date` methods are buggy.\n\t      if (!isExtended) {\n\t        var floor = Math.floor;\n\t        // A mapping between the months of the year and the number of days between\n\t        // January 1st and the first of the respective month.\n\t        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n\t        // Internal: Calculates the number of days between the Unix epoch and the\n\t        // first day of the given month.\n\t        var getDay = function (year, month) {\n\t          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n\t        };\n\t      }\n\t\n\t      // Internal: Determines if a property is a direct property of the given\n\t      // object. Delegates to the native `Object#hasOwnProperty` method.\n\t      if (!(isProperty = objectProto.hasOwnProperty)) {\n\t        isProperty = function (property) {\n\t          var members = {}, constructor;\n\t          if ((members.__proto__ = null, members.__proto__ = {\n\t            // The *proto* property cannot be set multiple times in recent\n\t            // versions of Firefox and SeaMonkey.\n\t            \"toString\": 1\n\t          }, members).toString != getClass) {\n\t            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n\t            // supports the mutable *proto* property.\n\t            isProperty = function (property) {\n\t              // Capture and break the object's prototype chain (see section 8.6.2\n\t              // of the ES 5.1 spec). The parenthesized expression prevents an\n\t              // unsafe transformation by the Closure Compiler.\n\t              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n\t              // Restore the original prototype chain.\n\t              this.__proto__ = original;\n\t              return result;\n\t            };\n\t          } else {\n\t            // Capture a reference to the top-level `Object` constructor.\n\t            constructor = members.constructor;\n\t            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n\t            // other environments.\n\t            isProperty = function (property) {\n\t              var parent = (this.constructor || constructor).prototype;\n\t              return property in this && !(property in parent && this[property] === parent[property]);\n\t            };\n\t          }\n\t          members = null;\n\t          return isProperty.call(this, property);\n\t        };\n\t      }\n\t\n\t      // Internal: Normalizes the `for...in` iteration algorithm across\n\t      // environments. Each enumerated key is yielded to a `callback` function.\n\t      forEach = function (object, callback) {\n\t        var size = 0, Properties, members, property;\n\t\n\t        // Tests for bugs in the current environment's `for...in` algorithm. The\n\t        // `valueOf` property inherits the non-enumerable flag from\n\t        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n\t        (Properties = function () {\n\t          this.valueOf = 0;\n\t        }).prototype.valueOf = 0;\n\t\n\t        // Iterate over a new instance of the `Properties` class.\n\t        members = new Properties();\n\t        for (property in members) {\n\t          // Ignore all properties inherited from `Object.prototype`.\n\t          if (isProperty.call(members, property)) {\n\t            size++;\n\t          }\n\t        }\n\t        Properties = members = null;\n\t\n\t        // Normalize the iteration algorithm.\n\t        if (!size) {\n\t          // A list of non-enumerable properties inherited from `Object.prototype`.\n\t          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n\t          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n\t          // properties.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, length;\n\t            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n\t            for (property in object) {\n\t              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n\t              // certain conditions; IE does not.\n\t              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for each non-enumerable property.\n\t            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n\t          };\n\t        } else if (size == 2) {\n\t          // Safari <= 2.0.4 enumerates shadowed properties twice.\n\t          forEach = function (object, callback) {\n\t            // Create a set of iterated properties.\n\t            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n\t            for (property in object) {\n\t              // Store each property name to prevent double enumeration. The\n\t              // `prototype` property of functions is not enumerated due to cross-\n\t              // environment inconsistencies.\n\t              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n\t                callback(property);\n\t              }\n\t            }\n\t          };\n\t        } else {\n\t          // No bugs detected; use the standard `for...in` algorithm.\n\t          forEach = function (object, callback) {\n\t            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n\t            for (property in object) {\n\t              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n\t                callback(property);\n\t              }\n\t            }\n\t            // Manually invoke the callback for the `constructor` property due to\n\t            // cross-environment inconsistencies.\n\t            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n\t              callback(property);\n\t            }\n\t          };\n\t        }\n\t        return forEach(object, callback);\n\t      };\n\t\n\t      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n\t      // `filter` argument may specify either a function that alters how object and\n\t      // array members are serialized, or an array of strings and numbers that\n\t      // indicates which properties should be serialized. The optional `width`\n\t      // argument may be either a string or number that specifies the indentation\n\t      // level of the output.\n\t      if (!has(\"json-stringify\")) {\n\t        // Internal: A map of control characters and their escaped equivalents.\n\t        var Escapes = {\n\t          92: \"\\\\\\\\\",\n\t          34: '\\\\\"',\n\t          8: \"\\\\b\",\n\t          12: \"\\\\f\",\n\t          10: \"\\\\n\",\n\t          13: \"\\\\r\",\n\t          9: \"\\\\t\"\n\t        };\n\t\n\t        // Internal: Converts `value` into a zero-padded string such that its\n\t        // length is at least equal to `width`. The `width` must be <= 6.\n\t        var leadingZeroes = \"000000\";\n\t        var toPaddedString = function (width, value) {\n\t          // The `|| 0` expression is necessary to work around a bug in\n\t          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n\t          return (leadingZeroes + (value || 0)).slice(-width);\n\t        };\n\t\n\t        // Internal: Double-quotes a string `value`, replacing all ASCII control\n\t        // characters (characters with code unit values between 0 and 31) with\n\t        // their escaped equivalents. This is an implementation of the\n\t        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n\t        var unicodePrefix = \"\\\\u00\";\n\t        var quote = function (value) {\n\t          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n\t          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n\t          for (; index < length; index++) {\n\t            var charCode = value.charCodeAt(index);\n\t            // If the character is a control character, append its Unicode or\n\t            // shorthand escape sequence; otherwise, append the character as-is.\n\t            switch (charCode) {\n\t              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n\t                result += Escapes[charCode];\n\t                break;\n\t              default:\n\t                if (charCode < 32) {\n\t                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n\t                  break;\n\t                }\n\t                result += useCharIndex ? symbols[index] : value.charAt(index);\n\t            }\n\t          }\n\t          return result + '\"';\n\t        };\n\t\n\t        // Internal: Recursively serializes an object. Implements the\n\t        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n\t        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n\t          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n\t          try {\n\t            // Necessary for host object support.\n\t            value = object[property];\n\t          } catch (exception) {}\n\t          if (typeof value == \"object\" && value) {\n\t            className = getClass.call(value);\n\t            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n\t              if (value > -1 / 0 && value < 1 / 0) {\n\t                // Dates are serialized according to the `Date#toJSON` method\n\t                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n\t                // for the ISO 8601 date time string format.\n\t                if (getDay) {\n\t                  // Manually compute the year, month, date, hours, minutes,\n\t                  // seconds, and milliseconds if the `getUTC*` methods are\n\t                  // buggy. Adapted from @Yaffle's `date-shim` project.\n\t                  date = floor(value / 864e5);\n\t                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n\t                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n\t                  date = 1 + date - getDay(year, month);\n\t                  // The `time` value specifies the time within the day (see ES\n\t                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n\t                  // to compute `A modulo B`, as the `%` operator does not\n\t                  // correspond to the `modulo` operation for negative numbers.\n\t                  time = (value % 864e5 + 864e5) % 864e5;\n\t                  // The hours, minutes, seconds, and milliseconds are obtained by\n\t                  // decomposing the time within the day. See section 15.9.1.10.\n\t                  hours = floor(time / 36e5) % 24;\n\t                  minutes = floor(time / 6e4) % 60;\n\t                  seconds = floor(time / 1e3) % 60;\n\t                  milliseconds = time % 1e3;\n\t                } else {\n\t                  year = value.getUTCFullYear();\n\t                  month = value.getUTCMonth();\n\t                  date = value.getUTCDate();\n\t                  hours = value.getUTCHours();\n\t                  minutes = value.getUTCMinutes();\n\t                  seconds = value.getUTCSeconds();\n\t                  milliseconds = value.getUTCMilliseconds();\n\t                }\n\t                // Serialize extended years correctly.\n\t                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n\t                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n\t                  // Months, dates, hours, minutes, and seconds should have two\n\t                  // digits; milliseconds should have three.\n\t                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n\t                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n\t                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n\t              } else {\n\t                value = null;\n\t              }\n\t            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n\t              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n\t              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n\t              // ignores all `toJSON` methods on these objects unless they are\n\t              // defined directly on an instance.\n\t              value = value.toJSON(property);\n\t            }\n\t          }\n\t          if (callback) {\n\t            // If a replacement function was provided, call it to obtain the value\n\t            // for serialization.\n\t            value = callback.call(object, property, value);\n\t          }\n\t          if (value === null) {\n\t            return \"null\";\n\t          }\n\t          className = getClass.call(value);\n\t          if (className == booleanClass) {\n\t            // Booleans are represented literally.\n\t            return \"\" + value;\n\t          } else if (className == numberClass) {\n\t            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n\t            // `\"null\"`.\n\t            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n\t          } else if (className == stringClass) {\n\t            // Strings are double-quoted and escaped.\n\t            return quote(\"\" + value);\n\t          }\n\t          // Recursively serialize objects and arrays.\n\t          if (typeof value == \"object\") {\n\t            // Check for cyclic structures. This is a linear search; performance\n\t            // is inversely proportional to the number of unique nested objects.\n\t            for (length = stack.length; length--;) {\n\t              if (stack[length] === value) {\n\t                // Cyclic structures cannot be serialized by `JSON.stringify`.\n\t                throw TypeError();\n\t              }\n\t            }\n\t            // Add the object to the stack of traversed objects.\n\t            stack.push(value);\n\t            results = [];\n\t            // Save the current indentation level and indent one additional level.\n\t            prefix = indentation;\n\t            indentation += whitespace;\n\t            if (className == arrayClass) {\n\t              // Recursively serialize array elements.\n\t              for (index = 0, length = value.length; index < length; index++) {\n\t                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n\t                results.push(element === undef ? \"null\" : element);\n\t              }\n\t              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n\t            } else {\n\t              // Recursively serialize object members. Members are selected from\n\t              // either a user-specified list of property names, or the object\n\t              // itself.\n\t              forEach(properties || value, function (property) {\n\t                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n\t                if (element !== undef) {\n\t                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n\t                  // is not the empty string, let `member` {quote(property) + \":\"}\n\t                  // be the concatenation of `member` and the `space` character.\"\n\t                  // The \"`space` character\" refers to the literal space\n\t                  // character, not the `space` {width} argument provided to\n\t                  // `JSON.stringify`.\n\t                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n\t                }\n\t              });\n\t              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n\t            }\n\t            // Remove the object from the traversed object stack.\n\t            stack.pop();\n\t            return result;\n\t          }\n\t        };\n\t\n\t        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n\t        exports.stringify = function (source, filter, width) {\n\t          var whitespace, callback, properties, className;\n\t          if (objectTypes[typeof filter] && filter) {\n\t            if ((className = getClass.call(filter)) == functionClass) {\n\t              callback = filter;\n\t            } else if (className == arrayClass) {\n\t              // Convert the property names array into a makeshift set.\n\t              properties = {};\n\t              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n\t            }\n\t          }\n\t          if (width) {\n\t            if ((className = getClass.call(width)) == numberClass) {\n\t              // Convert the `width` to an integer and create a string containing\n\t              // `width` number of space characters.\n\t              if ((width -= width % 1) > 0) {\n\t                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n\t              }\n\t            } else if (className == stringClass) {\n\t              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n\t            }\n\t          }\n\t          // Opera <= 7.54u2 discards the values associated with empty string keys\n\t          // (`\"\"`) only if they are used directly within an object member list\n\t          // (e.g., `!(\"\" in { \"\": 1})`).\n\t          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n\t        };\n\t      }\n\t\n\t      // Public: Parses a JSON source string.\n\t      if (!has(\"json-parse\")) {\n\t        var fromCharCode = String.fromCharCode;\n\t\n\t        // Internal: A map of escaped control characters and their unescaped\n\t        // equivalents.\n\t        var Unescapes = {\n\t          92: \"\\\\\",\n\t          34: '\"',\n\t          47: \"/\",\n\t          98: \"\\b\",\n\t          116: \"\\t\",\n\t          110: \"\\n\",\n\t          102: \"\\f\",\n\t          114: \"\\r\"\n\t        };\n\t\n\t        // Internal: Stores the parser state.\n\t        var Index, Source;\n\t\n\t        // Internal: Resets the parser state and throws a `SyntaxError`.\n\t        var abort = function () {\n\t          Index = Source = null;\n\t          throw SyntaxError();\n\t        };\n\t\n\t        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n\t        // the end of the source string. A token may be a string, number, `null`\n\t        // literal, or Boolean literal.\n\t        var lex = function () {\n\t          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n\t          while (Index < length) {\n\t            charCode = source.charCodeAt(Index);\n\t            switch (charCode) {\n\t              case 9: case 10: case 13: case 32:\n\t                // Skip whitespace tokens, including tabs, carriage returns, line\n\t                // feeds, and space characters.\n\t                Index++;\n\t                break;\n\t              case 123: case 125: case 91: case 93: case 58: case 44:\n\t                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n\t                // the current position.\n\t                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n\t                Index++;\n\t                return value;\n\t              case 34:\n\t                // `\"` delimits a JSON string; advance to the next character and\n\t                // begin parsing the string. String tokens are prefixed with the\n\t                // sentinel `@` character to distinguish them from punctuators and\n\t                // end-of-string tokens.\n\t                for (value = \"@\", Index++; Index < length;) {\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode < 32) {\n\t                    // Unescaped ASCII control characters (those with a code unit\n\t                    // less than the space character) are not permitted.\n\t                    abort();\n\t                  } else if (charCode == 92) {\n\t                    // A reverse solidus (`\\`) marks the beginning of an escaped\n\t                    // control character (including `\"`, `\\`, and `/`) or Unicode\n\t                    // escape sequence.\n\t                    charCode = source.charCodeAt(++Index);\n\t                    switch (charCode) {\n\t                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n\t                        // Revive escaped control characters.\n\t                        value += Unescapes[charCode];\n\t                        Index++;\n\t                        break;\n\t                      case 117:\n\t                        // `\\u` marks the beginning of a Unicode escape sequence.\n\t                        // Advance to the first character and validate the\n\t                        // four-digit code point.\n\t                        begin = ++Index;\n\t                        for (position = Index + 4; Index < position; Index++) {\n\t                          charCode = source.charCodeAt(Index);\n\t                          // A valid sequence comprises four hexdigits (case-\n\t                          // insensitive) that form a single hexadecimal value.\n\t                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n\t                            // Invalid Unicode escape sequence.\n\t                            abort();\n\t                          }\n\t                        }\n\t                        // Revive the escaped character.\n\t                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n\t                        break;\n\t                      default:\n\t                        // Invalid escape sequence.\n\t                        abort();\n\t                    }\n\t                  } else {\n\t                    if (charCode == 34) {\n\t                      // An unescaped double-quote character marks the end of the\n\t                      // string.\n\t                      break;\n\t                    }\n\t                    charCode = source.charCodeAt(Index);\n\t                    begin = Index;\n\t                    // Optimize for the common case where a string is valid.\n\t                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n\t                      charCode = source.charCodeAt(++Index);\n\t                    }\n\t                    // Append the string as-is.\n\t                    value += source.slice(begin, Index);\n\t                  }\n\t                }\n\t                if (source.charCodeAt(Index) == 34) {\n\t                  // Advance to the next character and return the revived string.\n\t                  Index++;\n\t                  return value;\n\t                }\n\t                // Unterminated string.\n\t                abort();\n\t              default:\n\t                // Parse numbers and literals.\n\t                begin = Index;\n\t                // Advance past the negative sign, if one is specified.\n\t                if (charCode == 45) {\n\t                  isSigned = true;\n\t                  charCode = source.charCodeAt(++Index);\n\t                }\n\t                // Parse an integer or floating-point value.\n\t                if (charCode >= 48 && charCode <= 57) {\n\t                  // Leading zeroes are interpreted as octal literals.\n\t                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n\t                    // Illegal octal literal.\n\t                    abort();\n\t                  }\n\t                  isSigned = false;\n\t                  // Parse the integer component.\n\t                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n\t                  // Floats cannot contain a leading decimal point; however, this\n\t                  // case is already accounted for by the parser.\n\t                  if (source.charCodeAt(Index) == 46) {\n\t                    position = ++Index;\n\t                    // Parse the decimal component.\n\t                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal trailing decimal.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Parse exponents. The `e` denoting the exponent is\n\t                  // case-insensitive.\n\t                  charCode = source.charCodeAt(Index);\n\t                  if (charCode == 101 || charCode == 69) {\n\t                    charCode = source.charCodeAt(++Index);\n\t                    // Skip past the sign following the exponent, if one is\n\t                    // specified.\n\t                    if (charCode == 43 || charCode == 45) {\n\t                      Index++;\n\t                    }\n\t                    // Parse the exponential component.\n\t                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n\t                    if (position == Index) {\n\t                      // Illegal empty exponent.\n\t                      abort();\n\t                    }\n\t                    Index = position;\n\t                  }\n\t                  // Coerce the parsed value to a JavaScript number.\n\t                  return +source.slice(begin, Index);\n\t                }\n\t                // A negative sign may only precede numbers.\n\t                if (isSigned) {\n\t                  abort();\n\t                }\n\t                // `true`, `false`, and `null` literals.\n\t                if (source.slice(Index, Index + 4) == \"true\") {\n\t                  Index += 4;\n\t                  return true;\n\t                } else if (source.slice(Index, Index + 5) == \"false\") {\n\t                  Index += 5;\n\t                  return false;\n\t                } else if (source.slice(Index, Index + 4) == \"null\") {\n\t                  Index += 4;\n\t                  return null;\n\t                }\n\t                // Unrecognized token.\n\t                abort();\n\t            }\n\t          }\n\t          // Return the sentinel `$` character if the parser has reached the end\n\t          // of the source string.\n\t          return \"$\";\n\t        };\n\t\n\t        // Internal: Parses a JSON `value` token.\n\t        var get = function (value) {\n\t          var results, hasMembers;\n\t          if (value == \"$\") {\n\t            // Unexpected end of input.\n\t            abort();\n\t          }\n\t          if (typeof value == \"string\") {\n\t            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n\t              // Remove the sentinel `@` character.\n\t              return value.slice(1);\n\t            }\n\t            // Parse object and array literals.\n\t            if (value == \"[\") {\n\t              // Parses a JSON array, returning a new JavaScript array.\n\t              results = [];\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing square bracket marks the end of the array literal.\n\t                if (value == \"]\") {\n\t                  break;\n\t                }\n\t                // If the array literal contains elements, the current token\n\t                // should be a comma separating the previous element from the\n\t                // next.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"]\") {\n\t                      // Unexpected trailing `,` in array literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each array element.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Elisions and leading commas are not permitted.\n\t                if (value == \",\") {\n\t                  abort();\n\t                }\n\t                results.push(get(value));\n\t              }\n\t              return results;\n\t            } else if (value == \"{\") {\n\t              // Parses a JSON object, returning a new JavaScript object.\n\t              results = {};\n\t              for (;; hasMembers || (hasMembers = true)) {\n\t                value = lex();\n\t                // A closing curly brace marks the end of the object literal.\n\t                if (value == \"}\") {\n\t                  break;\n\t                }\n\t                // If the object literal contains members, the current token\n\t                // should be a comma separator.\n\t                if (hasMembers) {\n\t                  if (value == \",\") {\n\t                    value = lex();\n\t                    if (value == \"}\") {\n\t                      // Unexpected trailing `,` in object literal.\n\t                      abort();\n\t                    }\n\t                  } else {\n\t                    // A `,` must separate each object member.\n\t                    abort();\n\t                  }\n\t                }\n\t                // Leading commas are not permitted, object property names must be\n\t                // double-quoted strings, and a `:` must separate each property\n\t                // name and value.\n\t                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n\t                  abort();\n\t                }\n\t                results[value.slice(1)] = get(lex());\n\t              }\n\t              return results;\n\t            }\n\t            // Unexpected token encountered.\n\t            abort();\n\t          }\n\t          return value;\n\t        };\n\t\n\t        // Internal: Updates a traversed object member.\n\t        var update = function (source, property, callback) {\n\t          var element = walk(source, property, callback);\n\t          if (element === undef) {\n\t            delete source[property];\n\t          } else {\n\t            source[property] = element;\n\t          }\n\t        };\n\t\n\t        // Internal: Recursively traverses a parsed JSON object, invoking the\n\t        // `callback` function for each value. This is an implementation of the\n\t        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n\t        var walk = function (source, property, callback) {\n\t          var value = source[property], length;\n\t          if (typeof value == \"object\" && value) {\n\t            // `forEach` can't be used to traverse an array in Opera <= 8.54\n\t            // because its `Object#hasOwnProperty` implementation returns `false`\n\t            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n\t            if (getClass.call(value) == arrayClass) {\n\t              for (length = value.length; length--;) {\n\t                update(value, length, callback);\n\t              }\n\t            } else {\n\t              forEach(value, function (property) {\n\t                update(value, property, callback);\n\t              });\n\t            }\n\t          }\n\t          return callback.call(source, property, value);\n\t        };\n\t\n\t        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n\t        exports.parse = function (source, callback) {\n\t          var result, value;\n\t          Index = 0;\n\t          Source = \"\" + source;\n\t          result = get(lex());\n\t          // If a JSON string contains multiple tokens, it is invalid.\n\t          if (lex() != \"$\") {\n\t            abort();\n\t          }\n\t          // Reset the parser state.\n\t          Index = Source = null;\n\t          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n\t        };\n\t      }\n\t    }\n\t\n\t    exports[\"runInContext\"] = runInContext;\n\t    return exports;\n\t  }\n\t\n\t  if (freeExports && !isLoader) {\n\t    // Export for CommonJS environments.\n\t    runInContext(root, freeExports);\n\t  } else {\n\t    // Export for web browsers and JavaScript engines.\n\t    var nativeJSON = root.JSON,\n\t        previousJSON = root[\"JSON3\"],\n\t        isRestored = false;\n\t\n\t    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n\t      // Public: Restores the original value of the global `JSON` object and\n\t      // returns a reference to the `JSON3` object.\n\t      \"noConflict\": function () {\n\t        if (!isRestored) {\n\t          isRestored = true;\n\t          root.JSON = nativeJSON;\n\t          root[\"JSON3\"] = previousJSON;\n\t          nativeJSON = previousJSON = null;\n\t        }\n\t        return JSON3;\n\t      }\n\t    }));\n\t\n\t    root.JSON = {\n\t      \"parse\": JSON3.parse,\n\t      \"stringify\": JSON3.stringify\n\t    };\n\t  }\n\t\n\t  // Export for asynchronous module loaders.\n\t  if (isLoader) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return JSON3;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t}).call(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(63)(module), (function() { return this; }())))\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(129);\n\tvar isBuf = __webpack_require__(130);\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet){\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t\n\t  function _deconstructPacket(data) {\n\t    if (!data) return data;\n\t\n\t    if (isBuf(data)) {\n\t      var placeholder = { _placeholder: true, num: buffers.length };\n\t      buffers.push(data);\n\t      return placeholder;\n\t    } else if (isArray(data)) {\n\t      var newData = new Array(data.length);\n\t      for (var i = 0; i < data.length; i++) {\n\t        newData[i] = _deconstructPacket(data[i]);\n\t      }\n\t      return newData;\n\t    } else if ('object' == typeof data && !(data instanceof Date)) {\n\t      var newData = {};\n\t      for (var key in data) {\n\t        newData[key] = _deconstructPacket(data[key]);\n\t      }\n\t      return newData;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  var curPlaceHolder = 0;\n\t\n\t  function _reconstructPacket(data) {\n\t    if (data && data._placeholder) {\n\t      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t      return buf;\n\t    } else if (isArray(data)) {\n\t      for (var i = 0; i < data.length; i++) {\n\t        data[i] = _reconstructPacket(data[i]);\n\t      }\n\t      return data;\n\t    } else if (data && 'object' == typeof data) {\n\t      for (var key in data) {\n\t        data[key] = _reconstructPacket(data[key]);\n\t      }\n\t      return data;\n\t    }\n\t    return data;\n\t  }\n\t\n\t  packet.data = _reconstructPacket(packet.data);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((global.Blob && obj instanceof Blob) ||\n\t        (global.File && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tmodule.exports = isBuf;\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar eio = __webpack_require__(132);\n\tvar Socket = __webpack_require__(161);\n\tvar Emitter = __webpack_require__(162);\n\tvar parser = __webpack_require__(121);\n\tvar on = __webpack_require__(164);\n\tvar bind = __webpack_require__(165);\n\tvar debug = __webpack_require__(117)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(159);\n\tvar Backoff = __webpack_require__(166);\n\t\n\t/**\n\t * IE6+ hasOwnProperty\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Module exports\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\n\t * `Manager` constructor.\n\t *\n\t * @param {String} engine instance or engine uri/opts\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Manager (uri, opts) {\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && ('object' === typeof uri)) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  this.encoder = new parser.Encoder();\n\t  this.decoder = new parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Propagate given event to sockets and emit on `this`\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.emitAll = function () {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Update `socket.id` of all sockets\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.updateSocketIds = function () {\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.engine.id;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\n\t * Sets the `reconnection` config.\n\t *\n\t * @param {Boolean} true/false if it should automatically reconnect\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnection = function (v) {\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the reconnection attempts config.\n\t *\n\t * @param {Number} max reconnection attempts before giving up\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function (v) {\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function (v) {\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the maximum delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the connection timeout. `false` to disable\n\t *\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.timeout = function (v) {\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Starts trying to reconnect if reconnection is enabled and we have not\n\t * started reconnecting yet\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function () {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Sets the current transport `socket`.\n\t *\n\t * @param {Function} optional, callback\n\t * @return {Manager} self\n\t * @api public\n\t */\n\t\n\tManager.prototype.open =\n\tManager.prototype.connect = function (fn, opts) {\n\t  debug('readyState %s', this.readyState);\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  debug('opening %s', this.uri);\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function () {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function (data) {\n\t    debug('connect_error');\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t    debug('connect attempt will timeout after %d', timeout);\n\t\n\t    // set timer\n\t    var timer = setTimeout(function () {\n\t      debug('connect attempt timed out after %d', timeout);\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport open.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onopen = function () {\n\t  debug('open');\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\n\t * Called upon a ping.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onping = function () {\n\t  this.lastPing = new Date();\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\n\t * Called upon a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onpong = function () {\n\t  this.emitAll('pong', new Date() - this.lastPing);\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondata = function (data) {\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\n\t * Called when parser fully decodes a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondecoded = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon socket error.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onerror = function (err) {\n\t  debug('error', err);\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\n\t * Creates a new socket for the given `nsp`.\n\t *\n\t * @return {Socket}\n\t * @api public\n\t */\n\t\n\tManager.prototype.socket = function (nsp, opts) {\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp, opts);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function () {\n\t      socket.id = self.engine.id;\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting evnet is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting () {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\n\t * Called upon a socket close.\n\t *\n\t * @param {Socket} socket\n\t */\n\t\n\tManager.prototype.destroy = function (socket) {\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\n\t * Writes a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tManager.prototype.packet = function (packet) {\n\t  debug('writing packet %j', packet);\n\t  var self = this;\n\t  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function (encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else { // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\n\t * If packet buffer is non-empty, begins encoding the\n\t * next packet in line.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.processPacketQueue = function () {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up transport subscriptions and packet buffer.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.cleanup = function () {\n\t  debug('cleanup');\n\t\n\t  var subsLength = this.subs.length;\n\t  for (var i = 0; i < subsLength; i++) {\n\t    var sub = this.subs.shift();\n\t    sub.destroy();\n\t  }\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\n\t * Close the current socket.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.close =\n\tManager.prototype.disconnect = function () {\n\t  debug('disconnect');\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' === this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\n\t * Called upon engine close.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onclose = function (reason) {\n\t  debug('onclose');\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Attempt a reconnection.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.reconnect = function () {\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t    debug('reconnect failed');\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t    debug('will wait %dms before reconnect attempt', delay);\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function () {\n\t      if (self.skipReconnect) return;\n\t\n\t      debug('attempting reconnect');\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function (err) {\n\t        if (err) {\n\t          debug('reconnect attempt error');\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t          debug('reconnect success');\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful reconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onreconnect = function () {\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(133);\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(134);\n\t\n\t/**\n\t * Exports parser\n\t *\n\t * @api public\n\t *\n\t */\n\tmodule.exports.parser = __webpack_require__(141);\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar transports = __webpack_require__(135);\n\tvar Emitter = __webpack_require__(149);\n\tvar debug = __webpack_require__(153)('engine.io-client:socket');\n\tvar index = __webpack_require__(159);\n\tvar parser = __webpack_require__(141);\n\tvar parseuri = __webpack_require__(116);\n\tvar parsejson = __webpack_require__(160);\n\tvar parseqs = __webpack_require__(150);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Socket;\n\t\n\t/**\n\t * Socket constructor.\n\t *\n\t * @param {String|Object} uri or options\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Socket (uri, opts) {\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\t\n\t  opts = opts || {};\n\t\n\t  if (uri && 'object' === typeof uri) {\n\t    opts = uri;\n\t    uri = null;\n\t  }\n\t\n\t  if (uri) {\n\t    uri = parseuri(uri);\n\t    opts.hostname = uri.host;\n\t    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n\t    opts.port = uri.port;\n\t    if (uri.query) opts.query = uri.query;\n\t  } else if (opts.host) {\n\t    opts.hostname = parseuri(opts.host).host;\n\t  }\n\t\n\t  this.secure = null != opts.secure ? opts.secure\n\t    : (global.location && 'https:' === location.protocol);\n\t\n\t  if (opts.hostname && !opts.port) {\n\t    // if no port is specified manually, use the protocol default\n\t    opts.port = this.secure ? '443' : '80';\n\t  }\n\t\n\t  this.agent = opts.agent || false;\n\t  this.hostname = opts.hostname ||\n\t    (global.location ? location.hostname : 'localhost');\n\t  this.port = opts.port || (global.location && location.port\n\t      ? location.port\n\t      : (this.secure ? 443 : 80));\n\t  this.query = opts.query || {};\n\t  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n\t  this.upgrade = false !== opts.upgrade;\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n\t  this.forceJSONP = !!opts.forceJSONP;\n\t  this.jsonp = false !== opts.jsonp;\n\t  this.forceBase64 = !!opts.forceBase64;\n\t  this.enablesXDR = !!opts.enablesXDR;\n\t  this.timestampParam = opts.timestampParam || 't';\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.transports = opts.transports || ['polling', 'websocket'];\n\t  this.readyState = '';\n\t  this.writeBuffer = [];\n\t  this.prevBufferLen = 0;\n\t  this.policyPort = opts.policyPort || 843;\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\n\t  this.binaryType = null;\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\t\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n\t    this.perMessageDeflate.threshold = 1024;\n\t  }\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx || null;\n\t  this.key = opts.key || null;\n\t  this.passphrase = opts.passphrase || null;\n\t  this.cert = opts.cert || null;\n\t  this.ca = opts.ca || null;\n\t  this.ciphers = opts.ciphers || null;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\t  this.forceNode = !!opts.forceNode;\n\t\n\t  // other options for Node.js client\n\t  var freeGlobal = typeof global === 'object' && global;\n\t  if (freeGlobal.global === freeGlobal) {\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n\t      this.extraHeaders = opts.extraHeaders;\n\t    }\n\t\n\t    if (opts.localAddress) {\n\t      this.localAddress = opts.localAddress;\n\t    }\n\t  }\n\t\n\t  // set on handshake\n\t  this.id = null;\n\t  this.upgrades = null;\n\t  this.pingInterval = null;\n\t  this.pingTimeout = null;\n\t\n\t  // set on heartbeat\n\t  this.pingIntervalTimer = null;\n\t  this.pingTimeoutTimer = null;\n\t\n\t  this.open();\n\t}\n\t\n\tSocket.priorWebsocketSuccess = false;\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.protocol = parser.protocol; // this is an int\n\t\n\t/**\n\t * Expose deps for legacy compatibility\n\t * and standalone browser access.\n\t */\n\t\n\tSocket.Socket = Socket;\n\tSocket.Transport = __webpack_require__(140);\n\tSocket.transports = __webpack_require__(135);\n\tSocket.parser = __webpack_require__(141);\n\t\n\t/**\n\t * Creates transport of the given type.\n\t *\n\t * @param {String} transport name\n\t * @return {Transport}\n\t * @api private\n\t */\n\t\n\tSocket.prototype.createTransport = function (name) {\n\t  debug('creating transport \"%s\"', name);\n\t  var query = clone(this.query);\n\t\n\t  // append engine.io protocol identifier\n\t  query.EIO = parser.protocol;\n\t\n\t  // transport name\n\t  query.transport = name;\n\t\n\t  // session id if we already have one\n\t  if (this.id) query.sid = this.id;\n\t\n\t  var transport = new transports[name]({\n\t    agent: this.agent,\n\t    hostname: this.hostname,\n\t    port: this.port,\n\t    secure: this.secure,\n\t    path: this.path,\n\t    query: query,\n\t    forceJSONP: this.forceJSONP,\n\t    jsonp: this.jsonp,\n\t    forceBase64: this.forceBase64,\n\t    enablesXDR: this.enablesXDR,\n\t    timestampRequests: this.timestampRequests,\n\t    timestampParam: this.timestampParam,\n\t    policyPort: this.policyPort,\n\t    socket: this,\n\t    pfx: this.pfx,\n\t    key: this.key,\n\t    passphrase: this.passphrase,\n\t    cert: this.cert,\n\t    ca: this.ca,\n\t    ciphers: this.ciphers,\n\t    rejectUnauthorized: this.rejectUnauthorized,\n\t    perMessageDeflate: this.perMessageDeflate,\n\t    extraHeaders: this.extraHeaders,\n\t    forceNode: this.forceNode,\n\t    localAddress: this.localAddress\n\t  });\n\t\n\t  return transport;\n\t};\n\t\n\tfunction clone (obj) {\n\t  var o = {};\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      o[i] = obj[i];\n\t    }\n\t  }\n\t  return o;\n\t}\n\t\n\t/**\n\t * Initializes transport to use and starts probe.\n\t *\n\t * @api private\n\t */\n\tSocket.prototype.open = function () {\n\t  var transport;\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n\t    transport = 'websocket';\n\t  } else if (0 === this.transports.length) {\n\t    // Emit error on next tick so it can be listened to\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.emit('error', 'No transports available');\n\t    }, 0);\n\t    return;\n\t  } else {\n\t    transport = this.transports[0];\n\t  }\n\t  this.readyState = 'opening';\n\t\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\n\t  try {\n\t    transport = this.createTransport(transport);\n\t  } catch (e) {\n\t    this.transports.shift();\n\t    this.open();\n\t    return;\n\t  }\n\t\n\t  transport.open();\n\t  this.setTransport(transport);\n\t};\n\t\n\t/**\n\t * Sets the current transport. Disables the existing one (if any).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setTransport = function (transport) {\n\t  debug('setting transport %s', transport.name);\n\t  var self = this;\n\t\n\t  if (this.transport) {\n\t    debug('clearing existing transport %s', this.transport.name);\n\t    this.transport.removeAllListeners();\n\t  }\n\t\n\t  // set up transport\n\t  this.transport = transport;\n\t\n\t  // set up transport listeners\n\t  transport\n\t  .on('drain', function () {\n\t    self.onDrain();\n\t  })\n\t  .on('packet', function (packet) {\n\t    self.onPacket(packet);\n\t  })\n\t  .on('error', function (e) {\n\t    self.onError(e);\n\t  })\n\t  .on('close', function () {\n\t    self.onClose('transport close');\n\t  });\n\t};\n\t\n\t/**\n\t * Probes a transport.\n\t *\n\t * @param {String} transport name\n\t * @api private\n\t */\n\t\n\tSocket.prototype.probe = function (name) {\n\t  debug('probing transport \"%s\"', name);\n\t  var transport = this.createTransport(name, { probe: 1 });\n\t  var failed = false;\n\t  var self = this;\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t\n\t  function onTransportOpen () {\n\t    if (self.onlyBinaryUpgrades) {\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n\t      failed = failed || upgradeLosesBinary;\n\t    }\n\t    if (failed) return;\n\t\n\t    debug('probe transport \"%s\" opened', name);\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\n\t    transport.once('packet', function (msg) {\n\t      if (failed) return;\n\t      if ('pong' === msg.type && 'probe' === msg.data) {\n\t        debug('probe transport \"%s\" pong', name);\n\t        self.upgrading = true;\n\t        self.emit('upgrading', transport);\n\t        if (!transport) return;\n\t        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\t\n\t        debug('pausing current transport \"%s\"', self.transport.name);\n\t        self.transport.pause(function () {\n\t          if (failed) return;\n\t          if ('closed' === self.readyState) return;\n\t          debug('changing transport and sending upgrade packet');\n\t\n\t          cleanup();\n\t\n\t          self.setTransport(transport);\n\t          transport.send([{ type: 'upgrade' }]);\n\t          self.emit('upgrade', transport);\n\t          transport = null;\n\t          self.upgrading = false;\n\t          self.flush();\n\t        });\n\t      } else {\n\t        debug('probe transport \"%s\" failed', name);\n\t        var err = new Error('probe error');\n\t        err.transport = transport.name;\n\t        self.emit('upgradeError', err);\n\t      }\n\t    });\n\t  }\n\t\n\t  function freezeTransport () {\n\t    if (failed) return;\n\t\n\t    // Any callback called by transport should be ignored since now\n\t    failed = true;\n\t\n\t    cleanup();\n\t\n\t    transport.close();\n\t    transport = null;\n\t  }\n\t\n\t  // Handle any error that happens while probing\n\t  function onerror (err) {\n\t    var error = new Error('probe error: ' + err);\n\t    error.transport = transport.name;\n\t\n\t    freezeTransport();\n\t\n\t    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\t\n\t    self.emit('upgradeError', error);\n\t  }\n\t\n\t  function onTransportClose () {\n\t    onerror('transport closed');\n\t  }\n\t\n\t  // When the socket is closed while we're probing\n\t  function onclose () {\n\t    onerror('socket closed');\n\t  }\n\t\n\t  // When the socket is upgraded while we're probing\n\t  function onupgrade (to) {\n\t    if (transport && to.name !== transport.name) {\n\t      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n\t      freezeTransport();\n\t    }\n\t  }\n\t\n\t  // Remove all listeners on the transport and on self\n\t  function cleanup () {\n\t    transport.removeListener('open', onTransportOpen);\n\t    transport.removeListener('error', onerror);\n\t    transport.removeListener('close', onTransportClose);\n\t    self.removeListener('close', onclose);\n\t    self.removeListener('upgrading', onupgrade);\n\t  }\n\t\n\t  transport.once('open', onTransportOpen);\n\t  transport.once('error', onerror);\n\t  transport.once('close', onTransportClose);\n\t\n\t  this.once('close', onclose);\n\t  this.once('upgrading', onupgrade);\n\t\n\t  transport.open();\n\t};\n\t\n\t/**\n\t * Called when connection is deemed open.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.onOpen = function () {\n\t  debug('socket open');\n\t  this.readyState = 'open';\n\t  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n\t  this.emit('open');\n\t  this.flush();\n\t\n\t  // we check for `readyState` in case an `open`\n\t  // listener already closed the socket\n\t  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n\t    debug('starting upgrade probes');\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n\t      this.probe(this.upgrades[i]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Handles a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onPacket = function (packet) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState ||\n\t      'closing' === this.readyState) {\n\t    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\t\n\t    this.emit('packet', packet);\n\t\n\t    // Socket is live - any packet counts\n\t    this.emit('heartbeat');\n\t\n\t    switch (packet.type) {\n\t      case 'open':\n\t        this.onHandshake(parsejson(packet.data));\n\t        break;\n\t\n\t      case 'pong':\n\t        this.setPing();\n\t        this.emit('pong');\n\t        break;\n\t\n\t      case 'error':\n\t        var err = new Error('server error');\n\t        err.code = packet.data;\n\t        this.onError(err);\n\t        break;\n\t\n\t      case 'message':\n\t        this.emit('data', packet.data);\n\t        this.emit('message', packet.data);\n\t        break;\n\t    }\n\t  } else {\n\t    debug('packet received with socket readyState \"%s\"', this.readyState);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon handshake completion.\n\t *\n\t * @param {Object} handshake obj\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHandshake = function (data) {\n\t  this.emit('handshake', data);\n\t  this.id = data.sid;\n\t  this.transport.query.sid = data.sid;\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\n\t  this.pingInterval = data.pingInterval;\n\t  this.pingTimeout = data.pingTimeout;\n\t  this.onOpen();\n\t  // In case open handler closes socket\n\t  if ('closed' === this.readyState) return;\n\t  this.setPing();\n\t\n\t  // Prolong liveness of socket on heartbeat\n\t  this.removeListener('heartbeat', this.onHeartbeat);\n\t  this.on('heartbeat', this.onHeartbeat);\n\t};\n\t\n\t/**\n\t * Resets ping timeout.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHeartbeat = function (timeout) {\n\t  clearTimeout(this.pingTimeoutTimer);\n\t  var self = this;\n\t  self.pingTimeoutTimer = setTimeout(function () {\n\t    if ('closed' === self.readyState) return;\n\t    self.onClose('ping timeout');\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\n\t};\n\t\n\t/**\n\t * Pings server every `this.pingInterval` and expects response\n\t * within `this.pingTimeout` or closes connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setPing = function () {\n\t  var self = this;\n\t  clearTimeout(self.pingIntervalTimer);\n\t  self.pingIntervalTimer = setTimeout(function () {\n\t    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n\t    self.ping();\n\t    self.onHeartbeat(self.pingTimeout);\n\t  }, self.pingInterval);\n\t};\n\t\n\t/**\n\t* Sends a ping packet.\n\t*\n\t* @api private\n\t*/\n\t\n\tSocket.prototype.ping = function () {\n\t  var self = this;\n\t  this.sendPacket('ping', function () {\n\t    self.emit('ping');\n\t  });\n\t};\n\t\n\t/**\n\t * Called on `drain` event\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onDrain = function () {\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\n\t\n\t  // setting prevBufferLen = 0 is very important\n\t  // for example, when upgrading, upgrade packet is sent over,\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\n\t  this.prevBufferLen = 0;\n\t\n\t  if (0 === this.writeBuffer.length) {\n\t    this.emit('drain');\n\t  } else {\n\t    this.flush();\n\t  }\n\t};\n\t\n\t/**\n\t * Flush write buffers.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.flush = function () {\n\t  if ('closed' !== this.readyState && this.transport.writable &&\n\t    !this.upgrading && this.writeBuffer.length) {\n\t    debug('flushing %d packets in socket', this.writeBuffer.length);\n\t    this.transport.send(this.writeBuffer);\n\t    // keep track of current length of writeBuffer\n\t    // splice writeBuffer and callbackBuffer on `drain`\n\t    this.prevBufferLen = this.writeBuffer.length;\n\t    this.emit('flush');\n\t  }\n\t};\n\t\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {String} message.\n\t * @param {Function} callback function.\n\t * @param {Object} options.\n\t * @return {Socket} for chaining.\n\t * @api public\n\t */\n\t\n\tSocket.prototype.write =\n\tSocket.prototype.send = function (msg, options, fn) {\n\t  this.sendPacket('message', msg, options, fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {String} packet type.\n\t * @param {String} data.\n\t * @param {Object} options.\n\t * @param {Function} callback function.\n\t * @api private\n\t */\n\t\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\n\t  if ('function' === typeof data) {\n\t    fn = data;\n\t    data = undefined;\n\t  }\n\t\n\t  if ('function' === typeof options) {\n\t    fn = options;\n\t    options = null;\n\t  }\n\t\n\t  if ('closing' === this.readyState || 'closed' === this.readyState) {\n\t    return;\n\t  }\n\t\n\t  options = options || {};\n\t  options.compress = false !== options.compress;\n\t\n\t  var packet = {\n\t    type: type,\n\t    data: data,\n\t    options: options\n\t  };\n\t  this.emit('packetCreate', packet);\n\t  this.writeBuffer.push(packet);\n\t  if (fn) this.once('flush', fn);\n\t  this.flush();\n\t};\n\t\n\t/**\n\t * Closes the connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.readyState = 'closing';\n\t\n\t    var self = this;\n\t\n\t    if (this.writeBuffer.length) {\n\t      this.once('drain', function () {\n\t        if (this.upgrading) {\n\t          waitForUpgrade();\n\t        } else {\n\t          close();\n\t        }\n\t      });\n\t    } else if (this.upgrading) {\n\t      waitForUpgrade();\n\t    } else {\n\t      close();\n\t    }\n\t  }\n\t\n\t  function close () {\n\t    self.onClose('forced close');\n\t    debug('socket closing - telling transport to close');\n\t    self.transport.close();\n\t  }\n\t\n\t  function cleanupAndClose () {\n\t    self.removeListener('upgrade', cleanupAndClose);\n\t    self.removeListener('upgradeError', cleanupAndClose);\n\t    close();\n\t  }\n\t\n\t  function waitForUpgrade () {\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\n\t    self.once('upgrade', cleanupAndClose);\n\t    self.once('upgradeError', cleanupAndClose);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport error\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onError = function (err) {\n\t  debug('socket error %j', err);\n\t  Socket.priorWebsocketSuccess = false;\n\t  this.emit('error', err);\n\t  this.onClose('transport error', err);\n\t};\n\t\n\t/**\n\t * Called upon transport close.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onClose = function (reason, desc) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n\t    debug('socket close with reason: \"%s\"', reason);\n\t    var self = this;\n\t\n\t    // clear timers\n\t    clearTimeout(this.pingIntervalTimer);\n\t    clearTimeout(this.pingTimeoutTimer);\n\t\n\t    // stop event from firing again for transport\n\t    this.transport.removeAllListeners('close');\n\t\n\t    // ensure transport won't stay open\n\t    this.transport.close();\n\t\n\t    // ignore further transport communication\n\t    this.transport.removeAllListeners();\n\t\n\t    // set ready state\n\t    this.readyState = 'closed';\n\t\n\t    // clear session id\n\t    this.id = null;\n\t\n\t    // emit close event\n\t    this.emit('close', reason, desc);\n\t\n\t    // clean buffers after, so users can still\n\t    // grab the buffers on `close` event\n\t    self.writeBuffer = [];\n\t    self.prevBufferLen = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Filters upgrades, returning only those matching client transports.\n\t *\n\t * @param {Array} server upgrades\n\t * @api private\n\t *\n\t */\n\t\n\tSocket.prototype.filterUpgrades = function (upgrades) {\n\t  var filteredUpgrades = [];\n\t  for (var i = 0, j = upgrades.length; i < j; i++) {\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n\t  }\n\t  return filteredUpgrades;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(136);\n\tvar XHR = __webpack_require__(138);\n\tvar JSONP = __webpack_require__(156);\n\tvar websocket = __webpack_require__(157);\n\t\n\t/**\n\t * Export transports.\n\t */\n\t\n\texports.polling = polling;\n\texports.websocket = websocket;\n\t\n\t/**\n\t * Polling transport polymorphic constructor.\n\t * Decides on xhr vs jsonp based on feature detection.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction polling (opts) {\n\t  var xhr;\n\t  var xd = false;\n\t  var xs = false;\n\t  var jsonp = false !== opts.jsonp;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    xd = opts.hostname !== location.hostname || port !== opts.port;\n\t    xs = opts.secure !== isSSL;\n\t  }\n\t\n\t  opts.xdomain = xd;\n\t  opts.xscheme = xs;\n\t  xhr = new XMLHttpRequest(opts);\n\t\n\t  if ('open' in xhr && !opts.forceJSONP) {\n\t    return new XHR(opts);\n\t  } else {\n\t    if (!jsonp) throw new Error('JSONP disabled');\n\t    return new JSONP(opts);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module\n\t\n\tvar hasCORS = __webpack_require__(137);\n\t\n\tmodule.exports = function (opts) {\n\t  var xdomain = opts.xdomain;\n\t\n\t  // scheme must be same when usign XDomainRequest\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t  var xscheme = opts.xscheme;\n\t\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n\t  // https://github.com/Automattic/engine.io-client/pull/217\n\t  var enablesXDR = opts.enablesXDR;\n\t\n\t  // XMLHttpRequest can be disabled on IE\n\t  try {\n\t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n\t      return new XMLHttpRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\n\t  // because loading bar keeps flashing when using jsonp-polling\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\t  try {\n\t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n\t      return new XDomainRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  if (!xdomain) {\n\t    try {\n\t      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n\t    } catch (e) { }\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module requirements.\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(136);\n\tvar Polling = __webpack_require__(139);\n\tvar Emitter = __webpack_require__(149);\n\tvar inherit = __webpack_require__(151);\n\tvar debug = __webpack_require__(153)('engine.io-client:polling-xhr');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = XHR;\n\tmodule.exports.Request = Request;\n\t\n\t/**\n\t * Empty function\n\t */\n\t\n\tfunction empty () {}\n\t\n\t/**\n\t * XHR Polling constructor.\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction XHR (opts) {\n\t  Polling.call(this, opts);\n\t  this.requestTimeout = opts.requestTimeout;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    this.xd = opts.hostname !== global.location.hostname ||\n\t      port !== opts.port;\n\t    this.xs = opts.secure !== isSSL;\n\t  } else {\n\t    this.extraHeaders = opts.extraHeaders;\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(XHR, Polling);\n\t\n\t/**\n\t * XHR supports binary\n\t */\n\t\n\tXHR.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Creates a request.\n\t *\n\t * @param {String} method\n\t * @api private\n\t */\n\t\n\tXHR.prototype.request = function (opts) {\n\t  opts = opts || {};\n\t  opts.uri = this.uri();\n\t  opts.xd = this.xd;\n\t  opts.xs = this.xs;\n\t  opts.agent = this.agent || false;\n\t  opts.supportsBinary = this.supportsBinary;\n\t  opts.enablesXDR = this.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  opts.requestTimeout = this.requestTimeout;\n\t\n\t  // other options for Node.js client\n\t  opts.extraHeaders = this.extraHeaders;\n\t\n\t  return new Request(opts);\n\t};\n\t\n\t/**\n\t * Sends data.\n\t *\n\t * @param {String} data to send.\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doWrite = function (data, fn) {\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n\t  var self = this;\n\t  req.on('success', fn);\n\t  req.on('error', function (err) {\n\t    self.onError('xhr post error', err);\n\t  });\n\t  this.sendXhr = req;\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doPoll = function () {\n\t  debug('xhr poll');\n\t  var req = this.request();\n\t  var self = this;\n\t  req.on('data', function (data) {\n\t    self.onData(data);\n\t  });\n\t  req.on('error', function (err) {\n\t    self.onError('xhr poll error', err);\n\t  });\n\t  this.pollXhr = req;\n\t};\n\t\n\t/**\n\t * Request constructor\n\t *\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Request (opts) {\n\t  this.method = opts.method || 'GET';\n\t  this.uri = opts.uri;\n\t  this.xd = !!opts.xd;\n\t  this.xs = !!opts.xs;\n\t  this.async = false !== opts.async;\n\t  this.data = undefined !== opts.data ? opts.data : null;\n\t  this.agent = opts.agent;\n\t  this.isBinary = opts.isBinary;\n\t  this.supportsBinary = opts.supportsBinary;\n\t  this.enablesXDR = opts.enablesXDR;\n\t  this.requestTimeout = opts.requestTimeout;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t\n\t  this.create();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Creates the XHR object and sends the request.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.create = function () {\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\n\t  var self = this;\n\t\n\t  try {\n\t    debug('xhr open %s: %s', this.method, this.uri);\n\t    xhr.open(this.method, this.uri, this.async);\n\t    try {\n\t      if (this.extraHeaders) {\n\t        xhr.setDisableHeaderCheck(true);\n\t        for (var i in this.extraHeaders) {\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\n\t          }\n\t        }\n\t      }\n\t    } catch (e) {}\n\t    if (this.supportsBinary) {\n\t      // This has to be done after open because Firefox is stupid\n\t      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n\t      xhr.responseType = 'arraybuffer';\n\t    }\n\t\n\t    if ('POST' === this.method) {\n\t      try {\n\t        if (this.isBinary) {\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n\t        } else {\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n\t        }\n\t      } catch (e) {}\n\t    }\n\t\n\t    try {\n\t      xhr.setRequestHeader('Accept', '*/*');\n\t    } catch (e) {}\n\t\n\t    // ie6 check\n\t    if ('withCredentials' in xhr) {\n\t      xhr.withCredentials = true;\n\t    }\n\t\n\t    if (this.requestTimeout) {\n\t      xhr.timeout = this.requestTimeout;\n\t    }\n\t\n\t    if (this.hasXDR()) {\n\t      xhr.onload = function () {\n\t        self.onLoad();\n\t      };\n\t      xhr.onerror = function () {\n\t        self.onError(xhr.responseText);\n\t      };\n\t    } else {\n\t      xhr.onreadystatechange = function () {\n\t        if (4 !== xhr.readyState) return;\n\t        if (200 === xhr.status || 1223 === xhr.status) {\n\t          self.onLoad();\n\t        } else {\n\t          // make sure the `error` event handler that's user-set\n\t          // does not throw in the same tick and gets caught here\n\t          setTimeout(function () {\n\t            self.onError(xhr.status);\n\t          }, 0);\n\t        }\n\t      };\n\t    }\n\t\n\t    debug('xhr data %s', this.data);\n\t    xhr.send(this.data);\n\t  } catch (e) {\n\t    // Need to defer since .create() is called directly fhrom the constructor\n\t    // and thus the 'error' event can only be only bound *after* this exception\n\t    // occurs.  Therefore, also, we cannot throw here at all.\n\t    setTimeout(function () {\n\t      self.onError(e);\n\t    }, 0);\n\t    return;\n\t  }\n\t\n\t  if (global.document) {\n\t    this.index = Request.requestsCount++;\n\t    Request.requests[this.index] = this;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful response.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onSuccess = function () {\n\t  this.emit('success');\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Called if we have data.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onData = function (data) {\n\t  this.emit('data', data);\n\t  this.onSuccess();\n\t};\n\t\n\t/**\n\t * Called upon error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onError = function (err) {\n\t  this.emit('error', err);\n\t  this.cleanup(true);\n\t};\n\t\n\t/**\n\t * Cleans up house.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.cleanup = function (fromError) {\n\t  if ('undefined' === typeof this.xhr || null === this.xhr) {\n\t    return;\n\t  }\n\t  // xmlhttprequest\n\t  if (this.hasXDR()) {\n\t    this.xhr.onload = this.xhr.onerror = empty;\n\t  } else {\n\t    this.xhr.onreadystatechange = empty;\n\t  }\n\t\n\t  if (fromError) {\n\t    try {\n\t      this.xhr.abort();\n\t    } catch (e) {}\n\t  }\n\t\n\t  if (global.document) {\n\t    delete Request.requests[this.index];\n\t  }\n\t\n\t  this.xhr = null;\n\t};\n\t\n\t/**\n\t * Called upon load.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onLoad = function () {\n\t  var data;\n\t  try {\n\t    var contentType;\n\t    try {\n\t      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n\t    } catch (e) {}\n\t    if (contentType === 'application/octet-stream') {\n\t      data = this.xhr.response || this.xhr.responseText;\n\t    } else {\n\t      if (!this.supportsBinary) {\n\t        data = this.xhr.responseText;\n\t      } else {\n\t        try {\n\t          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n\t        } catch (e) {\n\t          var ui8Arr = new Uint8Array(this.xhr.response);\n\t          var dataArray = [];\n\t          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n\t            dataArray.push(ui8Arr[idx]);\n\t          }\n\t\n\t          data = String.fromCharCode.apply(null, dataArray);\n\t        }\n\t      }\n\t    }\n\t  } catch (e) {\n\t    this.onError(e);\n\t  }\n\t  if (null != data) {\n\t    this.onData(data);\n\t  }\n\t};\n\t\n\t/**\n\t * Check if it has XDomainRequest.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.hasXDR = function () {\n\t  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n\t};\n\t\n\t/**\n\t * Aborts the request.\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function () {\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Aborts pending requests when unloading the window. This is needed to prevent\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n\t * emitted.\n\t */\n\t\n\tRequest.requestsCount = 0;\n\tRequest.requests = {};\n\t\n\tif (global.document) {\n\t  if (global.attachEvent) {\n\t    global.attachEvent('onunload', unloadHandler);\n\t  } else if (global.addEventListener) {\n\t    global.addEventListener('beforeunload', unloadHandler, false);\n\t  }\n\t}\n\t\n\tfunction unloadHandler () {\n\t  for (var i in Request.requests) {\n\t    if (Request.requests.hasOwnProperty(i)) {\n\t      Request.requests[i].abort();\n\t    }\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(140);\n\tvar parseqs = __webpack_require__(150);\n\tvar parser = __webpack_require__(141);\n\tvar inherit = __webpack_require__(151);\n\tvar yeast = __webpack_require__(152);\n\tvar debug = __webpack_require__(153)('engine.io-client:polling');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Polling;\n\t\n\t/**\n\t * Is XHR2 supported?\n\t */\n\t\n\tvar hasXHR2 = (function () {\n\t  var XMLHttpRequest = __webpack_require__(136);\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\n\t  return null != xhr.responseType;\n\t})();\n\t\n\t/**\n\t * Polling interface.\n\t *\n\t * @param {Object} opts\n\t * @api private\n\t */\n\t\n\tfunction Polling (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (!hasXHR2 || forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(Polling, Transport);\n\t\n\t/**\n\t * Transport name.\n\t */\n\t\n\tPolling.prototype.name = 'polling';\n\t\n\t/**\n\t * Opens the socket (triggers polling). We write a PING message to determine\n\t * when the transport is open.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doOpen = function () {\n\t  this.poll();\n\t};\n\t\n\t/**\n\t * Pauses polling.\n\t *\n\t * @param {Function} callback upon buffers are flushed and transport is paused\n\t * @api private\n\t */\n\t\n\tPolling.prototype.pause = function (onPause) {\n\t  var self = this;\n\t\n\t  this.readyState = 'pausing';\n\t\n\t  function pause () {\n\t    debug('paused');\n\t    self.readyState = 'paused';\n\t    onPause();\n\t  }\n\t\n\t  if (this.polling || !this.writable) {\n\t    var total = 0;\n\t\n\t    if (this.polling) {\n\t      debug('we are currently polling - waiting to pause');\n\t      total++;\n\t      this.once('pollComplete', function () {\n\t        debug('pre-pause polling complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t\n\t    if (!this.writable) {\n\t      debug('we are currently writing - waiting to pause');\n\t      total++;\n\t      this.once('drain', function () {\n\t        debug('pre-pause writing complete');\n\t        --total || pause();\n\t      });\n\t    }\n\t  } else {\n\t    pause();\n\t  }\n\t};\n\t\n\t/**\n\t * Starts polling cycle.\n\t *\n\t * @api public\n\t */\n\t\n\tPolling.prototype.poll = function () {\n\t  debug('polling');\n\t  this.polling = true;\n\t  this.doPoll();\n\t  this.emit('poll');\n\t};\n\t\n\t/**\n\t * Overloads onData to detect payloads.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.onData = function (data) {\n\t  var self = this;\n\t  debug('polling got data %s', data);\n\t  var callback = function (packet, index, total) {\n\t    // if its the first message we consider the transport open\n\t    if ('opening' === self.readyState) {\n\t      self.onOpen();\n\t    }\n\t\n\t    // if its a close packet, we close the ongoing requests\n\t    if ('close' === packet.type) {\n\t      self.onClose();\n\t      return false;\n\t    }\n\t\n\t    // otherwise bypass onData and handle the message\n\t    self.onPacket(packet);\n\t  };\n\t\n\t  // decode payload\n\t  parser.decodePayload(data, this.socket.binaryType, callback);\n\t\n\t  // if an event did not trigger closing\n\t  if ('closed' !== this.readyState) {\n\t    // if we got data we're not polling\n\t    this.polling = false;\n\t    this.emit('pollComplete');\n\t\n\t    if ('open' === this.readyState) {\n\t      this.poll();\n\t    } else {\n\t      debug('ignoring poll - transport state \"%s\"', this.readyState);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * For polling, send a close packet.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doClose = function () {\n\t  var self = this;\n\t\n\t  function close () {\n\t    debug('writing close packet');\n\t    self.write([{ type: 'close' }]);\n\t  }\n\t\n\t  if ('open' === this.readyState) {\n\t    debug('transport open - closing');\n\t    close();\n\t  } else {\n\t    // in case we're trying to close while\n\t    // handshaking is in progress (GH-164)\n\t    debug('transport not open - deferring close');\n\t    this.once('open', close);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes a packets payload.\n\t *\n\t * @param {Array} data packets\n\t * @param {Function} drain callback\n\t * @api private\n\t */\n\t\n\tPolling.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t  var callbackfn = function () {\n\t    self.writable = true;\n\t    self.emit('drain');\n\t  };\n\t\n\t  parser.encodePayload(packets, this.supportsBinary, function (data) {\n\t    self.doWrite(data, callbackfn);\n\t  });\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'https' : 'http';\n\t  var port = '';\n\t\n\t  // cache busting is forced\n\t  if (false !== this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  if (!this.supportsBinary && !query.sid) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n\t     ('http' === schema && Number(this.port) !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(141);\n\tvar Emitter = __webpack_require__(149);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Transport;\n\t\n\t/**\n\t * Transport abstract constructor.\n\t *\n\t * @param {Object} options.\n\t * @api private\n\t */\n\t\n\tfunction Transport (opts) {\n\t  this.path = opts.path;\n\t  this.hostname = opts.hostname;\n\t  this.port = opts.port;\n\t  this.secure = opts.secure;\n\t  this.query = opts.query;\n\t  this.timestampParam = opts.timestampParam;\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.readyState = '';\n\t  this.agent = opts.agent || false;\n\t  this.socket = opts.socket;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t  this.forceNode = opts.forceNode;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t  this.localAddress = opts.localAddress;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Transport.prototype);\n\t\n\t/**\n\t * Emits an error.\n\t *\n\t * @param {String} str\n\t * @return {Transport} for chaining\n\t * @api public\n\t */\n\t\n\tTransport.prototype.onError = function (msg, desc) {\n\t  var err = new Error(msg);\n\t  err.type = 'TransportError';\n\t  err.description = desc;\n\t  this.emit('error', err);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Opens the transport.\n\t *\n\t * @api public\n\t */\n\t\n\tTransport.prototype.open = function () {\n\t  if ('closed' === this.readyState || '' === this.readyState) {\n\t    this.readyState = 'opening';\n\t    this.doOpen();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Closes the transport.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.doClose();\n\t    this.onClose();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends multiple packets.\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\tTransport.prototype.send = function (packets) {\n\t  if ('open' === this.readyState) {\n\t    this.write(packets);\n\t  } else {\n\t    throw new Error('Transport not open');\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon open\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onOpen = function () {\n\t  this.readyState = 'open';\n\t  this.writable = true;\n\t  this.emit('open');\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @param {String} data\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onData = function (data) {\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\n\t  this.onPacket(packet);\n\t};\n\t\n\t/**\n\t * Called with a decoded packet.\n\t */\n\t\n\tTransport.prototype.onPacket = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon close.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onClose = function () {\n\t  this.readyState = 'closed';\n\t  this.emit('close');\n\t};\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(142);\n\tvar hasBinary = __webpack_require__(143);\n\tvar sliceBuffer = __webpack_require__(144);\n\tvar after = __webpack_require__(145);\n\tvar utf8 = __webpack_require__(146);\n\t\n\tvar base64encoder;\n\tif (global && global.ArrayBuffer) {\n\t  base64encoder = __webpack_require__(147);\n\t}\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(148);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if ('function' == typeof supportsBinary) {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if ('function' == typeof utf8encode) {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (Blob && data instanceof global.Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    packet.data = fr.result;\n\t    exports.encodePacket(packet, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (Blob && packet.data instanceof global.Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += global.btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  if (data === undefined) {\n\t    return err;\n\t  }\n\t  // String data\n\t  if (typeof data == 'string') {\n\t    if (data.charAt(0) == 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      data = tryDecode(data);\n\t      if (data === false) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\tfunction tryDecode(data) {\n\t  try {\n\t    data = utf8.decode(data);\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!base64encoder) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary == 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data != 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data == '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = ''\n\t    , n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (':' != chr) {\n\t      length += chr;\n\t    } else {\n\t      if ('' == length || (length != (n = Number(length)))) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msg = data.substr(i + 1, n);\n\t\n\t      if (length != msg.length) {\n\t        // parser error - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      if (msg.length) {\n\t        packet = exports.decodePacket(msg, binaryType, true);\n\t\n\t        if (err.type == packet.type && err.data == packet.data) {\n\t          // parser error in individual packet - ignoring payload\n\t          return callback(err, 0, 1);\n\t        }\n\t\n\t        var ret = callback(packet, i + n, l);\n\t        if (false === ret) return;\n\t      }\n\t\n\t      // advance cursor\n\t      i += n;\n\t      length = '';\n\t    }\n\t  }\n\t\n\t  if (length != '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  var numberTooLong = false;\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] == 255) break;\n\t\n\t      if (msgLength.length > 310) {\n\t        numberTooLong = true;\n\t        break;\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    if(numberTooLong) return callback(err, 0, 1);\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(129);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Right now only Buffer and ArrayBuffer are supported..\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary(data) {\n\t\n\t  function _hasBinary(obj) {\n\t    if (!obj) return false;\n\t\n\t    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n\t         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n\t         (global.Blob && obj instanceof Blob) ||\n\t         (global.File && obj instanceof File)\n\t        ) {\n\t      return true;\n\t    }\n\t\n\t    if (isArray(obj)) {\n\t      for (var i = 0; i < obj.length; i++) {\n\t          if (_hasBinary(obj[i])) {\n\t              return true;\n\t          }\n\t      }\n\t    } else if (obj && 'object' == typeof obj) {\n\t      // see: https://github.com/Automattic/has-binary/pull/4\n\t      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n\t        obj = obj.toJSON();\n\t      }\n\t\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  return _hasBinary(data);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/wtf8 v1.0.0 by @mathias */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code,\n\t\t// and use it as `root`\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [];\n\t\t\tvar counter = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar value;\n\t\t\tvar extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2encode(array) {\n\t\t\tvar length = array.length;\n\t\t\tvar index = -1;\n\t\t\tvar value;\n\t\t\tvar output = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvalue = array[index];\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction createByte(codePoint, shift) {\n\t\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t\t}\n\t\n\t\tfunction encodeCodePoint(codePoint) {\n\t\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\t\treturn stringFromCharCode(codePoint);\n\t\t\t}\n\t\t\tvar symbol = '';\n\t\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\t\treturn symbol;\n\t\t}\n\t\n\t\tfunction wtf8encode(string) {\n\t\t\tvar codePoints = ucs2decode(string);\n\t\t\tvar length = codePoints.length;\n\t\t\tvar index = -1;\n\t\t\tvar codePoint;\n\t\t\tvar byteString = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tcodePoint = codePoints[index];\n\t\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t\t}\n\t\t\treturn byteString;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction readContinuationByte() {\n\t\t\tif (byteIndex >= byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\t\treturn continuationByte & 0x3F;\n\t\t\t}\n\t\n\t\t\t// If we end up here, it’s not a continuation byte.\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t\n\t\tfunction decodeSymbol() {\n\t\t\tvar byte1;\n\t\t\tvar byte2;\n\t\t\tvar byte3;\n\t\t\tvar byte4;\n\t\t\tvar codePoint;\n\t\n\t\t\tif (byteIndex > byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tif (byteIndex == byteCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Read the first byte.\n\t\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\t// 1-byte sequence (no continuation bytes)\n\t\t\tif ((byte1 & 0x80) == 0) {\n\t\t\t\treturn byte1;\n\t\t\t}\n\t\n\t\t\t// 2-byte sequence\n\t\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\t\tvar byte2 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\t\tif (codePoint >= 0x80) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 4-byte sequence\n\t\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tbyte4 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthrow Error('Invalid WTF-8 detected');\n\t\t}\n\t\n\t\tvar byteArray;\n\t\tvar byteCount;\n\t\tvar byteIndex;\n\t\tfunction wtf8decode(byteString) {\n\t\t\tbyteArray = ucs2decode(byteString);\n\t\t\tbyteCount = byteArray.length;\n\t\t\tbyteIndex = 0;\n\t\t\tvar codePoints = [];\n\t\t\tvar tmp;\n\t\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\t\tcodePoints.push(tmp);\n\t\t\t}\n\t\t\treturn ucs2encode(codePoints);\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar wtf8 = {\n\t\t\t'version': '1.0.0',\n\t\t\t'encode': wtf8encode,\n\t\t\t'decode': wtf8decode\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn wtf8;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = wtf8;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tvar object = {};\n\t\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\t\tfor (var key in wtf8) {\n\t\t\t\t\thasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.wtf8 = wtf8;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(63)(module), (function() { return this; }())))\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(){\n\t  \"use strict\";\n\t\n\t  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\n\t  // Use a lookup table to find the index.\n\t  var lookup = new Uint8Array(256);\n\t  for (var i = 0; i < chars.length; i++) {\n\t    lookup[chars.charCodeAt(i)] = i;\n\t  }\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = lookup[base64.charCodeAt(i)];\n\t      encoded2 = lookup[base64.charCodeAt(i+1)];\n\t      encoded3 = lookup[base64.charCodeAt(i+2)];\n\t      encoded4 = lookup[base64.charCodeAt(i+3)];\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})();\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Create a blob builder even when vendor prefixes exist\n\t */\n\t\n\tvar BlobBuilder = global.BlobBuilder\n\t  || global.WebKitBlobBuilder\n\t  || global.MSBlobBuilder\n\t  || global.MozBlobBuilder;\n\t\n\t/**\n\t * Check if Blob constructor is supported\n\t */\n\t\n\tvar blobSupported = (function() {\n\t  try {\n\t    var a = new Blob(['hi']);\n\t    return a.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if Blob constructor supports ArrayBufferViews\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\n\t */\n\t\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\n\t  try {\n\t    var b = new Blob([new Uint8Array([1,2])]);\n\t    return b.size === 2;\n\t  } catch(e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * Check if BlobBuilder is supported\n\t */\n\t\n\tvar blobBuilderSupported = BlobBuilder\n\t  && BlobBuilder.prototype.append\n\t  && BlobBuilder.prototype.getBlob;\n\t\n\t/**\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\n\t * Used by BlobBuilder constructor and old browsers that didn't\n\t * support it in the Blob constructor.\n\t */\n\t\n\tfunction mapArrayBufferViews(ary) {\n\t  for (var i = 0; i < ary.length; i++) {\n\t    var chunk = ary[i];\n\t    if (chunk.buffer instanceof ArrayBuffer) {\n\t      var buf = chunk.buffer;\n\t\n\t      // if this is a subarray, make a copy so we only\n\t      // include the subarray region from the underlying buffer\n\t      if (chunk.byteLength !== buf.byteLength) {\n\t        var copy = new Uint8Array(chunk.byteLength);\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n\t        buf = copy.buffer;\n\t      }\n\t\n\t      ary[i] = buf;\n\t    }\n\t  }\n\t}\n\t\n\tfunction BlobBuilderConstructor(ary, options) {\n\t  options = options || {};\n\t\n\t  var bb = new BlobBuilder();\n\t  mapArrayBufferViews(ary);\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    bb.append(ary[i]);\n\t  }\n\t\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n\t};\n\t\n\tfunction BlobConstructor(ary, options) {\n\t  mapArrayBufferViews(ary);\n\t  return new Blob(ary, options || {});\n\t};\n\t\n\tmodule.exports = (function() {\n\t  if (blobSupported) {\n\t    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n\t  } else if (blobBuilderSupported) {\n\t    return BlobBuilderConstructor;\n\t  } else {\n\t    return undefined;\n\t  }\n\t})();\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Compiles a querystring\r\n\t * Returns string representation of the object\r\n\t *\r\n\t * @param {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.encode = function (obj) {\r\n\t  var str = '';\r\n\t\r\n\t  for (var i in obj) {\r\n\t    if (obj.hasOwnProperty(i)) {\r\n\t      if (str.length) str += '&';\r\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return str;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Parses a simple querystring into an object\r\n\t *\r\n\t * @param {String} qs\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.decode = function(qs){\r\n\t  var qry = {};\r\n\t  var pairs = qs.split('&');\r\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\r\n\t    var pair = pairs[i].split('=');\r\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n\t  }\r\n\t  return qry;\r\n\t};\r\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\n\t/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(154);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  'lightseagreen',\n\t  'forestgreen',\n\t  'goldenrod',\n\t  'dodgerblue',\n\t  'darkorchid',\n\t  'crimson'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (window.console && (console.firebug || (console.exception && console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  try {\n\t    return JSON.stringify(v);\n\t  } catch (err) {\n\t    return '[UnexpectedJSONParseError]: ' + err.message;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs() {\n\t  var args = arguments;\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return args;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t  return args;\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    return exports.storage.debug;\n\t  } catch(e) {}\n\t\n\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t  if (typeof process !== 'undefined' && 'env' in process) {\n\t    return process.env.DEBUG;\n\t  }\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage(){\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(118)))\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = debug.debug = debug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(155);\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Previously assigned color.\n\t */\n\t\n\tvar prevColor = 0;\n\t\n\t/**\n\t * Previous log timestamp.\n\t */\n\t\n\tvar prevTime;\n\t\n\t/**\n\t * Select a color.\n\t *\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor() {\n\t  return exports.colors[prevColor++ % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction debug(namespace) {\n\t\n\t  // define the `disabled` version\n\t  function disabled() {\n\t  }\n\t  disabled.enabled = false;\n\t\n\t  // define the `enabled` version\n\t  function enabled() {\n\t\n\t    var self = enabled;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // add the `color` if not set\n\t    if (null == self.useColors) self.useColors = exports.useColors();\n\t    if (null == self.color && self.useColors) self.color = selectColor();\n\t\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %o\n\t      args = ['%o'].concat(args);\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    // apply env-specific formatting\n\t    args = exports.formatArgs.apply(self, args);\n\t\n\t    var logFn = enabled.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t  enabled.enabled = true;\n\t\n\t  var fn = exports.enabled(namespace) ? enabled : disabled;\n\t\n\t  fn.namespace = namespace;\n\t\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  var split = (namespaces || '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000\n\tvar m = s * 60\n\tvar h = m * 60\n\tvar d = h * 24\n\tvar y = d * 365.25\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (val, options) {\n\t  options = options || {}\n\t  var type = typeof val\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val)\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ?\n\t\t\t\tfmtLong(val) :\n\t\t\t\tfmtShort(val)\n\t  }\n\t  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n\t}\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = String(str)\n\t  if (str.length > 10000) {\n\t    return\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n\t  if (!match) {\n\t    return\n\t  }\n\t  var n = parseFloat(match[1])\n\t  var type = (match[2] || 'ms').toLowerCase()\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n\n\t    default:\n\t      return undefined\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd'\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h'\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm'\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's'\n\t  }\n\t  return ms + 'ms'\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms'\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's'\n\t}\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module requirements.\n\t */\n\t\n\tvar Polling = __webpack_require__(139);\n\tvar inherit = __webpack_require__(151);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = JSONPPolling;\n\t\n\t/**\n\t * Cached regular expressions.\n\t */\n\t\n\tvar rNewline = /\\n/g;\n\tvar rEscapedNewline = /\\\\n/g;\n\t\n\t/**\n\t * Global JSONP callbacks.\n\t */\n\t\n\tvar callbacks;\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction empty () { }\n\t\n\t/**\n\t * JSONP Polling constructor.\n\t *\n\t * @param {Object} opts.\n\t * @api public\n\t */\n\t\n\tfunction JSONPPolling (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  this.query = this.query || {};\n\t\n\t  // define global callbacks array if not present\n\t  // we do this here (lazily) to avoid unneeded global pollution\n\t  if (!callbacks) {\n\t    // we need to consider multiple engines in the same page\n\t    if (!global.___eio) global.___eio = [];\n\t    callbacks = global.___eio;\n\t  }\n\t\n\t  // callback identifier\n\t  this.index = callbacks.length;\n\t\n\t  // add callback to jsonp global\n\t  var self = this;\n\t  callbacks.push(function (msg) {\n\t    self.onData(msg);\n\t  });\n\t\n\t  // append to query string\n\t  this.query.j = this.index;\n\t\n\t  // prevent spurious errors from being emitted when the window is unloaded\n\t  if (global.document && global.addEventListener) {\n\t    global.addEventListener('beforeunload', function () {\n\t      if (self.script) self.script.onerror = empty;\n\t    }, false);\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(JSONPPolling, Polling);\n\t\n\t/*\n\t * JSONP only supports binary as base64 encoded strings\n\t */\n\t\n\tJSONPPolling.prototype.supportsBinary = false;\n\t\n\t/**\n\t * Closes the socket.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doClose = function () {\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  if (this.form) {\n\t    this.form.parentNode.removeChild(this.form);\n\t    this.form = null;\n\t    this.iframe = null;\n\t  }\n\t\n\t  Polling.prototype.doClose.call(this);\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doPoll = function () {\n\t  var self = this;\n\t  var script = document.createElement('script');\n\t\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  script.async = true;\n\t  script.src = this.uri();\n\t  script.onerror = function (e) {\n\t    self.onError('jsonp poll error', e);\n\t  };\n\t\n\t  var insertAt = document.getElementsByTagName('script')[0];\n\t  if (insertAt) {\n\t    insertAt.parentNode.insertBefore(script, insertAt);\n\t  } else {\n\t    (document.head || document.body).appendChild(script);\n\t  }\n\t  this.script = script;\n\t\n\t  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\t\n\t  if (isUAgecko) {\n\t    setTimeout(function () {\n\t      var iframe = document.createElement('iframe');\n\t      document.body.appendChild(iframe);\n\t      document.body.removeChild(iframe);\n\t    }, 100);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes with a hidden iframe.\n\t *\n\t * @param {String} data to send\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\n\t  var self = this;\n\t\n\t  if (!this.form) {\n\t    var form = document.createElement('form');\n\t    var area = document.createElement('textarea');\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\n\t    var iframe;\n\t\n\t    form.className = 'socketio';\n\t    form.style.position = 'absolute';\n\t    form.style.top = '-1000px';\n\t    form.style.left = '-1000px';\n\t    form.target = id;\n\t    form.method = 'POST';\n\t    form.setAttribute('accept-charset', 'utf-8');\n\t    area.name = 'd';\n\t    form.appendChild(area);\n\t    document.body.appendChild(form);\n\t\n\t    this.form = form;\n\t    this.area = area;\n\t  }\n\t\n\t  this.form.action = this.uri();\n\t\n\t  function complete () {\n\t    initIframe();\n\t    fn();\n\t  }\n\t\n\t  function initIframe () {\n\t    if (self.iframe) {\n\t      try {\n\t        self.form.removeChild(self.iframe);\n\t      } catch (e) {\n\t        self.onError('jsonp polling iframe removal error', e);\n\t      }\n\t    }\n\t\n\t    try {\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n\t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n\t      iframe = document.createElement(html);\n\t    } catch (e) {\n\t      iframe = document.createElement('iframe');\n\t      iframe.name = self.iframeId;\n\t      iframe.src = 'javascript:0';\n\t    }\n\t\n\t    iframe.id = self.iframeId;\n\t\n\t    self.form.appendChild(iframe);\n\t    self.iframe = iframe;\n\t  }\n\t\n\t  initIframe();\n\t\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\n\t  this.area.value = data.replace(rNewline, '\\\\n');\n\t\n\t  try {\n\t    this.form.submit();\n\t  } catch (e) {}\n\t\n\t  if (this.iframe.attachEvent) {\n\t    this.iframe.onreadystatechange = function () {\n\t      if (self.iframe.readyState === 'complete') {\n\t        complete();\n\t      }\n\t    };\n\t  } else {\n\t    this.iframe.onload = complete;\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(140);\n\tvar parser = __webpack_require__(141);\n\tvar parseqs = __webpack_require__(150);\n\tvar inherit = __webpack_require__(151);\n\tvar yeast = __webpack_require__(152);\n\tvar debug = __webpack_require__(153)('engine.io-client:websocket');\n\tvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\tvar NodeWebSocket;\n\tif (typeof window === 'undefined') {\n\t  try {\n\t    NodeWebSocket = __webpack_require__(158);\n\t  } catch (e) { }\n\t}\n\t\n\t/**\n\t * Get either the `WebSocket` or `MozWebSocket` globals\n\t * in the browser or try to resolve WebSocket-compatible\n\t * interface exposed by `ws` for Node-like environment.\n\t */\n\t\n\tvar WebSocket = BrowserWebSocket;\n\tif (!WebSocket && typeof window === 'undefined') {\n\t  WebSocket = NodeWebSocket;\n\t}\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = WS;\n\t\n\t/**\n\t * WebSocket transport constructor.\n\t *\n\t * @api {Object} connection options\n\t * @api public\n\t */\n\t\n\tfunction WS (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  this.perMessageDeflate = opts.perMessageDeflate;\n\t  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n\t  if (!this.usingBrowserWebSocket) {\n\t    WebSocket = NodeWebSocket;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(WS, Transport);\n\t\n\t/**\n\t * Transport name.\n\t *\n\t * @api public\n\t */\n\t\n\tWS.prototype.name = 'websocket';\n\t\n\t/*\n\t * WebSockets support binary\n\t */\n\t\n\tWS.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Opens socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doOpen = function () {\n\t  if (!this.check()) {\n\t    // let probe timeout\n\t    return;\n\t  }\n\t\n\t  var uri = this.uri();\n\t  var protocols = void (0);\n\t  var opts = {\n\t    agent: this.agent,\n\t    perMessageDeflate: this.perMessageDeflate\n\t  };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  if (this.extraHeaders) {\n\t    opts.headers = this.extraHeaders;\n\t  }\n\t  if (this.localAddress) {\n\t    opts.localAddress = this.localAddress;\n\t  }\n\t\n\t  try {\n\t    this.ws = this.usingBrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\t  } catch (err) {\n\t    return this.emit('error', err);\n\t  }\n\t\n\t  if (this.ws.binaryType === undefined) {\n\t    this.supportsBinary = false;\n\t  }\n\t\n\t  if (this.ws.supports && this.ws.supports.binary) {\n\t    this.supportsBinary = true;\n\t    this.ws.binaryType = 'nodebuffer';\n\t  } else {\n\t    this.ws.binaryType = 'arraybuffer';\n\t  }\n\t\n\t  this.addEventListeners();\n\t};\n\t\n\t/**\n\t * Adds event listeners to the socket\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.addEventListeners = function () {\n\t  var self = this;\n\t\n\t  this.ws.onopen = function () {\n\t    self.onOpen();\n\t  };\n\t  this.ws.onclose = function () {\n\t    self.onClose();\n\t  };\n\t  this.ws.onmessage = function (ev) {\n\t    self.onData(ev.data);\n\t  };\n\t  this.ws.onerror = function (e) {\n\t    self.onError('websocket error', e);\n\t  };\n\t};\n\t\n\t/**\n\t * Writes data to socket.\n\t *\n\t * @param {Array} array of packets.\n\t * @api private\n\t */\n\t\n\tWS.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t\n\t  // encodePacket efficient as it uses WS framing\n\t  // no need for encodePayload\n\t  var total = packets.length;\n\t  for (var i = 0, l = total; i < l; i++) {\n\t    (function (packet) {\n\t      parser.encodePacket(packet, self.supportsBinary, function (data) {\n\t        if (!self.usingBrowserWebSocket) {\n\t          // always create a new object (GH-437)\n\t          var opts = {};\n\t          if (packet.options) {\n\t            opts.compress = packet.options.compress;\n\t          }\n\t\n\t          if (self.perMessageDeflate) {\n\t            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n\t            if (len < self.perMessageDeflate.threshold) {\n\t              opts.compress = false;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Sometimes the websocket has already been closed but the browser didn't\n\t        // have a chance of informing us about it yet, in that case send will\n\t        // throw an error\n\t        try {\n\t          if (self.usingBrowserWebSocket) {\n\t            // TypeError is thrown when passing the second argument on Safari\n\t            self.ws.send(data);\n\t          } else {\n\t            self.ws.send(data, opts);\n\t          }\n\t        } catch (e) {\n\t          debug('websocket closed before onclose event');\n\t        }\n\t\n\t        --total || done();\n\t      });\n\t    })(packets[i]);\n\t  }\n\t\n\t  function done () {\n\t    self.emit('flush');\n\t\n\t    // fake drain\n\t    // defer to next tick to allow Socket to clear writeBuffer\n\t    setTimeout(function () {\n\t      self.writable = true;\n\t      self.emit('drain');\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon close\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.onClose = function () {\n\t  Transport.prototype.onClose.call(this);\n\t};\n\t\n\t/**\n\t * Closes socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doClose = function () {\n\t  if (typeof this.ws !== 'undefined') {\n\t    this.ws.close();\n\t  }\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'wss' : 'ws';\n\t  var port = '';\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n\t    ('ws' === schema && Number(this.port) !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // append timestamp to URI\n\t  if (this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  // communicate binary support capabilities\n\t  if (!this.supportsBinary) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\t\n\t/**\n\t * Feature detection for WebSocket.\n\t *\n\t * @return {Boolean} whether this transport is available.\n\t * @api public\n\t */\n\t\n\tWS.prototype.check = function () {\n\t  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ }),\n/* 160 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\r\n\t * JSON parse.\r\n\t *\r\n\t * @see Based on jQuery#parseJSON (MIT) and JSON2\r\n\t * @api private\r\n\t */\r\n\t\r\n\tvar rvalidchars = /^[\\],:{}\\s]*$/;\r\n\tvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\r\n\tvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\n\tvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\r\n\tvar rtrimLeft = /^\\s+/;\r\n\tvar rtrimRight = /\\s+$/;\r\n\t\r\n\tmodule.exports = function parsejson(data) {\r\n\t  if ('string' != typeof data || !data) {\r\n\t    return null;\r\n\t  }\r\n\t\r\n\t  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\r\n\t\r\n\t  // Attempt to parse using the native JSON parser first\r\n\t  if (global.JSON && JSON.parse) {\r\n\t    return JSON.parse(data);\r\n\t  }\r\n\t\r\n\t  if (rvalidchars.test(data.replace(rvalidescape, '@')\r\n\t      .replace(rvalidtokens, ']')\r\n\t      .replace(rvalidbraces, ''))) {\r\n\t    return (new Function('return ' + data))();\r\n\t  }\r\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 161 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(121);\n\tvar Emitter = __webpack_require__(162);\n\tvar toArray = __webpack_require__(163);\n\tvar on = __webpack_require__(164);\n\tvar bind = __webpack_require__(165);\n\tvar debug = __webpack_require__(117)('socket.io-client:socket');\n\tvar hasBin = __webpack_require__(143);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\n\t * Internal events (blacklisted).\n\t * These events can't be emitted by the user.\n\t *\n\t * @api private\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\n\t * Shortcut to `Emitter#emit`.\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\n\t * `Socket` constructor.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Socket (io, nsp, opts) {\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  if (opts && opts.query) {\n\t    this.query = opts.query;\n\t  }\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Subscribe to open, close and packet events\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.subEvents = function () {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [\n\t    on(io, 'open', bind(this, 'onopen')),\n\t    on(io, 'packet', bind(this, 'onpacket')),\n\t    on(io, 'close', bind(this, 'onclose'))\n\t  ];\n\t};\n\t\n\t/**\n\t * \"Opens\" the socket.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.open =\n\tSocket.prototype.connect = function () {\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' === this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a `message` event.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.send = function () {\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override `emit`.\n\t * If the event is in `events`, it's emitted normally.\n\t *\n\t * @param {String} event name\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.emit = function (ev) {\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var parserType = parser.EVENT; // default\n\t  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n\t  var packet = { type: parserType, data: args };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' === typeof args[args.length - 1]) {\n\t    debug('emitting packet with ack id %d', this.ids);\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  delete this.flags;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.packet = function (packet) {\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\n\t * Called upon engine `open`.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onopen = function () {\n\t  debug('transport is open - connecting');\n\t\n\t  // write connect packet if necessary\n\t  if ('/' !== this.nsp) {\n\t    if (this.query) {\n\t      this.packet({type: parser.CONNECT, query: this.query});\n\t    } else {\n\t      this.packet({type: parser.CONNECT});\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon engine `close`.\n\t *\n\t * @param {String} reason\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onclose = function (reason) {\n\t  debug('close (%s)', reason);\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\n\t * Called with socket packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onpacket = function (packet) {\n\t  if (packet.nsp !== this.nsp) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon a server event.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onevent = function (packet) {\n\t  var args = packet.data || [];\n\t  debug('emitting event %j', args);\n\t\n\t  if (null != packet.id) {\n\t    debug('attaching ack callback to event');\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\n\t * Produces an ack callback to emit with an event.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ack = function (id) {\n\t  var self = this;\n\t  var sent = false;\n\t  return function () {\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t    debug('sending ack %j', args);\n\t\n\t    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n\t    self.packet({\n\t      type: type,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\n\t * Called upon a server acknowlegement.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onack = function (packet) {\n\t  var ack = this.acks[packet.id];\n\t  if ('function' === typeof ack) {\n\t    debug('calling ack %s with %j', packet.id, packet.data);\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {\n\t    debug('bad ack %s', packet.id);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon server connect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onconnect = function () {\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\n\t * Emit buffered events (received and emitted).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.emitBuffered = function () {\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\n\t * Called upon server disconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ondisconnect = function () {\n\t  debug('server disconnect (%s)', this.nsp);\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\n\t * Called upon forced client/server side disconnections,\n\t * this method ensures the manager stops tracking us and\n\t * that reconnections don't get triggered for this.\n\t *\n\t * @api private.\n\t */\n\t\n\tSocket.prototype.destroy = function () {\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\n\t * Disconnects the socket manually.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.close =\n\tSocket.prototype.disconnect = function () {\n\t  if (this.connected) {\n\t    debug('performing disconnect (%s)', this.nsp);\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the compress flag.\n\t *\n\t * @param {Boolean} if `true`, compresses the sending data\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.compress = function (compress) {\n\t  this.flags = this.flags || {};\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\n\n/***/ }),\n/* 162 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 163 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ }),\n/* 164 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\n\t * Helper for subscriptions.\n\t *\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n\t * @param {String} event name\n\t * @param {Function} callback\n\t * @api public\n\t */\n\t\n\tfunction on (obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function () {\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n\n/***/ }),\n/* 165 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ }),\n/* 166 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ }),\n/* 167 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t//     uuid.js\n\t//\n\t//     Copyright (c) 2010-2012 Robert Kieffer\n\t//     MIT License - http://opensource.org/licenses/mit-license.php\n\t\n\t// Unique ID creation requires a high quality random # generator.  We feature\n\t// detect to determine the best RNG source, normalizing to a function that\n\t// returns 128-bits of randomness, since that's what's usually required\n\tvar _rng = __webpack_require__(168);\n\t\n\t// Maps for number <-> hex string conversion\n\tvar _byteToHex = [];\n\tvar _hexToByte = {};\n\tfor (var i = 0; i < 256; i++) {\n\t  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n\t  _hexToByte[_byteToHex[i]] = i;\n\t}\n\t\n\t// **`parse()` - Parse a UUID into it's component bytes**\n\tfunction parse(s, buf, offset) {\n\t  var i = (buf && offset) || 0, ii = 0;\n\t\n\t  buf = buf || [];\n\t  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n\t    if (ii < 16) { // Don't overflow!\n\t      buf[i + ii++] = _hexToByte[oct];\n\t    }\n\t  });\n\t\n\t  // Zero out remaining bytes if string was short\n\t  while (ii < 16) {\n\t    buf[i + ii++] = 0;\n\t  }\n\t\n\t  return buf;\n\t}\n\t\n\t// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n\tfunction unparse(buf, offset) {\n\t  var i = offset || 0, bth = _byteToHex;\n\t  return  bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]];\n\t}\n\t\n\t// **`v1()` - Generate time-based UUID**\n\t//\n\t// Inspired by https://github.com/LiosK/UUID.js\n\t// and http://docs.python.org/library/uuid.html\n\t\n\t// random #'s we need to init node and clockseq\n\tvar _seedBytes = _rng();\n\t\n\t// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n\tvar _nodeId = [\n\t  _seedBytes[0] | 0x01,\n\t  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n\t];\n\t\n\t// Per 4.2.2, randomize (14 bit) clockseq\n\tvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\t\n\t// Previous uuid creation time\n\tvar _lastMSecs = 0, _lastNSecs = 0;\n\t\n\t// See https://github.com/broofa/node-uuid for API details\n\tfunction v1(options, buf, offset) {\n\t  var i = buf && offset || 0;\n\t  var b = buf || [];\n\t\n\t  options = options || {};\n\t\n\t  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\t\n\t  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n\t  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n\t  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n\t  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\t  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\t\n\t  // Per 4.2.1.2, use count of uuid's generated during the current clock\n\t  // cycle to simulate higher resolution clock\n\t  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\t\n\t  // Time since last uuid creation (in msecs)\n\t  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\t\n\t  // Per 4.2.1.2, Bump clockseq on clock regression\n\t  if (dt < 0 && options.clockseq === undefined) {\n\t    clockseq = clockseq + 1 & 0x3fff;\n\t  }\n\t\n\t  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n\t  // time interval\n\t  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n\t    nsecs = 0;\n\t  }\n\t\n\t  // Per 4.2.1.2 Throw error if too many uuids are requested\n\t  if (nsecs >= 10000) {\n\t    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n\t  }\n\t\n\t  _lastMSecs = msecs;\n\t  _lastNSecs = nsecs;\n\t  _clockseq = clockseq;\n\t\n\t  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\t  msecs += 12219292800000;\n\t\n\t  // `time_low`\n\t  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n\t  b[i++] = tl >>> 24 & 0xff;\n\t  b[i++] = tl >>> 16 & 0xff;\n\t  b[i++] = tl >>> 8 & 0xff;\n\t  b[i++] = tl & 0xff;\n\t\n\t  // `time_mid`\n\t  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n\t  b[i++] = tmh >>> 8 & 0xff;\n\t  b[i++] = tmh & 0xff;\n\t\n\t  // `time_high_and_version`\n\t  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\t  b[i++] = tmh >>> 16 & 0xff;\n\t\n\t  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\t  b[i++] = clockseq >>> 8 | 0x80;\n\t\n\t  // `clock_seq_low`\n\t  b[i++] = clockseq & 0xff;\n\t\n\t  // `node`\n\t  var node = options.node || _nodeId;\n\t  for (var n = 0; n < 6; n++) {\n\t    b[i + n] = node[n];\n\t  }\n\t\n\t  return buf ? buf : unparse(b);\n\t}\n\t\n\t// **`v4()` - Generate random UUID**\n\t\n\t// See https://github.com/broofa/node-uuid for API details\n\tfunction v4(options, buf, offset) {\n\t  // Deprecated - 'format' argument, as supported in v1.2\n\t  var i = buf && offset || 0;\n\t\n\t  if (typeof(options) == 'string') {\n\t    buf = options == 'binary' ? new Array(16) : null;\n\t    options = null;\n\t  }\n\t  options = options || {};\n\t\n\t  var rnds = options.random || (options.rng || _rng)();\n\t\n\t  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n\t  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\t\n\t  // Copy bytes to buffer, if provided\n\t  if (buf) {\n\t    for (var ii = 0; ii < 16; ii++) {\n\t      buf[i + ii] = rnds[ii];\n\t    }\n\t  }\n\t\n\t  return buf || unparse(rnds);\n\t}\n\t\n\t// Export public API\n\tvar uuid = v4;\n\tuuid.v1 = v1;\n\tuuid.v4 = v4;\n\tuuid.parse = parse;\n\tuuid.unparse = unparse;\n\t\n\tmodule.exports = uuid;\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tvar rng;\n\t\n\tvar crypto = global.crypto || global.msCrypto; // for IE 11\n\tif (crypto && crypto.getRandomValues) {\n\t  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n\t  // Moderately fast, high quality\n\t  var _rnds8 = new Uint8Array(16);\n\t  rng = function whatwgRNG() {\n\t    crypto.getRandomValues(_rnds8);\n\t    return _rnds8;\n\t  };\n\t}\n\t\n\tif (!rng) {\n\t  // Math.random()-based (RNG)\n\t  //\n\t  // If all else fails, use Math.random().  It's fast, but is of unspecified\n\t  // quality.\n\t  var  _rnds = new Array(16);\n\t  rng = function() {\n\t    for (var i = 0, r; i < 16; i++) {\n\t      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n\t      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n\t    }\n\t\n\t    return _rnds;\n\t  };\n\t}\n\t\n\tmodule.exports = rng;\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Auth = __webpack_require__(170);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /* global angular */\n\t\n\t\n\tangular.module('dappChess').factory('crypto', function () {\n\t  /*\n\t   * Usage:\n\t   * let text = 'My super text to be signed';\n\t   * let signature = crypto.sign(web3.eth.accounts[0], gameId, text);\n\t   * let valid = crypto.verify(web3.eth.accounts[0], gameId, signature, text);\n\t   */\n\t\n\t  var crypto = {};\n\t\n\t  function leftPad(nr, n, str) {\n\t    return Array(n - String(nr).length + 1).join(str || '0') + nr;\n\t  }\n\t\n\t  function solSha3() {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    args = args.map(function (arg) {\n\t      if (typeof arg === 'string') {\n\t        if (arg.substring(0, 2) === '0x') {\n\t          return arg.slice(2);\n\t        } else {\n\t          return _Auth.web3.toHex(arg).slice(2);\n\t        }\n\t      }\n\t\n\t      if (typeof arg === 'number') {\n\t        if (arg < 0) {\n\t          return leftPad((arg >>> 0).toString(16), 64, 'F');\n\t        }\n\t        return leftPad(arg.toString(16), 64, 0);\n\t      } else {\n\t        return '';\n\t      }\n\t    });\n\t\n\t    args = args.join('');\n\t\n\t    return '0x' + _Auth.web3.sha3(args, { encoding: 'hex' });\n\t  }\n\t  crypto.solSha3 = solSha3;\n\t\n\t  /**\n\t   * Calculates the signature of the given data.\n\t   * @param{string} account to be used for signing\n\t   * @param{string/number/array} data to be signed\n\t   * @returns{string} the signature of the given data\n\t   */\n\t  crypto.sign = function (account, gameId) {\n\t    var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\t\n\t    if (!Array.isArray(data)) data = [data];\n\t    var hash = solSha3.apply(undefined, _toConsumableArray(data).concat([gameId]));\n\t    return _Auth.web3.eth.sign(account, hash);\n\t  };\n\t\n\t  /**\n\t   * Verifies the signature of the given data.\n\t   * @param{string} account of the signature\n\t   * @param{string} signature of the data\n\t   * @param{string/number/array} data that was signed\n\t   * @returns{boolean} true, iff the signature matches the account and data\n\t     */\n\t  crypto.verify = function (account, gameId, signature) {\n\t    var data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\t\n\t    if (!Array.isArray(data)) data = [data];\n\t    var msgHash = solSha3.apply(undefined, _toConsumableArray(data).concat([gameId]));\n\t    var r = signature.slice(0, 66);\n\t    var s = '0x' + signature.slice(66, 130);\n\t    var v = '0x' + signature.slice(130, 132);\n\t    console.log('crypto calling web3.toDecimal', v);\n\t    v = _Auth.web3.toDecimal(v);\n\t\n\t    return _Auth.Auth.verify(account, msgHash, v, r, s);\n\t  };\n\t\n\t  crypto.test = function () {\n\t    var defaultBoard = [-4, -2, -3, -5, -6, -3, -2, -4, 0, 0, 0, 4, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 3, 5, 6, 3, 2, 4, 0, 0, 0, 116, 0, 0, 0, 0];\n\t\n\t    var text = 'My super text to be signed';\n\t    var gameId = 0x529ae4d1feee4c1b4ae8194856bfec24ae7589bd2e31604d52a9019262b8d38e;\n\t\n\t    var signature = crypto.sign(_Auth.web3.eth.accounts[0], gameId, text);\n\t    var valid = crypto.verify(_Auth.web3.eth.accounts[0], gameId, signature, text);\n\t    console.log('testing crypto.sign & crypo.verify: text \\t\\t\\t==>', valid);\n\t\n\t    signature = crypto.sign(_Auth.web3.eth.accounts[0], gameId, defaultBoard);\n\t    valid = crypto.verify(_Auth.web3.eth.accounts[0], gameId, signature, defaultBoard);\n\t    console.log('testing crypto.sign & crypo.verify: defaultBoard \\t==>', valid);\n\t\n\t    signature = crypto.sign(_Auth.web3.eth.accounts[0], gameId, text);\n\t    valid = _Auth.Auth.verifySig(_Auth.web3.eth.accounts[0], solSha3(text, gameId), signature);\n\t    console.log('testing crypto.sign & Auth.verifySig: text \\t\\t\\t==>', valid);\n\t\n\t    signature = crypto.sign(_Auth.web3.eth.accounts[0], gameId, defaultBoard);\n\t    valid = _Auth.Auth.verifySig(_Auth.web3.eth.accounts[0], solSha3.apply(undefined, defaultBoard.concat([gameId])), signature);\n\t    console.log('testing crypto.sign & Auth.verifySig: defaultBoard \\t==>', valid);\n\t  };\n\t\n\t  //crypto.test();\n\t\n\t  return crypto;\n\t});\n\n/***/ }),\n/* 170 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Web3 Helper\r\n\t * Returns initialized web3 instance\r\n\t *\r\n\t * @author: U-Zyn Chua <chua@uzyn.com>\r\n\t */\r\n\tvar Web3 = __webpack_require__(21);\r\n\tvar web3;\r\n\tif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n\t web3 = new Web3(window.web3.currentProvider);\r\n\t} else {\r\n\t web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n\t}\r\n\t\n\tmodule.exports = {\n\t\"Auth\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"verifySig\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"}]).at(\"0x9c4c1ef3f9c4abf6d44e8640c99a6292b6908633\"),\n\tweb3: web3\n\t};\n\n\n/***/ }),\n/* 171 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/* global angular */\n\tangular.module('dappChess').controller('WelcomeCtrl', function () {});\n\n/***/ }),\n/* 172 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/* global angular */\n\tvar MESSAGE_TIMEOUTS = { message: 7000, success: 6000, error: 14000 };\n\t\n\tangular.module('dappChess').controller('MessagesCtrl', function ($scope, $timeout) {\n\t  $scope.messages = [];\n\t\n\t  $scope.$on('message', function (event, message) {\n\t    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : message;\n\t    var topic = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\t\n\t    var id = Math.random();\n\t\n\t    if (topic) {\n\t      $scope.messages = $scope.messages.filter(function (message) {\n\t        if (topic === message.topic) {\n\t          return false;\n\t        }\n\t        return true;\n\t      });\n\t    }\n\t    if (type === 'success' || type === 'error' || type === 'message') {\n\t      $timeout(function () {\n\t        $scope.messages = $scope.messages.filter(function (message) {\n\t          if (id === message.id) {\n\t            return false;\n\t          }\n\t          return true;\n\t        });\n\t      }, MESSAGE_TIMEOUTS[type]);\n\t    }\n\t\n\t    $scope.messages.push({\n\t      id: id,\n\t      message: message,\n\t      type: type,\n\t      topic: topic\n\t    });\n\t  });\n\t});\n\n/***/ }),\n/* 173 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Chess = __webpack_require__(20);\n\t\n\tangular.module('dappChess').controller('InitializeGameCtrl', function ($rootScope, $scope, accounts) {\n\t  $scope.startcolor = 'white';\n\t  $scope.username = null;\n\t  $scope.turntime = 10;\n\t  $scope.etherbet = 0;\n\t\n\t  $scope.accounts = accounts;\n\t\n\t  function initializeGame() {\n\t    $rootScope.$broadcast('message', 'Your game is being created, please wait a moment...', 'loading', 'startgame');\n\t\n\t    try {\n\t      console.log('Trying to initialize game', $scope.username, {\n\t        from: accounts.selectedAccount,\n\t        value: _Chess.web3.toWei($scope.etherbet / 2, 'ether')\n\t      });\n\t      _Chess.Chess.initGame($scope.username, $scope.startcolor === 'white', $scope.turntime, {\n\t        from: accounts.selectedAccount,\n\t        gas: 10000000,\n\t        value: _Chess.web3.toWei($scope.etherbet / 2, 'ether')\n\t      });\n\t    } catch (e) {\n\t      console.log('Error on initialize game', e);\n\t      $rootScope.$broadcast('message', 'Could not initialize the game', 'loading', 'startgame');\n\t    }\n\t  }\n\t\n\t  $scope.initializeGame = function (form) {\n\t    if (form.$valid) {\n\t      initializeGame();\n\t    }\n\t  };\n\t}); /* global angular */\n\n/***/ }),\n/* 174 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Chess = __webpack_require__(20);\n\t\n\tangular.module('dappChess').controller('JoinGameCtrl', function ($rootScope, $scope, games, accounts) {\n\t  $scope.username = null;\n\t  $scope.gameId = null;\n\t  $scope.games = games.list;\n\t  $scope.openGames = games.openGames;\n\t  $scope.etherbet = 0;\n\t\n\t  $scope.accounts = accounts;\n\t\n\t  $scope.setSelectedGame = function ($event, game) {\n\t    $scope.gameId = game.gameId;\n\t    $scope.etherbet = game.pot;\n\t\n\t    $event.preventDefault();\n\t  };\n\t  $scope.isSelectedGame = function (game) {\n\t    return $scope.gameId === game.gameId;\n\t  };\n\t\n\t  function joinGame() {\n\t    $rootScope.$broadcast('message', 'Trying to join the game, please wait a moment.....', 'loading', 'joingame');\n\t    try {\n\t      console.log('Trying to join game', $scope.gameId, $scope.username, {\n\t        from: accounts.selectedAccount,\n\t        value: _Chess.web3.toWei($scope.etherbet.replace(',', '.'), 'ether')\n\t      });\n\t      _Chess.Chess.joinGame($scope.gameId, $scope.username, {\n\t        from: accounts.selectedAccount,\n\t        gas: 10000000,\n\t        value: _Chess.web3.toWei($scope.etherbet.replace(',', '.'), 'ether')\n\t      });\n\t    } catch (e) {\n\t      console.log('Error joining the game', e);\n\t      $rootScope.$broadcast('message', 'Could not join the game', 'loading', 'joingame');\n\t    }\n\t  }\n\t\n\t  $scope.joinGame = function (form) {\n\t    if (form.$valid) {\n\t      joinGame();\n\t    }\n\t  };\n\t}); /* global angular */\n\n/***/ }),\n/* 175 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Chess = __webpack_require__(20);\n\t\n\tvar _fenConversion = __webpack_require__(110);\n\t\n\t/* global angular, Chessboard, ChessUtils */\n\tvar _module = angular.module('dappChess');\n\t_module.controller('PlayGameCtrl', function (games, gameStates, $route, navigation, $scope, $rootScope, $timeout) {\n\t  // init chess validation\n\t  var board, lastFrom, lastTo, chessMove;\n\t\n\t  $scope.gamePgn = '';\n\t  $scope.gameStatus = '';\n\t\n\t  function lightItUp() {\n\t    var xWhite = 0,\n\t        yWhite = 8;\n\t    var xBlack = 7,\n\t        yBlack = 1;\n\t    var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\t    var playerWhite = {};\n\t    var playerBlack = {};\n\t\n\t    for (var i = 0; i < 64; i++) {\n\t      playerWhite[alphabet[xWhite] + yWhite] = i;\n\t      playerBlack[alphabet[xBlack] + yBlack] = i;\n\t\n\t      xWhite++;\n\t      xBlack--;\n\t      if (xWhite === 8 && xBlack) {\n\t        yWhite--;\n\t        yBlack++;\n\t        xWhite = 0;\n\t        xBlack = 7;\n\t      }\n\t    }\n\t\n\t    return { 'playerWhite': playerWhite, 'playerBlack': playerBlack };\n\t  }\n\t\n\t  function checkOpenGame(gameId) {\n\t    return games.openGames.indexOf(gameId) !== -1;\n\t  }\n\t\n\t  // Update game information to user\n\t  function updateGameInfo(status) {\n\t    $scope.gameStatus = status;\n\t    $scope.gamePgn = $scope.game.chess.pgn();\n\t    // Clean up Setup line\n\t    $scope.gamePgn = $scope.gamePgn.replace(/\\[SetUp \"1\"\\]\\n\\[FEN \"(.*?)\"\\]/, '$1');\n\t  }\n\t\n\t  // player clicked on chess piece\n\t  function pieceSelected(notationSquare) {\n\t    var i,\n\t        movesNotation,\n\t        movesPosition = [];\n\t\n\t    movesNotation = $scope.game.chess.moves({ square: notationSquare, verbose: true });\n\t    for (i = 0; i < movesNotation.length; i++) {\n\t      movesPosition.push(ChessUtils.convertNotationSquareToIndex(movesNotation[i].to));\n\t    }\n\t    return movesPosition;\n\t  }\n\t\n\t  function updateBoardState(game) {\n\t    var chessMove = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t    console.log('updateBoardState', game, chessMove);\n\t    var chess = game.chess;\n\t\n\t    if (chessMove) {\n\t      // If we know which move it was, show it on board\n\t      console.log('Updating chess board with move');\n\t      board.move(chessMove.from + '-' + chessMove.to);\n\t\n\t      var highlights = lightItUp();\n\t      var fromW = highlights.playerWhite[chessMove.from];\n\t      var toW = highlights.playerWhite[chessMove.to];\n\t      var fromB = highlights.playerBlack[chessMove.from];\n\t      var toB = highlights.playerBlack[chessMove.to];\n\t\n\t      if (lastFrom !== null) {\n\t        $('#board-' + game.gameId + '_chess_square_' + lastFrom).removeClass('chess_square_moved');\n\t        $('#board-' + game.gameId + '_chess_square_' + lastTo).removeClass('chess_square_moved');\n\t      }\n\t\n\t      if (game.self.color === 'white') {\n\t        $('#board-' + game.gameId + '_chess_square_' + fromW).addClass('chess_square_moved');\n\t        $('#board-' + game.gameId + '_chess_square_' + toW).addClass('chess_square_moved');\n\t        lastFrom = fromW;\n\t        lastTo = toW;\n\t      } else {\n\t        $('#board-' + game.gameId + '_chess_square_' + fromB).addClass('chess_square_moved');\n\t        $('#board-' + game.gameId + '_chess_square_' + toB).addClass('chess_square_moved');\n\t        lastFrom = fromB;\n\t        lastTo = toB;\n\t      }\n\t    } else {\n\t      // no known move to show, just update board\n\t      console.log('Updating chess board with state');\n\t      board.position(game.chess.fen().split(' ')[0]);\n\t      if (lastFrom !== null) {\n\t        $('#board-' + game.gameId + '_chess_square_' + lastFrom).removeClass('chess_square_moved');\n\t        $('#board-' + game.gameId + '_chess_square_' + lastTo).removeClass('chess_square_moved');\n\t      }\n\t    }\n\t\n\t    var nextPlayer = void 0,\n\t        status = void 0,\n\t        userColor = game.self.color === 'white' ? 'w' : 'b';\n\t    // define next player\n\t    if (userColor === chess.turn()) {\n\t      nextPlayer = 'You';\n\t      status = 'It\\'s your turn.';\n\t      board.enableUserInput(true);\n\t    } else {\n\t      nextPlayer = game.opponent.username;\n\t      status = 'It\\'s ' + nextPlayer + '\\'s turn.';\n\t      board.enableUserInput(false);\n\t    }\n\t\n\t    /*\n\t     Situation: - Black/White makes a move. White/Black is in turn now.\n\t     - Black/White checks checkmate, draw and stalemate conditions\n\t     - If one of these conditions is true Black/White informs blockchain\n\t     about the situation.\n\t     - Note: only the player before will inform blockchain\n\t     */\n\t    if (chess.in_checkmate() === true) {\n\t      // jshint ignore:line\n\t      status = 'CHECKMATE! ' + nextPlayer + ' lost.';\n\t      if (chess.turn() === 'b' && game.self.color === 'white') {\n\t        games.claimWin(game);\n\t      }\n\t      if (chess.turn() === 'w' && game.self.color === 'black') {\n\t        games.claimWin(game);\n\t      }\n\t    }\n\t    // draw?\n\t    else if (chess.in_draw() === true) {\n\t        // jshint ignore:line\n\t        status = 'DRAW!';\n\t        if (chess.turn() === 'b' && game.self.color === 'white') {\n\t          games.offerDraw(game);\n\t        }\n\t        if (chess.turn() === 'w' && game.self.color === 'black') {\n\t          games.offerDraw(game);\n\t        }\n\t      }\n\t\n\t      // stalemate?\n\t      else if (chess.in_stalemate() === true) {\n\t          // jshint ignore:line\n\t          status = 'STALEMATE!';\n\t          if (chess.turn() === 'b' && game.self.color === 'white') {\n\t            games.offerDraw(game);\n\t          }\n\t          if (chess.turn() === 'w' && game.self.color === 'black') {\n\t            games.offerDraw(game);\n\t          }\n\t        }\n\t\n\t        // plaver in check?\n\t        else if (chess.in_check() === true) {\n\t            // jshint ignore:line\n\t            status = 'CHECK! ' + status;\n\t          }\n\t    updateGameInfo(status);\n\t  }\n\t\n\t  function pieceMoveOffChain(move) {\n\t    var game = $scope.getGame();\n\t    console.log('pieceMoveOffChain move number before', gameStates.getMoveNumberFromState(game.state));\n\t    console.log('old fen', game.chess.fen());\n\t    // move piece from ... to\n\t    chessMove = game.chess.move({\n\t      from: move.from,\n\t      to: move.to,\n\t      promotion: 'q'\n\t    });\n\t\n\t    var fen = game.chess.fen();\n\t    console.log('new fen', fen);\n\t\n\t    if (chessMove !== null) {\n\t      // Submit move off-chain\n\t      game.state = (0, _fenConversion.generateState)(fen);\n\t      console.log('pieceMoveOffChain move number after', gameStates.getMoveNumberFromState(game.state));\n\t\n\t      updateBoardState(game, move);\n\t      // be sure to call sendMove after game updated!\n\t      games.sendMove(game, move.from, move.to);\n\t      $scope.$apply();\n\t    } else {\n\t      // Invalid move\n\t    }\n\t\n\t    return game.chess.fen();\n\t  }\n\t\n\t  function initChessboard(game) {\n\t    board = new Chessboard('board-' + game.gameId, {\n\t      position: game.chess.fen(),\n\t      eventHandlers: {\n\t        onPieceSelected: pieceSelected,\n\t        onMove: pieceMoveOffChain\n\t      }\n\t    });\n\t\n\t    // set board orientation and disable black player to click\n\t    if (game.self.color === 'black') {\n\t      board.setOrientation(ChessUtils.ORIENTATION.black);\n\t    }\n\t\n\t    // Update game information\n\t    if (game.ended) {\n\t      updateGameInfo('Game ended.');\n\t      board.enableUserInput(false);\n\t    } else {\n\t      if (game.chess.turn() === game.self.color[0]) {\n\t        updateGameInfo('It\\'s your turn.');\n\t        board.enableUserInput(true);\n\t      } else {\n\t        updateGameInfo('It\\'s your opponent\\'s turn.');\n\t        board.enableUserInput(false);\n\t      }\n\t    }\n\t  }\n\t\n\t  $scope.getGameId = function () {\n\t    return $route.current.params.id;\n\t  };\n\t\n\t  $scope.isOpenGame = function () {\n\t    var gameId = $scope.getGameId();\n\t\n\t    if (gameId) {\n\t      return checkOpenGame(gameId);\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  $scope.getGame = function () {\n\t    var gameId = $scope.getGameId();\n\t\n\t    if (gameId) {\n\t      return games.getGame(gameId);\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  $scope.Resign = function () {\n\t    $rootScope.$broadcast('message', 'Submitting your Resign, please wait...', 'loading', 'playgame');\n\t    try {\n\t      _Chess.Chess.Resign($scope.getGameId(), { from: $scope.getGame().self.accountId,\n\t        gas: 10000000 });\n\t    } catch (e) {\n\t      $rootScope.$broadcast('message', 'Could not submit your Resign', 'error', 'playgame-' + $scope.getGameId());\n\t    }\n\t  };\n\t\n\t  $scope.gameIsWon = function () {\n\t    var game = $scope.getGame();\n\t    if (game) {\n\t      return typeof game.winner !== 'undefined' && game.winner === 'self';\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  $scope.gameIsLost = function () {\n\t    var game = $scope.getGame();\n\t    if (game) {\n\t      return typeof game.winner !== 'undefined' && game.winner === 'opponent';\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  $scope.gameIsDraw = function () {\n\t    var game = $scope.getGame();\n\t    if (game) {\n\t      return game.ended && (typeof game.winner === 'undefined' || game.winner !== 'self' && game.winner !== 'opponent');\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  $scope.gameIsActive = function () {\n\t    var game = $scope.getGame();\n\t\n\t    if (game) {\n\t      return !game.ended;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  $scope.gameCanClaimWin = function () {\n\t    var game = $scope.getGame();\n\t    if (game && game.chess) {\n\t      return game.timeoutState === 0 && game.nextPlayer !== game.self.accountId && typeof game.nextPlayer !== 'undefined' && game.chess.in_check() && // jshint ignore:line\n\t      !game.ended;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  $scope.gameCanOfferDraw = function () {\n\t    var game = $scope.getGame();\n\t    if (game) {\n\t      var timeoutDatePlus2TurnTime = new Date(game.timeoutStarted * 1000 + 2 * game.turnTime * 60000);\n\t      return (game.timeoutState === 0 || game.timeoutState === 2 && timeoutDatePlus2TurnTime < new Date()) && !game.ended;\n\t    }\n\t  };\n\t\n\t  $scope.gameCanClaimTimeout = function () {\n\t    var game = $scope.getGame();\n\t    if (game) {\n\t      return game.timeoutState === 0 && game.nextPlayer !== game.self.accountId && typeof game.nextPlayer !== 'undefined' && !game.ended;\n\t    }\n\t  };\n\t\n\t  $scope.gameCanConfirmDraw = function () {\n\t    var game = $scope.getGame();\n\t    if (game) {\n\t      return (game.timeoutState === -1 && game.nextPlayer === game.self.accountId || game.timeoutState === -2 && game.nextPlayer !== game.self.accountId && typeof game.nextPlayer !== 'undefined') && !game.ended;\n\t    }\n\t  };\n\t\n\t  $scope.gameCanConfirmLoose = function () {\n\t    var game = $scope.getGame();\n\t    if (game) {\n\t      return (game.timeoutState === 1 || game.timeoutState === 2) && game.nextPlayer === game.self.accountId && !game.ended;\n\t    }\n\t  };\n\t\n\t  $scope.gameCanClaimTimeoutEnded = function () {\n\t    var game = $scope.getGame();\n\t    if (game && game.timeoutState !== 0) {\n\t      var timeoutDatePlusTurnTime = new Date(game.timeoutStarted * 1000 + game.turnTime * 60000);\n\t      // TODO show button dynamically, i think now it is only shown after reload when time greater\n\t      // 10 minutes\n\t      return game.timeoutState !== 0 && game.nextPlayer !== game.self.accountId && timeoutDatePlusTurnTime < new Date() && !game.ended;\n\t    }\n\t  };\n\t\n\t  $scope.claimWin = function () {\n\t    games.claimWin($scope.getGame());\n\t  };\n\t\n\t  $scope.offerDraw = function () {\n\t    games.offerDraw($scope.getGame());\n\t  };\n\t\n\t  $scope.claimTimeout = function () {\n\t    games.claimTimeout($scope.getGame());\n\t  };\n\t\n\t  $scope.confirmGameEnded = function () {\n\t    games.confirmGameEnded($scope.getGame());\n\t  };\n\t\n\t  $scope.claimTimeoutEnded = function () {\n\t    games.claimTimeoutEnded($scope.getGame());\n\t  };\n\t\n\t  $scope.gameHasClaimableEther = function () {\n\t    var game = $scope.getGame();\n\t\n\t    if (game) {\n\t      return game.self.wonEther > 0;\n\t    }\n\t\n\t    return false;\n\t  };\n\t\n\t  $scope.claimEther = function () {\n\t    games.claimEther($scope.getGame());\n\t  };\n\t\n\t  $scope.closeGame = function () {\n\t    _Chess.Chess.closePlayerGame($scope.getGameId(), { from: $scope.getGame().self.accountId,\n\t      gas: 10000000 });\n\t    $rootScope.$broadcast('message', 'Closing your game, please wait...', 'loading', 'playgame');\n\t  };\n\t\n\t  $scope.game = $scope.getGame();\n\t\n\t  // Keep track of currently viewing game\n\t  games.viewingGame.id = $scope.game.gameId;\n\t  $scope.$on('$destroy', function () {\n\t    games.viewingGame.id = 0;\n\t  });\n\t\n\t  // Initialize chessboard\n\t  if (!$scope.isOpenGame()) {\n\t    if ($scope.game) {\n\t      $timeout(function () {\n\t        initChessboard($scope.game);\n\t        updateBoardState($scope.game);\n\t        // $scope.$watch('game.lastMove', function(checkMove) {\n\t        //   updateBoardState($scope.game, checkMove);\n\t        // });\n\t        $scope.$watch('game.state', function () {\n\t          console.log('$watch game.state');\n\t          var g = $scope.game;\n\t          try {\n\t            var toFrontend = (0, _fenConversion.generateMapping)().toFrontend;\n\t\n\t            if (g.chess.turn() === g.self.color[0]) {\n\t              var lastOpponentMove = gameStates.getLastOpponentMove(g.gameId);\n\t              if ((0, _fenConversion.generateFen)(lastOpponentMove.newState) === (0, _fenConversion.generateFen)(g.state)) {\n\t                console.log('$watch send', {\n\t                  from: toFrontend[lastOpponentMove.moveFrom],\n\t                  to: toFrontend[lastOpponentMove.moveTo]\n\t                }, lastOpponentMove);\n\t                updateBoardState(g, {\n\t                  from: toFrontend[lastOpponentMove.moveFrom],\n\t                  to: toFrontend[lastOpponentMove.moveTo]\n\t                });\n\t                return;\n\t              }\n\t            } /* else {\n\t               let lastSelfMove = gameStates.getLastSelfMove(g.gameId);\n\t               if (generateFen(lastSelfMove.newState) === generateFen(g.state)) {\n\t                 updateBoardState(g, {\n\t                   from: toFrontend[lastSelfMove.moveFrom],\n\t                   to: toFrontend[lastSelfMove.moveTo]\n\t                 });\n\t                 return;\n\t               }\n\t              }*/\n\t          } catch (e) {\n\t            console.log('$watch throw', e);\n\t          }\n\t          console.log('$watch update without move');\n\t          updateBoardState($scope.game);\n\t        });\n\t      });\n\t    } else {\n\t      navigation.goto(navigation.welcomePage);\n\t      $rootScope.$broadcast('message', 'No game with the specified id exists', 'error', 'playgame');\n\t    }\n\t  }\n\t});\n\t\n\t_module.directive('countdown', ['$interval', function ($interval) {\n\t  return {\n\t    scope: { 'to': '=countdown' },\n\t    template: '{{timeLeft}}',\n\t    link: function link(scope) {\n\t      scope.timeLeft = '';\n\t\n\t      function update() {\n\t        var diff = scope.to.getTime() - new Date().getTime();\n\t        if (diff > 0) {\n\t          var minutes = ('00' + Math.floor(diff / 60000)).substr(-2);\n\t          var seconds = ('00' + Math.floor(diff % 60000 / 1000)).substr(-2);\n\t          scope.timeLeft = minutes + ':' + seconds + ' left';\n\t        } else {\n\t          scope.timeLeft = 'Time\\'s up!';\n\t        }\n\t      }\n\t\n\t      var interval;\n\t      function init() {\n\t        if (typeof scope.to === 'undefined' || !scope.to) {\n\t          if (typeof interval !== 'undefined') {\n\t            interval.cancel();\n\t            scope.timeLeft = '';\n\t          }\n\t          return;\n\t        }\n\t        interval = $interval(update, 1000);\n\t      }\n\t\n\t      scope.$watch('to', function () {\n\t        init();\n\t      });\n\t      init();\n\t    }\n\t  };\n\t}]);\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a00b70ce625d47009c25","require('./app/less/base.less');\n\n\t//require('./app/javascript/metamask.js');\n\nrequire('./app/javascript/app.js');\nrequire('./app/javascript/accounts.js');\nrequire('./app/javascript/navigation.js');\nrequire('./app/javascript/gameStatesFactory.js');\nrequire('./app/javascript/gamesFactory.js');\nrequire('./app/javascript/cryptoFactory.js');\nrequire('./app/javascript/welcome.js');\nrequire('./app/javascript/messages.js');\nrequire('./app/javascript/initializeGame.js');\nrequire('./app/javascript/joinGame.js');\nrequire('./app/javascript/playGame.js');\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/* global angular */\n\nangular.module('dappChess', ['ngRoute', 'ngAnimate']);\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/app.js","/* global angular, mist, blockies */\nimport {web3, Chess} from '../../contract/Chess.sol';\nangular.module('dappChess').factory('accounts', function () {\n  let accounts = {\n    // Use the first 5 accounts for mist or firefox and the last 5 for other browsers\n    availableAccounts: (typeof(mist) !== 'undefined' ||\n    window.navigator.userAgent.indexOf\n    ('Firefox') !== -1) ? web3.eth.accounts.slice(0, Math.floor\n    (web3.eth.accounts.length / 2)) : web3.eth.accounts.slice(Math.floor\n    (web3.eth.accounts.length / 2), web3.eth.accounts.length),\n    \n    defaultAccount: web3.eth.defaultAccount, selectedAccount: null,\n    selectedAccountName: null,\n    \n    // Get ether balance with 4 digit precision\n    getBalance: function(account) {\n      if(web3.eth.accounts.indexOf(account) !== -1) {\n        return web3.fromWei(\n          web3.eth.getBalance(account), 'ether'\n        ).toDigits(20, 3).toString(10);\n      }\n\n      return false;\n    },\n\n    \n    getEloScore: function (account) {\n      if (typeof account !== 'undefined' && account !== null) {\n        try {\n          return Chess.getEloScore(account).toNumber();\n        } catch (e) {\n          return 100;\n        }\n      }\n      return 0;\n    },\n    getBlockie: function(account) {\n      if(account) {\n        return {\n          'background-image': 'url(\\'' + blockies.create({\n            seed: account\n          }).toDataURL() + '\\')'\n        };\n      }\n      else {\n        return {};\n      }\n    }\n  };\n  accounts.isSelectedAccount = function(account) {\n    return accounts.selectedAccount === account;\n  };\n  accounts.setSelectedAccount = function(account, name) {\n    accounts.selectedAccount = account;\n    if (name) {\n      accounts.selectedAccountName = name;\n    }\n    else {\n      accounts.selectedAccountName = accounts.selectedAccount.substr(0, 7) +\n        '...' + accounts.selectedAccount.substr(-7, 7);\n    }\n  };\n  accounts.selectOrCreateAccount = function($event) {\n    $event.preventDefault();\n\n    if(typeof(mist) !== 'undefined') {\n      accounts.setSelectedAccount(mist.requestAccount());\n    }\n    else {\n      jQuery('#overlay').show();\n      jQuery('#selectAccountLayer').show();\n    }\n  };\n  accounts.selectAccount = function(account, name) {\n    if(name) {\n      accounts.setSelectedAccount(account, name);\n    }\n    else {\n      accounts.setSelectedAccount(account);\n    }\n    $('#selectAccountLayer').fadeOut();\n    $('#overlay').fadeOut();\n  };\n  return accounts;\n}).controller('accountsCtrl', function(accounts, $scope) {\n  $scope.accounts = accounts;\n});\n\njQuery(document).ready(function($) {\n  $('#overlay').click(function() {\n    $('#layers  div.layer').fadeOut();\n    $('#overlay').fadeOut();\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/accounts.js","/**\r\n * Web3 Helper\r\n * Returns initialized web3 instance\r\n *\r\n * @author: U-Zyn Chua <chua@uzyn.com>\r\n */\r\nvar Web3 = require('web3');\r\nvar web3;\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n web3 = new Web3(window.web3.currentProvider);\r\n} else {\r\n web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n}\r\n\nmodule.exports = {\n\"Auth\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"verifySig\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"}]).at(\"0x17e88bb6dab0b74d32a109cb85a691d22403e508\"),\n\"ELO\": web3.eth.contract([{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"abs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ELO.Scores storage\"},{\"name\":\"player\",\"type\":\"address\"},{\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"setScore\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"self\",\"type\":\"ELO.Scores storage\"},{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getScore\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ELO.Scores storage\"},{\"name\":\"player1\",\"type\":\"address\"},{\"name\":\"player2\",\"type\":\"address\"},{\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"recordResult\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"difference\",\"type\":\"int256\"},{\"name\":\"resultA\",\"type\":\"int256\"}],\"name\":\"getScoreChange\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"}],\"type\":\"function\"}]).at(\"0xa4874f20c069029ee4154cab035aa80468eb0692\"),\n\"ChessLogic\": web3.eth.contract([{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"newState\",\"type\":\"int8[128]\"},{\"name\":\"nextPlayerColor\",\"type\":\"int8\"}],\"name\":\"setState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"abs\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"nextPlayerColor\",\"type\":\"int8\"}],\"name\":\"setupState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"boolToInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"},{\"name\":\"fromFigure\",\"type\":\"int8\"},{\"name\":\"toFigure\",\"type\":\"int8\"},{\"name\":\"movingPlayerColor\",\"type\":\"int8\"}],\"name\":\"validateMove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"direction\",\"type\":\"int8\"},{\"name\":\"start\",\"type\":\"int8\"}],\"name\":\"getFirstFigure\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"movingPlayerColor\",\"type\":\"int8\"}],\"name\":\"getOwnKing\",\"outputs\":[{\"name\":\"\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"self\",\"type\":\"ChessLogic.State storage\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"},{\"name\":\"isWhite\",\"type\":\"bool\"}],\"name\":\"move\",\"outputs\":[],\"type\":\"function\"}]).at(\"0x929da938e8a88afd84082dbd593ec949639cd41c\"),\n\"Chess\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"openGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimWin\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"rejectCurrentPlayerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getEloScore\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"isGameEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"state\",\"type\":\"int8[128]\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"},{\"name\":\"sigState\",\"type\":\"bytes\"}],\"name\":\"moveFromState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"playAsWhite\",\"type\":\"bool\"},{\"name\":\"turnTime\",\"type\":\"uint256\"}],\"name\":\"initGame\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"getCurrentGameState\",\"outputs\":[{\"name\":\"\",\"type\":\"int8[128]\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"state\",\"type\":\"int8[128]\"},{\"name\":\"nextPlayer\",\"type\":\"address\"}],\"name\":\"setGameState\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"head\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"confirmGameEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeoutEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"gamesOfPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeout\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"getWhitePlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"claimTimeoutEndedWithMove\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"verifySig\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOpenGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"Resign\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"offerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"player2Alias\",\"type\":\"string\"}],\"name\":\"joinGame\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamesOfPlayersHeads\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getGamesOfPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"games\",\"outputs\":[{\"name\":\"player1\",\"type\":\"address\"},{\"name\":\"player2\",\"type\":\"address\"},{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"player2Alias\",\"type\":\"string\"},{\"name\":\"nextPlayer\",\"type\":\"address\"},{\"name\":\"winner\",\"type\":\"address\"},{\"name\":\"ended\",\"type\":\"bool\"},{\"name\":\"pot\",\"type\":\"uint256\"},{\"name\":\"player1Winnings\",\"type\":\"uint256\"},{\"name\":\"player2Winnings\",\"type\":\"uint256\"},{\"name\":\"turnTime\",\"type\":\"uint256\"},{\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"name\":\"timeoutState\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"closePlayerGame\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[{\"name\":\"enableDebugging\",\"type\":\"bool\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"player1Alias\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"playerWhite\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"turnTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"GameInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"player1Alias\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"player2\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"player2Alias\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"playerWhite\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"pot\",\"type\":\"uint256\"}],\"name\":\"GameJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"state\",\"type\":\"int8[128]\"}],\"name\":\"GameStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"Move\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"EloScoreUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeoutState\",\"type\":\"int8\"}],\"name\":\"GameTimeoutStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameDrawOfferRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value3\",\"type\":\"uint256\"}],\"name\":\"DebugInts\",\"type\":\"event\"}]).at(\"0x5b4e71e1be8436a1d46108f2f64a49394c668c60\"),\n\"TurnBasedGame\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"openGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimWin\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"rejectCurrentPlayerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"isGameEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"playAsWhite\",\"type\":\"bool\"},{\"name\":\"turnTime\",\"type\":\"uint256\"}],\"name\":\"initGame\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"head\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"confirmGameEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeoutEnded\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"gamesOfPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"claimTimeout\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOpenGameIds\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"Resign\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"offerDraw\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"},{\"name\":\"player2Alias\",\"type\":\"string\"}],\"name\":\"joinGame\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamesOfPlayersHeads\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getGamesOfPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"games\",\"outputs\":[{\"name\":\"player1\",\"type\":\"address\"},{\"name\":\"player2\",\"type\":\"address\"},{\"name\":\"player1Alias\",\"type\":\"string\"},{\"name\":\"player2Alias\",\"type\":\"string\"},{\"name\":\"nextPlayer\",\"type\":\"address\"},{\"name\":\"winner\",\"type\":\"address\"},{\"name\":\"ended\",\"type\":\"bool\"},{\"name\":\"pot\",\"type\":\"uint256\"},{\"name\":\"player1Winnings\",\"type\":\"uint256\"},{\"name\":\"player2Winnings\",\"type\":\"uint256\"},{\"name\":\"turnTime\",\"type\":\"uint256\"},{\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"name\":\"timeoutState\",\"type\":\"int8\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"closePlayerGame\",\"outputs\":[],\"type\":\"function\"},{\"inputs\":[{\"name\":\"enableDebugging\",\"type\":\"bool\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"timeoutStarted\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"timeoutState\",\"type\":\"int8\"}],\"name\":\"GameTimeoutStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"gameId\",\"type\":\"bytes32\"}],\"name\":\"GameDrawOfferRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"value1\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value2\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"value3\",\"type\":\"uint256\"}],\"name\":\"DebugInts\",\"type\":\"event\"}]).at(\"0x3443d685a09176c2cdd2c38a24c14b19382a3115\"),\nweb3: web3\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contract/Chess.sol\n// module id = 20\n// module chunks = 0","var Web3 = require('./lib/web3');\n\n// dont override global variable\nif (typeof window !== 'undefined' && typeof window.Web3 === 'undefined') {\n    window.Web3 = Web3;\n}\n\nmodule.exports = Web3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/index.js\n// module id = 21\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file web3.js\n * @authors:\n *   Jeffrey Wilcke <jeff@ethdev.com>\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n *   Gav Wood <g@ethdev.com>\n * @date 2014\n */\n\nvar RequestManager = require('./web3/requestmanager');\nvar Iban = require('./web3/iban');\nvar Eth = require('./web3/methods/eth');\nvar DB = require('./web3/methods/db');\nvar Shh = require('./web3/methods/shh');\nvar Net = require('./web3/methods/net');\nvar Personal = require('./web3/methods/personal');\nvar Settings = require('./web3/settings');\nvar version = require('./version.json');\nvar utils = require('./utils/utils');\nvar sha3 = require('./utils/sha3');\nvar extend = require('./web3/extend');\nvar Batch = require('./web3/batch');\nvar Property = require('./web3/property');\nvar HttpProvider = require('./web3/httpprovider');\nvar IpcProvider = require('./web3/ipcprovider');\n\n\n\nfunction Web3 (provider) {\n    this._requestManager = new RequestManager(provider);\n    this.currentProvider = provider;\n    this.eth = new Eth(this);\n    this.db = new DB(this);\n    this.shh = new Shh(this);\n    this.net = new Net(this);\n    this.personal = new Personal(this);\n    this.settings = new Settings();\n    this.version = {\n        api: version.version\n    };\n    this.providers = {\n        HttpProvider: HttpProvider,\n        IpcProvider: IpcProvider\n    };\n    this._extend = extend(this);\n    this._extend({\n        properties: properties()\n    });\n}\n\n// expose providers on the class\nWeb3.providers = {\n    HttpProvider: HttpProvider,\n    IpcProvider: IpcProvider\n};\n\nWeb3.prototype.setProvider = function (provider) {\n    this._requestManager.setProvider(provider);\n    this.currentProvider = provider;\n};\n\nWeb3.prototype.reset = function (keepIsSyncing) {\n    this._requestManager.reset(keepIsSyncing);\n    this.settings = new Settings();\n};\n\nWeb3.prototype.toHex = utils.toHex;\nWeb3.prototype.toAscii = utils.toAscii;\nWeb3.prototype.toUtf8 = utils.toUtf8;\nWeb3.prototype.fromAscii = utils.fromAscii;\nWeb3.prototype.fromUtf8 = utils.fromUtf8;\nWeb3.prototype.toDecimal = utils.toDecimal;\nWeb3.prototype.fromDecimal = utils.fromDecimal;\nWeb3.prototype.toBigNumber = utils.toBigNumber;\nWeb3.prototype.toWei = utils.toWei;\nWeb3.prototype.fromWei = utils.fromWei;\nWeb3.prototype.isAddress = utils.isAddress;\nWeb3.prototype.isChecksumAddress = utils.isChecksumAddress;\nWeb3.prototype.toChecksumAddress = utils.toChecksumAddress;\nWeb3.prototype.isIBAN = utils.isIBAN;\nWeb3.prototype.sha3 = sha3;\n\n/**\n * Transforms direct icap to address\n */\nWeb3.prototype.fromICAP = function (icap) {\n    var iban = new Iban(icap);\n    return iban.address();\n};\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'version.node',\n            getter: 'web3_clientVersion'\n        }),\n        new Property({\n            name: 'version.network',\n            getter: 'net_version',\n            inputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'version.ethereum',\n            getter: 'eth_protocolVersion',\n            inputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'version.whisper',\n            getter: 'shh_version',\n            inputFormatter: utils.toDecimal\n        })\n    ];\n};\n\nWeb3.prototype.isConnected = function(){\n    return (this.currentProvider && this.currentProvider.isConnected());\n};\n\nWeb3.prototype.createBatch = function () {\n    return new Batch(this);\n};\n\nmodule.exports = Web3;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3.js\n// module id = 22\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file requestmanager.js\n * @author Jeffrey Wilcke <jeff@ethdev.com>\n * @author Marek Kotewicz <marek@ethdev.com>\n * @author Marian Oancea <marian@ethdev.com>\n * @author Fabian Vogelsteller <fabian@ethdev.com>\n * @author Gav Wood <g@ethdev.com>\n * @date 2014\n */\n\nvar Jsonrpc = require('./jsonrpc');\nvar utils = require('../utils/utils');\nvar c = require('../utils/config');\nvar errors = require('./errors');\n\n/**\n * It's responsible for passing messages to providers\n * It's also responsible for polling the ethereum node for incoming messages\n * Default poll timeout is 1 second\n * Singleton\n */\nvar RequestManager = function (provider) {\n    this.provider = provider;\n    this.polls = {};\n    this.timeout = null;\n};\n\n/**\n * Should be used to synchronously send request\n *\n * @method send\n * @param {Object} data\n * @return {Object}\n */\nRequestManager.prototype.send = function (data) {\n    if (!this.provider) {\n        console.error(errors.InvalidProvider());\n        return null;\n    }\n\n    var payload = Jsonrpc.getInstance().toPayload(data.method, data.params);\n    var result = this.provider.send(payload);\n\n    if (!Jsonrpc.getInstance().isValidResponse(result)) {\n        throw errors.InvalidResponse(result);\n    }\n\n    return result.result;\n};\n\n/**\n * Should be used to asynchronously send request\n *\n * @method sendAsync\n * @param {Object} data\n * @param {Function} callback\n */\nRequestManager.prototype.sendAsync = function (data, callback) {\n    if (!this.provider) {\n        return callback(errors.InvalidProvider());\n    }\n\n    var payload = Jsonrpc.getInstance().toPayload(data.method, data.params);\n    this.provider.sendAsync(payload, function (err, result) {\n        if (err) {\n            return callback(err);\n        }\n        \n        if (!Jsonrpc.getInstance().isValidResponse(result)) {\n            return callback(errors.InvalidResponse(result));\n        }\n\n        callback(null, result.result);\n    });\n};\n\n/**\n * Should be called to asynchronously send batch request\n *\n * @method sendBatch\n * @param {Array} batch data\n * @param {Function} callback\n */\nRequestManager.prototype.sendBatch = function (data, callback) {\n    if (!this.provider) {\n        return callback(errors.InvalidProvider());\n    }\n\n    var payload = Jsonrpc.getInstance().toBatchPayload(data);\n\n    this.provider.sendAsync(payload, function (err, results) {\n        if (err) {\n            return callback(err);\n        }\n\n        if (!utils.isArray(results)) {\n            return callback(errors.InvalidResponse(results));\n        }\n\n        callback(err, results);\n    }); \n};\n\n/**\n * Should be used to set provider of request manager\n *\n * @method setProvider\n * @param {Object}\n */\nRequestManager.prototype.setProvider = function (p) {\n    this.provider = p;\n};\n\n/**\n * Should be used to start polling\n *\n * @method startPolling\n * @param {Object} data\n * @param {Number} pollId\n * @param {Function} callback\n * @param {Function} uninstall\n *\n * @todo cleanup number of params\n */\nRequestManager.prototype.startPolling = function (data, pollId, callback, uninstall) {\n    this.polls[pollId] = {data: data, id: pollId, callback: callback, uninstall: uninstall};\n\n\n    // start polling\n    if (!this.timeout) {\n        this.poll();\n    }\n};\n\n/**\n * Should be used to stop polling for filter with given id\n *\n * @method stopPolling\n * @param {Number} pollId\n */\nRequestManager.prototype.stopPolling = function (pollId) {\n    delete this.polls[pollId];\n\n    // stop polling\n    if(Object.keys(this.polls).length === 0 && this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n    }\n};\n\n/**\n * Should be called to reset the polling mechanism of the request manager\n *\n * @method reset\n */\nRequestManager.prototype.reset = function (keepIsSyncing) {\n    /*jshint maxcomplexity:5 */\n\n    for (var key in this.polls) {\n        // remove all polls, except sync polls,\n        // they need to be removed manually by calling syncing.stopWatching()\n        if(!keepIsSyncing || key.indexOf('syncPoll_') === -1) {\n            this.polls[key].uninstall();\n            delete this.polls[key];\n        }\n    }\n\n    // stop polling\n    if(Object.keys(this.polls).length === 0 && this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n    }\n};\n\n/**\n * Should be called to poll for changes on filter with given id\n *\n * @method poll\n */\nRequestManager.prototype.poll = function () {\n    /*jshint maxcomplexity: 6 */\n    this.timeout = setTimeout(this.poll.bind(this), c.ETH_POLLING_TIMEOUT);\n\n    if (Object.keys(this.polls).length === 0) {\n        return;\n    }\n\n    if (!this.provider) {\n        console.error(errors.InvalidProvider());\n        return;\n    }\n\n    var pollsData = [];\n    var pollsIds = [];\n    for (var key in this.polls) {\n        pollsData.push(this.polls[key].data);\n        pollsIds.push(key);\n    }\n\n    if (pollsData.length === 0) {\n        return;\n    }\n\n    var payload = Jsonrpc.getInstance().toBatchPayload(pollsData);\n    \n    // map the request id to they poll id\n    var pollsIdMap = {};\n    payload.forEach(function(load, index){\n        pollsIdMap[load.id] = pollsIds[index];\n    });\n\n\n    var self = this;\n    this.provider.sendAsync(payload, function (error, results) {\n\n\n        // TODO: console log?\n        if (error) {\n            return;\n        }\n\n        if (!utils.isArray(results)) {\n            throw errors.InvalidResponse(results);\n        }\n        results.map(function (result) {\n            var id = pollsIdMap[result.id];\n\n            // make sure the filter is still installed after arrival of the request\n            if (self.polls[id]) {\n                result.callback = self.polls[id].callback;\n                return result;\n            } else\n                return false;\n        }).filter(function (result) {\n            return !!result; \n        }).filter(function (result) {\n            var valid = Jsonrpc.getInstance().isValidResponse(result);\n            if (!valid) {\n                result.callback(errors.InvalidResponse(result));\n            }\n            return valid;\n        }).forEach(function (result) {\n            result.callback(null, result.result);\n        });\n    });\n};\n\nmodule.exports = RequestManager;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/requestmanager.js\n// module id = 23\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file jsonrpc.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Jsonrpc = function () {\n    // singleton pattern\n    if (arguments.callee._singletonInstance) {\n        return arguments.callee._singletonInstance;\n    }\n    arguments.callee._singletonInstance = this;\n\n    this.messageId = 1;\n};\n\n/**\n * @return {Jsonrpc} singleton\n */\nJsonrpc.getInstance = function () {\n    var instance = new Jsonrpc();\n    return instance;\n};\n\n/**\n * Should be called to valid json create payload object\n *\n * @method toPayload\n * @param {Function} method of jsonrpc call, required\n * @param {Array} params, an array of method params, optional\n * @returns {Object} valid jsonrpc payload object\n */\nJsonrpc.prototype.toPayload = function (method, params) {\n    if (!method)\n        console.error('jsonrpc method should be specified!');\n\n    return {\n        jsonrpc: '2.0',\n        method: method,\n        params: params || [],\n        id: this.messageId++\n    };\n};\n\n/**\n * Should be called to check if jsonrpc response is valid\n *\n * @method isValidResponse\n * @param {Object}\n * @returns {Boolean} true if response is valid, otherwise false\n */\nJsonrpc.prototype.isValidResponse = function (response) {\n    return !!response &&\n        !response.error &&\n        response.jsonrpc === '2.0' &&\n        typeof response.id === 'number' &&\n        response.result !== undefined; // only undefined is not valid json object\n};\n\n/**\n * Should be called to create batch payload object\n *\n * @method toBatchPayload\n * @param {Array} messages, an array of objects with method (required) and params (optional) fields\n * @returns {Array} batch payload\n */\nJsonrpc.prototype.toBatchPayload = function (messages) {\n    var self = this;\n    return messages.map(function (message) {\n        return self.toPayload(message.method, message.params);\n    });\n};\n\nmodule.exports = Jsonrpc;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/jsonrpc.js\n// module id = 24\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\n/**\n * Utils\n *\n * @module utils\n */\n\n/**\n * Utility functions\n *\n * @class [utils] utils\n * @constructor\n */\n\n\nvar BigNumber = require('bignumber.js');\nvar sha3 = require('./sha3.js');\nvar utf8 = require('utf8');\n\nvar unitMap = {\n    'noether':      '0',    \n    'wei':          '1',\n    'kwei':         '1000',\n    'Kwei':         '1000',\n    'babbage':      '1000',\n    'femtoether':   '1000',\n    'mwei':         '1000000',\n    'Mwei':         '1000000',\n    'lovelace':     '1000000',\n    'picoether':    '1000000',\n    'gwei':         '1000000000',\n    'Gwei':         '1000000000',\n    'shannon':      '1000000000',\n    'nanoether':    '1000000000',\n    'nano':         '1000000000',\n    'szabo':        '1000000000000',\n    'microether':   '1000000000000',\n    'micro':        '1000000000000',\n    'finney':       '1000000000000000',\n    'milliether':    '1000000000000000',\n    'milli':         '1000000000000000',\n    'ether':        '1000000000000000000',\n    'kether':       '1000000000000000000000',\n    'grand':        '1000000000000000000000',\n    'mether':       '1000000000000000000000000',\n    'gether':       '1000000000000000000000000000',\n    'tether':       '1000000000000000000000000000000'\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method padLeft\n * @param {String} string to be padded\n * @param {Number} characters that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar padLeft = function (string, chars, sign) {\n    return new Array(chars - string.length + 1).join(sign ? sign : \"0\") + string;\n};\n\n/**\n * Should be called to pad string to expected length\n *\n * @method padRight\n * @param {String} string to be padded\n * @param {Number} characters that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar padRight = function (string, chars, sign) {\n    return string + (new Array(chars - string.length + 1).join(sign ? sign : \"0\"));\n};\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nvar toUtf8 = function(hex) {\n// Find termination\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i+=2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        if (code === 0)\n            break;\n        str += String.fromCharCode(code);\n    }\n\n    return utf8.decode(str);\n};\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nvar toAscii = function(hex) {\n// Find termination\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i+=2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n\n    return str;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nvar fromUtf8 = function(str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        if (code === 0)\n            break;\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n\n    return \"0x\" + hex;\n};\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nvar fromAscii = function(str) {\n    var hex = \"\";\n    for(var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n\n    return \"0x\" + hex;\n};\n\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method transformToFullName\n * @param {Object} json-abi\n * @return {String} full fnction/event name\n */\nvar transformToFullName = function (json) {\n    if (json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n\n    var typeName = json.inputs.map(function(i){return i.type; }).join();\n    return json.name + '(' + typeName + ')';\n};\n\n/**\n * Should be called to get display name of contract function\n *\n * @method extractDisplayName\n * @param {String} name of function/event\n * @returns {String} display name for function/event eg. multiply(uint256) -> multiply\n */\nvar extractDisplayName = function (name) {\n    var length = name.indexOf('(');\n    return length !== -1 ? name.substr(0, length) : name;\n};\n\n/// @returns overloaded part of function/event name\nvar extractTypeName = function (name) {\n    /// TODO: make it invulnerable\n    var length = name.indexOf('(');\n    return length !== -1 ? name.substr(length + 1, name.length - 1 - (length + 1)).replace(' ', '') : \"\";\n};\n\n/**\n * Converts value to it's decimal representation in string\n *\n * @method toDecimal\n * @param {String|Number|BigNumber}\n * @return {String}\n */\nvar toDecimal = function (value) {\n    return toBigNumber(value).toNumber();\n};\n\n/**\n * Converts value to it's hex representation\n *\n * @method fromDecimal\n * @param {String|Number|BigNumber}\n * @return {String}\n */\nvar fromDecimal = function (value) {\n    var number = toBigNumber(value);\n    var result = number.toString(16);\n\n    return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n};\n\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BigNumber|Object}\n * @return {String}\n */\nvar toHex = function (val) {\n    /*jshint maxcomplexity: 8 */\n\n    if (isBoolean(val))\n        return fromDecimal(+val);\n\n    if (isBigNumber(val))\n        return fromDecimal(val);\n\n    if (isObject(val))\n        return fromUtf8(JSON.stringify(val));\n\n    // if its a negative number, pass it through fromDecimal\n    if (isString(val)) {\n        if (val.indexOf('-0x') === 0)\n            return fromDecimal(val);\n        else if(val.indexOf('0x') === 0)\n            return val;\n        else if (!isFinite(val))\n            return fromAscii(val);\n    }\n\n    return fromDecimal(val);\n};\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getValueOfUnit = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    var unitValue = unitMap[unit];\n    if (unitValue === undefined) {\n        throw new Error('This unit doesn\\'t exists, please use the one of the following units' + JSON.stringify(unitMap, null, 2));\n    }\n    return new BigNumber(unitValue, 10);\n};\n\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n*/\nvar fromWei = function(number, unit) {\n    var returnValue = toBigNumber(number).dividedBy(getValueOfUnit(unit));\n\n    return isBigNumber(number) ? returnValue : returnValue.toString(10);\n};\n\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BigNumber} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number\n*/\nvar toWei = function(number, unit) {\n    var returnValue = toBigNumber(number).times(getValueOfUnit(unit));\n\n    return isBigNumber(number) ? returnValue : returnValue.toString(10);\n};\n\n/**\n * Takes an input and transforms it into an bignumber\n *\n * @method toBigNumber\n * @param {Number|String|BigNumber} a number, string, HEX string or BigNumber\n * @return {BigNumber} BigNumber\n*/\nvar toBigNumber = function(number) {\n    /*jshint maxcomplexity:5 */\n    number = number || 0;\n    if (isBigNumber(number))\n        return number;\n\n    if (isString(number) && (number.indexOf('0x') === 0 || number.indexOf('-0x') === 0)) {\n        return new BigNumber(number.replace('0x',''), 16);\n    }\n\n    return new BigNumber(number.toString(10), 10);\n};\n\n/**\n * Takes and input transforms it into bignumber and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BigNumber}\n * @return {BigNumber}\n */\nvar toTwosComplement = function (number) {\n    var bigNumber = toBigNumber(number);\n    if (bigNumber.lessThan(0)) {\n        return new BigNumber(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\", 16).plus(bigNumber).plus(1);\n    }\n    return bigNumber;\n};\n\n/**\n * Checks if the given string is strictly an address\n *\n * @method isStrictAddress\n * @param {String} address the given HEX adress\n * @return {Boolean}\n*/\nvar isStrictAddress = function (address) {\n    return /^0x[0-9a-f]{40}$/i.test(address);\n};\n\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX adress\n * @return {Boolean}\n*/\nvar isAddress = function (address) {\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        // check if it has the basic requirements of an address\n        return false;\n    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        // If it's all small caps or all all caps, return true\n        return true;\n    } else {\n        // Otherwise check each case\n        return isChecksumAddress(address);\n    }\n};\n\n\n\n/**\n * Checks if the given string is a checksummed address\n *\n * @method isChecksumAddress\n * @param {String} address the given HEX adress\n * @return {Boolean}\n*/\nvar isChecksumAddress = function (address) {    \n    // Check each case\n    address = address.replace('0x','');\n    var addressHash = sha3(address.toLowerCase());\n\n    for (var i = 0; i < 40; i++ ) { \n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;    \n};\n\n\n\n/**\n * Makes a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX adress\n * @return {String}\n*/\nvar toChecksumAddress = function (address) { \n    if (typeof address === 'undefined') return '';\n\n    address = address.toLowerCase().replace('0x','');\n    var addressHash = sha3(address);\n    var checksumAddress = '0x';\n\n    for (var i = 0; i < address.length; i++ ) { \n        // If ith character is 9 to f then make it uppercase \n        if (parseInt(addressHash[i], 16) > 7) {\n          checksumAddress += address[i].toUpperCase();\n        } else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n\n/**\n * Transforms given string to valid 20 bytes-length addres with 0x prefix\n *\n * @method toAddress\n * @param {String} address\n * @return {String} formatted address\n */\nvar toAddress = function (address) {\n    if (isStrictAddress(address)) {\n        return address;\n    }\n\n    if (/^[0-9a-f]{40}$/.test(address)) {\n        return '0x' + address;\n    }\n\n    return '0x' + padLeft(toHex(address).substr(2), 40);\n};\n\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object}\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object instanceof BigNumber ||\n        (object && object.constructor && object.constructor.name === 'BigNumber');\n};\n\n/**\n * Returns true if object is string, otherwise false\n *\n * @method isString\n * @param {Object}\n * @return {Boolean}\n */\nvar isString = function (object) {\n    return typeof object === 'string' ||\n        (object && object.constructor && object.constructor.name === 'String');\n};\n\n/**\n * Returns true if object is function, otherwise false\n *\n * @method isFunction\n * @param {Object}\n * @return {Boolean}\n */\nvar isFunction = function (object) {\n    return typeof object === 'function';\n};\n\n/**\n * Returns true if object is Objet, otherwise false\n *\n * @method isObject\n * @param {Object}\n * @return {Boolean}\n */\nvar isObject = function (object) {\n    return typeof object === 'object';\n};\n\n/**\n * Returns true if object is boolean, otherwise false\n *\n * @method isBoolean\n * @param {Object}\n * @return {Boolean}\n */\nvar isBoolean = function (object) {\n    return typeof object === 'boolean';\n};\n\n/**\n * Returns true if object is array, otherwise false\n *\n * @method isArray\n * @param {Object}\n * @return {Boolean}\n */\nvar isArray = function (object) {\n    return object instanceof Array;\n};\n\n/**\n * Returns true if given string is valid json object\n *\n * @method isJson\n * @param {String}\n * @return {Boolean}\n */\nvar isJson = function (str) {\n    try {\n        return !!JSON.parse(str);\n    } catch (e) {\n        return false;\n    }\n};\n\nmodule.exports = {\n    padLeft: padLeft,\n    padRight: padRight,\n    toHex: toHex,\n    toDecimal: toDecimal,\n    fromDecimal: fromDecimal,\n    toUtf8: toUtf8,\n    toAscii: toAscii,\n    fromUtf8: fromUtf8,\n    fromAscii: fromAscii,\n    transformToFullName: transformToFullName,\n    extractDisplayName: extractDisplayName,\n    extractTypeName: extractTypeName,\n    toWei: toWei,\n    fromWei: fromWei,\n    toBigNumber: toBigNumber,\n    toTwosComplement: toTwosComplement,\n    toAddress: toAddress,\n    isBigNumber: isBigNumber,\n    isStrictAddress: isStrictAddress,\n    isAddress: isAddress,\n    isChecksumAddress: isChecksumAddress,\n    toChecksumAddress: toChecksumAddress,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isBoolean: isBoolean,\n    isArray: isArray,\n    isJson: isJson\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/utils/utils.js\n// module id = 25\n// module chunks = 0","/*! bignumber.js v2.0.7 https://github.com/MikeMcl/bignumber.js/LICENCE */\r\n\r\n;(function (global) {\r\n    'use strict';\r\n\r\n    /*\r\n      bignumber.js v2.0.7\r\n      A JavaScript library for arbitrary-precision arithmetic.\r\n      https://github.com/MikeMcl/bignumber.js\r\n      Copyright (c) 2015 Michael Mclaughlin <M8ch88l@gmail.com>\r\n      MIT Expat Licence\r\n    */\r\n\r\n\r\n    var BigNumber, crypto, parseNumeric,\r\n        isNumeric = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n        mathceil = Math.ceil,\r\n        mathfloor = Math.floor,\r\n        notBool = ' not a boolean or binary digit',\r\n        roundingMode = 'rounding mode',\r\n        tooManyDigits = 'number type has more than 15 significant digits',\r\n        ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',\r\n        BASE = 1e14,\r\n        LOG_BASE = 14,\r\n        MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n        // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n        SQRT_BASE = 1e7,\r\n\r\n        /*\r\n         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an\r\n         * exception is thrown (if ERRORS is true).\r\n         */\r\n        MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n    /*\r\n     * Create and return a BigNumber constructor.\r\n     */\r\n    function another(configObj) {\r\n        var div,\r\n\r\n            // id tracks the caller function, so its name can be included in error messages.\r\n            id = 0,\r\n            P = BigNumber.prototype,\r\n            ONE = new BigNumber(1),\r\n\r\n\r\n            /********************************* EDITABLE DEFAULTS **********************************/\r\n\r\n\r\n            /*\r\n             * The default values below must be integers within the inclusive ranges stated.\r\n             * The values can also be changed at run-time using BigNumber.config.\r\n             */\r\n\r\n            // The maximum number of decimal places for operations involving division.\r\n            DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n            /*\r\n             * The rounding mode used when rounding to the above decimal places, and when using\r\n             * toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n             * UP         0 Away from zero.\r\n             * DOWN       1 Towards zero.\r\n             * CEIL       2 Towards +Infinity.\r\n             * FLOOR      3 Towards -Infinity.\r\n             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n             */\r\n            ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n            // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n            // The exponent value at and beneath which toString returns exponential notation.\r\n            // Number type: -7\r\n            TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n            // The exponent value at and above which toString returns exponential notation.\r\n            // Number type: 21\r\n            TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n            // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n            // The minimum exponent value, beneath which underflow to zero occurs.\r\n            // Number type: -324  (5e-324)\r\n            MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n            // The maximum exponent value, above which overflow to Infinity occurs.\r\n            // Number type:  308  (1.7976931348623157e+308)\r\n            // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n            MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n            // Whether BigNumber Errors are ever thrown.\r\n            ERRORS = true,                           // true or false\r\n\r\n            // Change to intValidatorNoErrors if ERRORS is false.\r\n            isValidInt = intValidatorWithErrors,     // intValidatorWithErrors/intValidatorNoErrors\r\n\r\n            // Whether to use cryptographically-secure random number generation, if available.\r\n            CRYPTO = false,                          // true or false\r\n\r\n            /*\r\n             * The modulo mode used when calculating the modulus: a mod n.\r\n             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n             * The remainder (r) is calculated as: r = a - n * q.\r\n             *\r\n             * UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n             * DOWN      1 The remainder has the same sign as the dividend.\r\n             *             This modulo mode is commonly known as 'truncated division' and is\r\n             *             equivalent to (a % n) in JavaScript.\r\n             * FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n             *             The remainder is always positive.\r\n             *\r\n             * The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n             * modes are commonly used for the modulus operation.\r\n             * Although the other rounding modes can also be used, they may not give useful results.\r\n             */\r\n            MODULO_MODE = 1,                         // 0 to 9\r\n\r\n            // The maximum number of significant digits of the result of the toPower operation.\r\n            // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n            POW_PRECISION = 100,                     // 0 to MAX\r\n\r\n            // The format specification used by the BigNumber.prototype.toFormat method.\r\n            FORMAT = {\r\n                decimalSeparator: '.',\r\n                groupSeparator: ',',\r\n                groupSize: 3,\r\n                secondaryGroupSize: 0,\r\n                fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n                fractionGroupSize: 0\r\n            };\r\n\r\n\r\n        /******************************************************************************************/\r\n\r\n\r\n        // CONSTRUCTOR\r\n\r\n\r\n        /*\r\n         * The BigNumber constructor and exported function.\r\n         * Create and return a new instance of a BigNumber object.\r\n         *\r\n         * n {number|string|BigNumber} A numeric value.\r\n         * [b] {number} The base of n. Integer, 2 to 64 inclusive.\r\n         */\r\n        function BigNumber( n, b ) {\r\n            var c, e, i, num, len, str,\r\n                x = this;\r\n\r\n            // Enable constructor usage without new.\r\n            if ( !( x instanceof BigNumber ) ) {\r\n\r\n                // 'BigNumber() constructor call without new: {n}'\r\n                if (ERRORS) raise( 26, 'constructor call without new', n );\r\n                return new BigNumber( n, b );\r\n            }\r\n\r\n            // 'new BigNumber() base not an integer: {b}'\r\n            // 'new BigNumber() base out of range: {b}'\r\n            if ( b == null || !isValidInt( b, 2, 64, id, 'base' ) ) {\r\n\r\n                // Duplicate.\r\n                if ( n instanceof BigNumber ) {\r\n                    x.s = n.s;\r\n                    x.e = n.e;\r\n                    x.c = ( n = n.c ) ? n.slice() : n;\r\n                    id = 0;\r\n                    return;\r\n                }\r\n\r\n                if ( ( num = typeof n == 'number' ) && n * 0 == 0 ) {\r\n                    x.s = 1 / n < 0 ? ( n = -n, -1 ) : 1;\r\n\r\n                    // Fast path for integers.\r\n                    if ( n === ~~n ) {\r\n                        for ( e = 0, i = n; i >= 10; i /= 10, e++ );\r\n                        x.e = e;\r\n                        x.c = [n];\r\n                        id = 0;\r\n                        return;\r\n                    }\r\n\r\n                    str = n + '';\r\n                } else {\r\n                    if ( !isNumeric.test( str = n + '' ) ) return parseNumeric( x, str, num );\r\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n                }\r\n            } else {\r\n                b = b | 0;\r\n                str = n + '';\r\n\r\n                // Ensure return value is rounded to DECIMAL_PLACES as with other bases.\r\n                // Allow exponential notation to be used with base 10 argument.\r\n                if ( b == 10 ) {\r\n                    x = new BigNumber( n instanceof BigNumber ? n : str );\r\n                    return round( x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE );\r\n                }\r\n\r\n                // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n                // Any number in exponential form will fail due to the [Ee][+-].\r\n                if ( ( num = typeof n == 'number' ) && n * 0 != 0 ||\r\n                  !( new RegExp( '^-?' + ( c = '[' + ALPHABET.slice( 0, b ) + ']+' ) +\r\n                    '(?:\\\\.' + c + ')?$',b < 37 ? 'i' : '' ) ).test(str) ) {\r\n                    return parseNumeric( x, str, num, b );\r\n                }\r\n\r\n                if (num) {\r\n                    x.s = 1 / n < 0 ? ( str = str.slice(1), -1 ) : 1;\r\n\r\n                    if ( ERRORS && str.replace( /^0\\.0*|\\./, '' ).length > 15 ) {\r\n\r\n                        // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n                        raise( id, tooManyDigits, n );\r\n                    }\r\n\r\n                    // Prevent later check for length on converted number.\r\n                    num = false;\r\n                } else {\r\n                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;\r\n                }\r\n\r\n                str = convertBase( str, 10, b, x.s );\r\n            }\r\n\r\n            // Decimal point?\r\n            if ( ( e = str.indexOf('.') ) > -1 ) str = str.replace( '.', '' );\r\n\r\n            // Exponential form?\r\n            if ( ( i = str.search( /e/i ) ) > 0 ) {\r\n\r\n                // Determine exponent.\r\n                if ( e < 0 ) e = i;\r\n                e += +str.slice( i + 1 );\r\n                str = str.substring( 0, i );\r\n            } else if ( e < 0 ) {\r\n\r\n                // Integer.\r\n                e = str.length;\r\n            }\r\n\r\n            // Determine leading zeros.\r\n            for ( i = 0; str.charCodeAt(i) === 48; i++ );\r\n\r\n            // Determine trailing zeros.\r\n            for ( len = str.length; str.charCodeAt(--len) === 48; );\r\n            str = str.slice( i, len + 1 );\r\n\r\n            if (str) {\r\n                len = str.length;\r\n\r\n                // Disallow numbers with over 15 significant digits if number type.\r\n                // 'new BigNumber() number type has more than 15 significant digits: {n}'\r\n                if ( num && ERRORS && len > 15 ) raise( id, tooManyDigits, x.s * n );\r\n\r\n                e = e - i - 1;\r\n\r\n                 // Overflow?\r\n                if ( e > MAX_EXP ) {\r\n\r\n                    // Infinity.\r\n                    x.c = x.e = null;\r\n\r\n                // Underflow?\r\n                } else if ( e < MIN_EXP ) {\r\n\r\n                    // Zero.\r\n                    x.c = [ x.e = 0 ];\r\n                } else {\r\n                    x.e = e;\r\n                    x.c = [];\r\n\r\n                    // Transform base\r\n\r\n                    // e is the base 10 exponent.\r\n                    // i is where to slice str to get the first element of the coefficient array.\r\n                    i = ( e + 1 ) % LOG_BASE;\r\n                    if ( e < 0 ) i += LOG_BASE;\r\n\r\n                    if ( i < len ) {\r\n                        if (i) x.c.push( +str.slice( 0, i ) );\r\n\r\n                        for ( len -= LOG_BASE; i < len; ) {\r\n                            x.c.push( +str.slice( i, i += LOG_BASE ) );\r\n                        }\r\n\r\n                        str = str.slice(i);\r\n                        i = LOG_BASE - str.length;\r\n                    } else {\r\n                        i -= len;\r\n                    }\r\n\r\n                    for ( ; i--; str += '0' );\r\n                    x.c.push( +str );\r\n                }\r\n            } else {\r\n\r\n                // Zero.\r\n                x.c = [ x.e = 0 ];\r\n            }\r\n\r\n            id = 0;\r\n        }\r\n\r\n\r\n        // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n        BigNumber.another = another;\r\n\r\n        BigNumber.ROUND_UP = 0;\r\n        BigNumber.ROUND_DOWN = 1;\r\n        BigNumber.ROUND_CEIL = 2;\r\n        BigNumber.ROUND_FLOOR = 3;\r\n        BigNumber.ROUND_HALF_UP = 4;\r\n        BigNumber.ROUND_HALF_DOWN = 5;\r\n        BigNumber.ROUND_HALF_EVEN = 6;\r\n        BigNumber.ROUND_HALF_CEIL = 7;\r\n        BigNumber.ROUND_HALF_FLOOR = 8;\r\n        BigNumber.EUCLID = 9;\r\n\r\n\r\n        /*\r\n         * Configure infrequently-changing library-wide settings.\r\n         *\r\n         * Accept an object or an argument list, with one or many of the following properties or\r\n         * parameters respectively:\r\n         *\r\n         *   DECIMAL_PLACES  {number}  Integer, 0 to MAX inclusive\r\n         *   ROUNDING_MODE   {number}  Integer, 0 to 8 inclusive\r\n         *   EXPONENTIAL_AT  {number|number[]}  Integer, -MAX to MAX inclusive or\r\n         *                                      [integer -MAX to 0 incl., 0 to MAX incl.]\r\n         *   RANGE           {number|number[]}  Non-zero integer, -MAX to MAX inclusive or\r\n         *                                      [integer -MAX to -1 incl., integer 1 to MAX incl.]\r\n         *   ERRORS          {boolean|number}   true, false, 1 or 0\r\n         *   CRYPTO          {boolean|number}   true, false, 1 or 0\r\n         *   MODULO_MODE     {number}           0 to 9 inclusive\r\n         *   POW_PRECISION   {number}           0 to MAX inclusive\r\n         *   FORMAT          {object}           See BigNumber.prototype.toFormat\r\n         *      decimalSeparator       {string}\r\n         *      groupSeparator         {string}\r\n         *      groupSize              {number}\r\n         *      secondaryGroupSize     {number}\r\n         *      fractionGroupSeparator {string}\r\n         *      fractionGroupSize      {number}\r\n         *\r\n         * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n         *\r\n         * E.g.\r\n         * BigNumber.config(20, 4) is equivalent to\r\n         * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n         *\r\n         * Ignore properties/parameters set to null or undefined.\r\n         * Return an object with the properties current values.\r\n         */\r\n        BigNumber.config = function () {\r\n            var v, p,\r\n                i = 0,\r\n                r = {},\r\n                a = arguments,\r\n                o = a[0],\r\n                has = o && typeof o == 'object'\r\n                  ? function () { if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null; }\r\n                  : function () { if ( a.length > i ) return ( v = a[i++] ) != null; };\r\n\r\n            // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n            // 'config() DECIMAL_PLACES not an integer: {v}'\r\n            // 'config() DECIMAL_PLACES out of range: {v}'\r\n            if ( has( p = 'DECIMAL_PLACES' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n                DECIMAL_PLACES = v | 0;\r\n            }\r\n            r[p] = DECIMAL_PLACES;\r\n\r\n            // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n            // 'config() ROUNDING_MODE not an integer: {v}'\r\n            // 'config() ROUNDING_MODE out of range: {v}'\r\n            if ( has( p = 'ROUNDING_MODE' ) && isValidInt( v, 0, 8, 2, p ) ) {\r\n                ROUNDING_MODE = v | 0;\r\n            }\r\n            r[p] = ROUNDING_MODE;\r\n\r\n            // EXPONENTIAL_AT {number|number[]}\r\n            // Integer, -MAX to MAX inclusive or [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n            // 'config() EXPONENTIAL_AT not an integer: {v}'\r\n            // 'config() EXPONENTIAL_AT out of range: {v}'\r\n            if ( has( p = 'EXPONENTIAL_AT' ) ) {\r\n\r\n                if ( isArray(v) ) {\r\n                    if ( isValidInt( v[0], -MAX, 0, 2, p ) && isValidInt( v[1], 0, MAX, 2, p ) ) {\r\n                        TO_EXP_NEG = v[0] | 0;\r\n                        TO_EXP_POS = v[1] | 0;\r\n                    }\r\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n                    TO_EXP_NEG = -( TO_EXP_POS = ( v < 0 ? -v : v ) | 0 );\r\n                }\r\n            }\r\n            r[p] = [ TO_EXP_NEG, TO_EXP_POS ];\r\n\r\n            // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n            // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n            // 'config() RANGE not an integer: {v}'\r\n            // 'config() RANGE cannot be zero: {v}'\r\n            // 'config() RANGE out of range: {v}'\r\n            if ( has( p = 'RANGE' ) ) {\r\n\r\n                if ( isArray(v) ) {\r\n                    if ( isValidInt( v[0], -MAX, -1, 2, p ) && isValidInt( v[1], 1, MAX, 2, p ) ) {\r\n                        MIN_EXP = v[0] | 0;\r\n                        MAX_EXP = v[1] | 0;\r\n                    }\r\n                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {\r\n                    if ( v | 0 ) MIN_EXP = -( MAX_EXP = ( v < 0 ? -v : v ) | 0 );\r\n                    else if (ERRORS) raise( 2, p + ' cannot be zero', v );\r\n                }\r\n            }\r\n            r[p] = [ MIN_EXP, MAX_EXP ];\r\n\r\n            // ERRORS {boolean|number} true, false, 1 or 0.\r\n            // 'config() ERRORS not a boolean or binary digit: {v}'\r\n            if ( has( p = 'ERRORS' ) ) {\r\n\r\n                if ( v === !!v || v === 1 || v === 0 ) {\r\n                    id = 0;\r\n                    isValidInt = ( ERRORS = !!v ) ? intValidatorWithErrors : intValidatorNoErrors;\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + notBool, v );\r\n                }\r\n            }\r\n            r[p] = ERRORS;\r\n\r\n            // CRYPTO {boolean|number} true, false, 1 or 0.\r\n            // 'config() CRYPTO not a boolean or binary digit: {v}'\r\n            // 'config() crypto unavailable: {crypto}'\r\n            if ( has( p = 'CRYPTO' ) ) {\r\n\r\n                if ( v === !!v || v === 1 || v === 0 ) {\r\n                    CRYPTO = !!( v && crypto && typeof crypto == 'object' );\r\n                    if ( v && !CRYPTO && ERRORS ) raise( 2, 'crypto unavailable', crypto );\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + notBool, v );\r\n                }\r\n            }\r\n            r[p] = CRYPTO;\r\n\r\n            // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n            // 'config() MODULO_MODE not an integer: {v}'\r\n            // 'config() MODULO_MODE out of range: {v}'\r\n            if ( has( p = 'MODULO_MODE' ) && isValidInt( v, 0, 9, 2, p ) ) {\r\n                MODULO_MODE = v | 0;\r\n            }\r\n            r[p] = MODULO_MODE;\r\n\r\n            // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n            // 'config() POW_PRECISION not an integer: {v}'\r\n            // 'config() POW_PRECISION out of range: {v}'\r\n            if ( has( p = 'POW_PRECISION' ) && isValidInt( v, 0, MAX, 2, p ) ) {\r\n                POW_PRECISION = v | 0;\r\n            }\r\n            r[p] = POW_PRECISION;\r\n\r\n            // FORMAT {object}\r\n            // 'config() FORMAT not an object: {v}'\r\n            if ( has( p = 'FORMAT' ) ) {\r\n\r\n                if ( typeof v == 'object' ) {\r\n                    FORMAT = v;\r\n                } else if (ERRORS) {\r\n                    raise( 2, p + ' not an object', v );\r\n                }\r\n            }\r\n            r[p] = FORMAT;\r\n\r\n            return r;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the maximum of the arguments.\r\n         *\r\n         * arguments {number|string|BigNumber}\r\n         */\r\n        BigNumber.max = function () { return maxOrMin( arguments, P.lt ); };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the minimum of the arguments.\r\n         *\r\n         * arguments {number|string|BigNumber}\r\n         */\r\n        BigNumber.min = function () { return maxOrMin( arguments, P.gt ); };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n         * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n         * zeros are produced).\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         *\r\n         * 'random() decimal places not an integer: {dp}'\r\n         * 'random() decimal places out of range: {dp}'\r\n         * 'random() crypto unavailable: {crypto}'\r\n         */\r\n        BigNumber.random = (function () {\r\n            var pow2_53 = 0x20000000000000;\r\n\r\n            // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n            // Check if Math.random() produces more than 32 bits of randomness.\r\n            // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n            // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n            var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n              ? function () { return mathfloor( Math.random() * pow2_53 ); }\r\n              : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n                  (Math.random() * 0x800000 | 0); };\r\n\r\n            return function (dp) {\r\n                var a, b, e, k, v,\r\n                    i = 0,\r\n                    c = [],\r\n                    rand = new BigNumber(ONE);\r\n\r\n                dp = dp == null || !isValidInt( dp, 0, MAX, 14 ) ? DECIMAL_PLACES : dp | 0;\r\n                k = mathceil( dp / LOG_BASE );\r\n\r\n                if (CRYPTO) {\r\n\r\n                    // Browsers supporting crypto.getRandomValues.\r\n                    if ( crypto && crypto.getRandomValues ) {\r\n\r\n                        a = crypto.getRandomValues( new Uint32Array( k *= 2 ) );\r\n\r\n                        for ( ; i < k; ) {\r\n\r\n                            // 53 bits:\r\n                            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n                            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n                            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n                            //                                     11111 11111111 11111111\r\n                            // 0x20000 is 2^21.\r\n                            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n                            // Rejection sampling:\r\n                            // 0 <= v < 9007199254740992\r\n                            // Probability that v >= 9e15, is\r\n                            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n                            if ( v >= 9e15 ) {\r\n                                b = crypto.getRandomValues( new Uint32Array(2) );\r\n                                a[i] = b[0];\r\n                                a[i + 1] = b[1];\r\n                            } else {\r\n\r\n                                // 0 <= v <= 8999999999999999\r\n                                // 0 <= (v % 1e14) <= 99999999999999\r\n                                c.push( v % 1e14 );\r\n                                i += 2;\r\n                            }\r\n                        }\r\n                        i = k / 2;\r\n\r\n                    // Node.js supporting crypto.randomBytes.\r\n                    } else if ( crypto && crypto.randomBytes ) {\r\n\r\n                        // buffer\r\n                        a = crypto.randomBytes( k *= 7 );\r\n\r\n                        for ( ; i < k; ) {\r\n\r\n                            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n                            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n                            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n                            // 0 <= v < 9007199254740992\r\n                            v = ( ( a[i] & 31 ) * 0x1000000000000 ) + ( a[i + 1] * 0x10000000000 ) +\r\n                                  ( a[i + 2] * 0x100000000 ) + ( a[i + 3] * 0x1000000 ) +\r\n                                  ( a[i + 4] << 16 ) + ( a[i + 5] << 8 ) + a[i + 6];\r\n\r\n                            if ( v >= 9e15 ) {\r\n                                crypto.randomBytes(7).copy( a, i );\r\n                            } else {\r\n\r\n                                // 0 <= (v % 1e14) <= 99999999999999\r\n                                c.push( v % 1e14 );\r\n                                i += 7;\r\n                            }\r\n                        }\r\n                        i = k / 7;\r\n                    } else if (ERRORS) {\r\n                        raise( 14, 'crypto unavailable', crypto );\r\n                    }\r\n                }\r\n\r\n                // Use Math.random: CRYPTO is false or crypto is unavailable and ERRORS is false.\r\n                if (!i) {\r\n\r\n                    for ( ; i < k; ) {\r\n                        v = random53bitInt();\r\n                        if ( v < 9e15 ) c[i++] = v % 1e14;\r\n                    }\r\n                }\r\n\r\n                k = c[--i];\r\n                dp %= LOG_BASE;\r\n\r\n                // Convert trailing digits to zeros according to dp.\r\n                if ( k && dp ) {\r\n                    v = POWS_TEN[LOG_BASE - dp];\r\n                    c[i] = mathfloor( k / v ) * v;\r\n                }\r\n\r\n                // Remove trailing elements which are zero.\r\n                for ( ; c[i] === 0; c.pop(), i-- );\r\n\r\n                // Zero?\r\n                if ( i < 0 ) {\r\n                    c = [ e = 0 ];\r\n                } else {\r\n\r\n                    // Remove leading elements which are zero and adjust exponent accordingly.\r\n                    for ( e = -1 ; c[0] === 0; c.shift(), e -= LOG_BASE);\r\n\r\n                    // Count the digits of the first element of c to determine leading zeros, and...\r\n                    for ( i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n                    // adjust the exponent accordingly.\r\n                    if ( i < LOG_BASE ) e -= LOG_BASE - i;\r\n                }\r\n\r\n                rand.e = e;\r\n                rand.c = c;\r\n                return rand;\r\n            };\r\n        })();\r\n\r\n\r\n        // PRIVATE FUNCTIONS\r\n\r\n\r\n        // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n        function convertBase( str, baseOut, baseIn, sign ) {\r\n            var d, e, k, r, x, xc, y,\r\n                i = str.indexOf( '.' ),\r\n                dp = DECIMAL_PLACES,\r\n                rm = ROUNDING_MODE;\r\n\r\n            if ( baseIn < 37 ) str = str.toLowerCase();\r\n\r\n            // Non-integer.\r\n            if ( i >= 0 ) {\r\n                k = POW_PRECISION;\r\n\r\n                // Unlimited precision.\r\n                POW_PRECISION = 0;\r\n                str = str.replace( '.', '' );\r\n                y = new BigNumber(baseIn);\r\n                x = y.pow( str.length - i );\r\n                POW_PRECISION = k;\r\n\r\n                // Convert str as if an integer, then restore the fraction part by dividing the\r\n                // result by its base raised to a power.\r\n                y.c = toBaseOut( toFixedPoint( coeffToString( x.c ), x.e ), 10, baseOut );\r\n                y.e = y.c.length;\r\n            }\r\n\r\n            // Convert the number as integer.\r\n            xc = toBaseOut( str, baseIn, baseOut );\r\n            e = k = xc.length;\r\n\r\n            // Remove trailing zeros.\r\n            for ( ; xc[--k] == 0; xc.pop() );\r\n            if ( !xc[0] ) return '0';\r\n\r\n            if ( i < 0 ) {\r\n                --e;\r\n            } else {\r\n                x.c = xc;\r\n                x.e = e;\r\n\r\n                // sign is needed for correct rounding.\r\n                x.s = sign;\r\n                x = div( x, y, dp, rm, baseOut );\r\n                xc = x.c;\r\n                r = x.r;\r\n                e = x.e;\r\n            }\r\n\r\n            d = e + dp + 1;\r\n\r\n            // The rounding digit, i.e. the digit to the right of the digit that may be rounded up.\r\n            i = xc[d];\r\n            k = baseOut / 2;\r\n            r = r || d < 0 || xc[d + 1] != null;\r\n\r\n            r = rm < 4 ? ( i != null || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n                       : i > k || i == k &&( rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n                         rm == ( x.s < 0 ? 8 : 7 ) );\r\n\r\n            if ( d < 1 || !xc[0] ) {\r\n\r\n                // 1^-dp or 0.\r\n                str = r ? toFixedPoint( '1', -dp ) : '0';\r\n            } else {\r\n                xc.length = d;\r\n\r\n                if (r) {\r\n\r\n                    // Rounding up may mean the previous digit has to be rounded up and so on.\r\n                    for ( --baseOut; ++xc[--d] > baseOut; ) {\r\n                        xc[d] = 0;\r\n\r\n                        if ( !d ) {\r\n                            ++e;\r\n                            xc.unshift(1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Determine trailing zeros.\r\n                for ( k = xc.length; !xc[--k]; );\r\n\r\n                // E.g. [4, 11, 15] becomes 4bf.\r\n                for ( i = 0, str = ''; i <= k; str += ALPHABET.charAt( xc[i++] ) );\r\n                str = toFixedPoint( str, e );\r\n            }\r\n\r\n            // The caller will add the sign.\r\n            return str;\r\n        }\r\n\r\n\r\n        // Perform division in the specified base. Called by div and convertBase.\r\n        div = (function () {\r\n\r\n            // Assume non-zero x and k.\r\n            function multiply( x, k, base ) {\r\n                var m, temp, xlo, xhi,\r\n                    carry = 0,\r\n                    i = x.length,\r\n                    klo = k % SQRT_BASE,\r\n                    khi = k / SQRT_BASE | 0;\r\n\r\n                for ( x = x.slice(); i--; ) {\r\n                    xlo = x[i] % SQRT_BASE;\r\n                    xhi = x[i] / SQRT_BASE | 0;\r\n                    m = khi * xlo + xhi * klo;\r\n                    temp = klo * xlo + ( ( m % SQRT_BASE ) * SQRT_BASE ) + carry;\r\n                    carry = ( temp / base | 0 ) + ( m / SQRT_BASE | 0 ) + khi * xhi;\r\n                    x[i] = temp % base;\r\n                }\r\n\r\n                if (carry) x.unshift(carry);\r\n\r\n                return x;\r\n            }\r\n\r\n            function compare( a, b, aL, bL ) {\r\n                var i, cmp;\r\n\r\n                if ( aL != bL ) {\r\n                    cmp = aL > bL ? 1 : -1;\r\n                } else {\r\n\r\n                    for ( i = cmp = 0; i < aL; i++ ) {\r\n\r\n                        if ( a[i] != b[i] ) {\r\n                            cmp = a[i] > b[i] ? 1 : -1;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return cmp;\r\n            }\r\n\r\n            function subtract( a, b, aL, base ) {\r\n                var i = 0;\r\n\r\n                // Subtract b from a.\r\n                for ( ; aL--; ) {\r\n                    a[aL] -= i;\r\n                    i = a[aL] < b[aL] ? 1 : 0;\r\n                    a[aL] = i * base + a[aL] - b[aL];\r\n                }\r\n\r\n                // Remove leading zeros.\r\n                for ( ; !a[0] && a.length > 1; a.shift() );\r\n            }\r\n\r\n            // x: dividend, y: divisor.\r\n            return function ( x, y, dp, rm, base ) {\r\n                var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n                    yL, yz,\r\n                    s = x.s == y.s ? 1 : -1,\r\n                    xc = x.c,\r\n                    yc = y.c;\r\n\r\n                // Either NaN, Infinity or 0?\r\n                if ( !xc || !xc[0] || !yc || !yc[0] ) {\r\n\r\n                    return new BigNumber(\r\n\r\n                      // Return NaN if either NaN, or both Infinity or 0.\r\n                      !x.s || !y.s || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :\r\n\r\n                        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n                        xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n                    );\r\n                }\r\n\r\n                q = new BigNumber(s);\r\n                qc = q.c = [];\r\n                e = x.e - y.e;\r\n                s = dp + e + 1;\r\n\r\n                if ( !base ) {\r\n                    base = BASE;\r\n                    e = bitFloor( x.e / LOG_BASE ) - bitFloor( y.e / LOG_BASE );\r\n                    s = s / LOG_BASE | 0;\r\n                }\r\n\r\n                // Result exponent may be one less then the current value of e.\r\n                // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n                for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );\r\n                if ( yc[i] > ( xc[i] || 0 ) ) e--;\r\n\r\n                if ( s < 0 ) {\r\n                    qc.push(1);\r\n                    more = true;\r\n                } else {\r\n                    xL = xc.length;\r\n                    yL = yc.length;\r\n                    i = 0;\r\n                    s += 2;\r\n\r\n                    // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n                    n = mathfloor( base / ( yc[0] + 1 ) );\r\n\r\n                    // Not necessary, but to handle odd bases where yc[0] == ( base / 2 ) - 1.\r\n                    // if ( n > 1 || n++ == 1 && yc[0] < base / 2 ) {\r\n                    if ( n > 1 ) {\r\n                        yc = multiply( yc, n, base );\r\n                        xc = multiply( xc, n, base );\r\n                        yL = yc.length;\r\n                        xL = xc.length;\r\n                    }\r\n\r\n                    xi = yL;\r\n                    rem = xc.slice( 0, yL );\r\n                    remL = rem.length;\r\n\r\n                    // Add zeros to make remainder as long as divisor.\r\n                    for ( ; remL < yL; rem[remL++] = 0 );\r\n                    yz = yc.slice();\r\n                    yz.unshift(0);\r\n                    yc0 = yc[0];\r\n                    if ( yc[1] >= base / 2 ) yc0++;\r\n                    // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n                    // else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;\r\n\r\n                    do {\r\n                        n = 0;\r\n\r\n                        // Compare divisor and remainder.\r\n                        cmp = compare( yc, rem, yL, remL );\r\n\r\n                        // If divisor < remainder.\r\n                        if ( cmp < 0 ) {\r\n\r\n                            // Calculate trial digit, n.\r\n\r\n                            rem0 = rem[0];\r\n                            if ( yL != remL ) rem0 = rem0 * base + ( rem[1] || 0 );\r\n\r\n                            // n is how many times the divisor goes into the current remainder.\r\n                            n = mathfloor( rem0 / yc0 );\r\n\r\n                            //  Algorithm:\r\n                            //  1. product = divisor * trial digit (n)\r\n                            //  2. if product > remainder: product -= divisor, n--\r\n                            //  3. remainder -= product\r\n                            //  4. if product was < remainder at 2:\r\n                            //    5. compare new remainder and divisor\r\n                            //    6. If remainder > divisor: remainder -= divisor, n++\r\n\r\n                            if ( n > 1 ) {\r\n\r\n                                // n may be > base only when base is 3.\r\n                                if (n >= base) n = base - 1;\r\n\r\n                                // product = divisor * trial digit.\r\n                                prod = multiply( yc, n, base );\r\n                                prodL = prod.length;\r\n                                remL = rem.length;\r\n\r\n                                // Compare product and remainder.\r\n                                // If product > remainder.\r\n                                // Trial digit n too high.\r\n                                // n is 1 too high about 5% of the time, and is not known to have\r\n                                // ever been more than 1 too high.\r\n                                while ( compare( prod, rem, prodL, remL ) == 1 ) {\r\n                                    n--;\r\n\r\n                                    // Subtract divisor from product.\r\n                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );\r\n                                    prodL = prod.length;\r\n                                    cmp = 1;\r\n                                }\r\n                            } else {\r\n\r\n                                // n is 0 or 1, cmp is -1.\r\n                                // If n is 0, there is no need to compare yc and rem again below,\r\n                                // so change cmp to 1 to avoid it.\r\n                                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                                if ( n == 0 ) {\r\n\r\n                                    // divisor < remainder, so n must be at least 1.\r\n                                    cmp = n = 1;\r\n                                }\r\n\r\n                                // product = divisor\r\n                                prod = yc.slice();\r\n                                prodL = prod.length;\r\n                            }\r\n\r\n                            if ( prodL < remL ) prod.unshift(0);\r\n\r\n                            // Subtract product from remainder.\r\n                            subtract( rem, prod, remL, base );\r\n                            remL = rem.length;\r\n\r\n                             // If product was < remainder.\r\n                            if ( cmp == -1 ) {\r\n\r\n                                // Compare divisor and new remainder.\r\n                                // If divisor < new remainder, subtract divisor from remainder.\r\n                                // Trial digit n too low.\r\n                                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                                while ( compare( yc, rem, yL, remL ) < 1 ) {\r\n                                    n++;\r\n\r\n                                    // Subtract divisor from remainder.\r\n                                    subtract( rem, yL < remL ? yz : yc, remL, base );\r\n                                    remL = rem.length;\r\n                                }\r\n                            }\r\n                        } else if ( cmp === 0 ) {\r\n                            n++;\r\n                            rem = [0];\r\n                        } // else cmp === 1 and n will be 0\r\n\r\n                        // Add the next digit, n, to the result array.\r\n                        qc[i++] = n;\r\n\r\n                        // Update the remainder.\r\n                        if ( rem[0] ) {\r\n                            rem.push(xc[xi] || 0);\r\n                            remL = remL + 1;\r\n                        } else {\r\n                            rem = [ xc[xi] ];\r\n                            remL = 1;\r\n                        }\r\n                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );\r\n\r\n                    more = rem[0] != null;\r\n\r\n                    // Leading zero?\r\n                    if ( !qc[0] ) qc.shift();\r\n                }\r\n\r\n                if ( base == BASE ) {\r\n\r\n                    // To calculate q.e, first get the number of digits of qc[0].\r\n                    for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );\r\n                    round( q, dp + ( q.e = i + e * LOG_BASE - 1 ) + 1, rm, more );\r\n\r\n                // Caller is convertBase.\r\n                } else {\r\n                    q.e = e;\r\n                    q.r = +more;\r\n                }\r\n\r\n                return q;\r\n            };\r\n        })();\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n         * notation rounded to the specified decimal places or significant digits.\r\n         *\r\n         * n is a BigNumber.\r\n         * i is the index of the last digit required (i.e. the digit that may be rounded up).\r\n         * rm is the rounding mode.\r\n         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.\r\n         */\r\n        function format( n, i, rm, caller ) {\r\n            var c0, e, ne, len, str;\r\n\r\n            rm = rm != null && isValidInt( rm, 0, 8, caller, roundingMode )\r\n              ? rm | 0 : ROUNDING_MODE;\r\n\r\n            if ( !n.c ) return n.toString();\r\n            c0 = n.c[0];\r\n            ne = n.e;\r\n\r\n            if ( i == null ) {\r\n                str = coeffToString( n.c );\r\n                str = caller == 19 || caller == 24 && ne <= TO_EXP_NEG\r\n                  ? toExponential( str, ne )\r\n                  : toFixedPoint( str, ne );\r\n            } else {\r\n                n = round( new BigNumber(n), i, rm );\r\n\r\n                // n.e may have changed if the value was rounded up.\r\n                e = n.e;\r\n\r\n                str = coeffToString( n.c );\r\n                len = str.length;\r\n\r\n                // toPrecision returns exponential notation if the number of significant digits\r\n                // specified is less than the number of digits necessary to represent the integer\r\n                // part of the value in fixed-point notation.\r\n\r\n                // Exponential notation.\r\n                if ( caller == 19 || caller == 24 && ( i <= e || e <= TO_EXP_NEG ) ) {\r\n\r\n                    // Append zeros?\r\n                    for ( ; len < i; str += '0', len++ );\r\n                    str = toExponential( str, e );\r\n\r\n                // Fixed-point notation.\r\n                } else {\r\n                    i -= ne;\r\n                    str = toFixedPoint( str, e );\r\n\r\n                    // Append zeros?\r\n                    if ( e + 1 > len ) {\r\n                        if ( --i > 0 ) for ( str += '.'; i--; str += '0' );\r\n                    } else {\r\n                        i += e - len;\r\n                        if ( i > 0 ) {\r\n                            if ( e + 1 == len ) str += '.';\r\n                            for ( ; i--; str += '0' );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return n.s < 0 && c0 ? '-' + str : str;\r\n        }\r\n\r\n\r\n        // Handle BigNumber.max and BigNumber.min.\r\n        function maxOrMin( args, method ) {\r\n            var m, n,\r\n                i = 0;\r\n\r\n            if ( isArray( args[0] ) ) args = args[0];\r\n            m = new BigNumber( args[0] );\r\n\r\n            for ( ; ++i < args.length; ) {\r\n                n = new BigNumber( args[i] );\r\n\r\n                // If any number is NaN, return NaN.\r\n                if ( !n.s ) {\r\n                    m = n;\r\n                    break;\r\n                } else if ( method.call( m, n ) ) {\r\n                    m = n;\r\n                }\r\n            }\r\n\r\n            return m;\r\n        }\r\n\r\n\r\n        /*\r\n         * Return true if n is an integer in range, otherwise throw.\r\n         * Use for argument validation when ERRORS is true.\r\n         */\r\n        function intValidatorWithErrors( n, min, max, caller, name ) {\r\n            if ( n < min || n > max || n != truncate(n) ) {\r\n                raise( caller, ( name || 'decimal places' ) +\r\n                  ( n < min || n > max ? ' out of range' : ' not an integer' ), n );\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n\r\n        /*\r\n         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n         * Called by minus, plus and times.\r\n         */\r\n        function normalise( n, c, e ) {\r\n            var i = 1,\r\n                j = c.length;\r\n\r\n             // Remove trailing zeros.\r\n            for ( ; !c[--j]; c.pop() );\r\n\r\n            // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n            for ( j = c[0]; j >= 10; j /= 10, i++ );\r\n\r\n            // Overflow?\r\n            if ( ( e = i + e * LOG_BASE - 1 ) > MAX_EXP ) {\r\n\r\n                // Infinity.\r\n                n.c = n.e = null;\r\n\r\n            // Underflow?\r\n            } else if ( e < MIN_EXP ) {\r\n\r\n                // Zero.\r\n                n.c = [ n.e = 0 ];\r\n            } else {\r\n                n.e = e;\r\n                n.c = c;\r\n            }\r\n\r\n            return n;\r\n        }\r\n\r\n\r\n        // Handle values that fail the validity test in BigNumber.\r\n        parseNumeric = (function () {\r\n            var basePrefix = /^(-?)0([xbo])/i,\r\n                dotAfter = /^([^.]+)\\.$/,\r\n                dotBefore = /^\\.([^.]+)$/,\r\n                isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n                whitespaceOrPlus = /^\\s*\\+|^\\s+|\\s+$/g;\r\n\r\n            return function ( x, str, num, b ) {\r\n                var base,\r\n                    s = num ? str : str.replace( whitespaceOrPlus, '' );\r\n\r\n                // No exception on ±Infinity or NaN.\r\n                if ( isInfinityOrNaN.test(s) ) {\r\n                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n                } else {\r\n                    if ( !num ) {\r\n\r\n                        // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n                        s = s.replace( basePrefix, function ( m, p1, p2 ) {\r\n                            base = ( p2 = p2.toLowerCase() ) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n                            return !b || b == base ? p1 : m;\r\n                        });\r\n\r\n                        if (b) {\r\n                            base = b;\r\n\r\n                            // E.g. '1.' to '1', '.1' to '0.1'\r\n                            s = s.replace( dotAfter, '$1' ).replace( dotBefore, '0.$1' );\r\n                        }\r\n\r\n                        if ( str != s ) return new BigNumber( s, base );\r\n                    }\r\n\r\n                    // 'new BigNumber() not a number: {n}'\r\n                    // 'new BigNumber() not a base {b} number: {n}'\r\n                    if (ERRORS) raise( id, 'not a' + ( b ? ' base ' + b : '' ) + ' number', str );\r\n                    x.s = null;\r\n                }\r\n\r\n                x.c = x.e = null;\r\n                id = 0;\r\n            }\r\n        })();\r\n\r\n\r\n        // Throw a BigNumber Error.\r\n        function raise( caller, msg, val ) {\r\n            var error = new Error( [\r\n                'new BigNumber',     // 0\r\n                'cmp',               // 1\r\n                'config',            // 2\r\n                'div',               // 3\r\n                'divToInt',          // 4\r\n                'eq',                // 5\r\n                'gt',                // 6\r\n                'gte',               // 7\r\n                'lt',                // 8\r\n                'lte',               // 9\r\n                'minus',             // 10\r\n                'mod',               // 11\r\n                'plus',              // 12\r\n                'precision',         // 13\r\n                'random',            // 14\r\n                'round',             // 15\r\n                'shift',             // 16\r\n                'times',             // 17\r\n                'toDigits',          // 18\r\n                'toExponential',     // 19\r\n                'toFixed',           // 20\r\n                'toFormat',          // 21\r\n                'toFraction',        // 22\r\n                'pow',               // 23\r\n                'toPrecision',       // 24\r\n                'toString',          // 25\r\n                'BigNumber'          // 26\r\n            ][caller] + '() ' + msg + ': ' + val );\r\n\r\n            error.name = 'BigNumber Error';\r\n            id = 0;\r\n            throw error;\r\n        }\r\n\r\n\r\n        /*\r\n         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n         * If r is truthy, it is known that there are more digits after the rounding digit.\r\n         */\r\n        function round( x, sd, rm, r ) {\r\n            var d, i, j, k, n, ni, rd,\r\n                xc = x.c,\r\n                pows10 = POWS_TEN;\r\n\r\n            // if x is not Infinity or NaN...\r\n            if (xc) {\r\n\r\n                // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n                // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n                // ni is the index of n within x.c.\r\n                // d is the number of digits of n.\r\n                // i is the index of rd within n including leading zeros.\r\n                // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n                out: {\r\n\r\n                    // Get the number of digits of the first element of xc.\r\n                    for ( d = 1, k = xc[0]; k >= 10; k /= 10, d++ );\r\n                    i = sd - d;\r\n\r\n                    // If the rounding digit is in the first element of xc...\r\n                    if ( i < 0 ) {\r\n                        i += LOG_BASE;\r\n                        j = sd;\r\n                        n = xc[ ni = 0 ];\r\n\r\n                        // Get the rounding digit at index j of n.\r\n                        rd = n / pows10[ d - j - 1 ] % 10 | 0;\r\n                    } else {\r\n                        ni = mathceil( ( i + 1 ) / LOG_BASE );\r\n\r\n                        if ( ni >= xc.length ) {\r\n\r\n                            if (r) {\r\n\r\n                                // Needed by sqrt.\r\n                                for ( ; xc.length <= ni; xc.push(0) );\r\n                                n = rd = 0;\r\n                                d = 1;\r\n                                i %= LOG_BASE;\r\n                                j = i - LOG_BASE + 1;\r\n                            } else {\r\n                                break out;\r\n                            }\r\n                        } else {\r\n                            n = k = xc[ni];\r\n\r\n                            // Get the number of digits of n.\r\n                            for ( d = 1; k >= 10; k /= 10, d++ );\r\n\r\n                            // Get the index of rd within n.\r\n                            i %= LOG_BASE;\r\n\r\n                            // Get the index of rd within n, adjusted for leading zeros.\r\n                            // The number of leading zeros of n is given by LOG_BASE - d.\r\n                            j = i - LOG_BASE + d;\r\n\r\n                            // Get the rounding digit at index j of n.\r\n                            rd = j < 0 ? 0 : n / pows10[ d - j - 1 ] % 10 | 0;\r\n                        }\r\n                    }\r\n\r\n                    r = r || sd < 0 ||\r\n\r\n                    // Are there any non-zero digits after the rounding digit?\r\n                    // The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right\r\n                    // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n                      xc[ni + 1] != null || ( j < 0 ? n : n % pows10[ d - j - 1 ] );\r\n\r\n                    r = rm < 4\r\n                      ? ( rd || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )\r\n                      : rd > 5 || rd == 5 && ( rm == 4 || r || rm == 6 &&\r\n\r\n                        // Check whether the digit to the left of the rounding digit is odd.\r\n                        ( ( i > 0 ? j > 0 ? n / pows10[ d - j ] : 0 : xc[ni - 1] ) % 10 ) & 1 ||\r\n                          rm == ( x.s < 0 ? 8 : 7 ) );\r\n\r\n                    if ( sd < 1 || !xc[0] ) {\r\n                        xc.length = 0;\r\n\r\n                        if (r) {\r\n\r\n                            // Convert sd to decimal places.\r\n                            sd -= x.e + 1;\r\n\r\n                            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n                            xc[0] = pows10[ sd % LOG_BASE ];\r\n                            x.e = -sd || 0;\r\n                        } else {\r\n\r\n                            // Zero.\r\n                            xc[0] = x.e = 0;\r\n                        }\r\n\r\n                        return x;\r\n                    }\r\n\r\n                    // Remove excess digits.\r\n                    if ( i == 0 ) {\r\n                        xc.length = ni;\r\n                        k = 1;\r\n                        ni--;\r\n                    } else {\r\n                        xc.length = ni + 1;\r\n                        k = pows10[ LOG_BASE - i ];\r\n\r\n                        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n                        // j > 0 means i > number of leading zeros of n.\r\n                        xc[ni] = j > 0 ? mathfloor( n / pows10[ d - j ] % pows10[j] ) * k : 0;\r\n                    }\r\n\r\n                    // Round up?\r\n                    if (r) {\r\n\r\n                        for ( ; ; ) {\r\n\r\n                            // If the digit to be rounded up is in the first element of xc...\r\n                            if ( ni == 0 ) {\r\n\r\n                                // i will be the length of xc[0] before k is added.\r\n                                for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );\r\n                                j = xc[0] += k;\r\n                                for ( k = 1; j >= 10; j /= 10, k++ );\r\n\r\n                                // if i != k the length has increased.\r\n                                if ( i != k ) {\r\n                                    x.e++;\r\n                                    if ( xc[0] == BASE ) xc[0] = 1;\r\n                                }\r\n\r\n                                break;\r\n                            } else {\r\n                                xc[ni] += k;\r\n                                if ( xc[ni] != BASE ) break;\r\n                                xc[ni--] = 0;\r\n                                k = 1;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Remove trailing zeros.\r\n                    for ( i = xc.length; xc[--i] === 0; xc.pop() );\r\n                }\r\n\r\n                // Overflow? Infinity.\r\n                if ( x.e > MAX_EXP ) {\r\n                    x.c = x.e = null;\r\n\r\n                // Underflow? Zero.\r\n                } else if ( x.e < MIN_EXP ) {\r\n                    x.c = [ x.e = 0 ];\r\n                }\r\n            }\r\n\r\n            return x;\r\n        }\r\n\r\n\r\n        // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n         */\r\n        P.absoluteValue = P.abs = function () {\r\n            var x = new BigNumber(this);\r\n            if ( x.s < 0 ) x.s = 1;\r\n            return x;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n         * number in the direction of Infinity.\r\n         */\r\n        P.ceil = function () {\r\n            return round( new BigNumber(this), this.e + 1, 2 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return\r\n         * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n         * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n         * 0 if they have the same value,\r\n         * or null if the value of either is NaN.\r\n         */\r\n        P.comparedTo = P.cmp = function ( y, b ) {\r\n            id = 1;\r\n            return compare( this, new BigNumber( y, b ) );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the number of decimal places of the value of this BigNumber, or null if the value\r\n         * of this BigNumber is ±Infinity or NaN.\r\n         */\r\n        P.decimalPlaces = P.dp = function () {\r\n            var n, v,\r\n                c = this.c;\r\n\r\n            if ( !c ) return null;\r\n            n = ( ( v = c.length - 1 ) - bitFloor( this.e / LOG_BASE ) ) * LOG_BASE;\r\n\r\n            // Subtract the number of trailing zeros of the last number.\r\n            if ( v = c[v] ) for ( ; v % 10 == 0; v /= 10, n-- );\r\n            if ( n < 0 ) n = 0;\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n / 0 = I\r\n         *  n / N = N\r\n         *  n / I = 0\r\n         *  0 / n = 0\r\n         *  0 / 0 = N\r\n         *  0 / N = N\r\n         *  0 / I = 0\r\n         *  N / n = N\r\n         *  N / 0 = N\r\n         *  N / N = N\r\n         *  N / I = N\r\n         *  I / n = I\r\n         *  I / 0 = I\r\n         *  I / N = N\r\n         *  I / I = N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n         * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         */\r\n        P.dividedBy = P.div = function ( y, b ) {\r\n            id = 3;\r\n            return div( this, new BigNumber( y, b ), DECIMAL_PLACES, ROUNDING_MODE );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n         * BigNumber by the value of BigNumber(y, b).\r\n         */\r\n        P.dividedToIntegerBy = P.divToInt = function ( y, b ) {\r\n            id = 4;\r\n            return div( this, new BigNumber( y, b ), 0, 1 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.equals = P.eq = function ( y, b ) {\r\n            id = 5;\r\n            return compare( this, new BigNumber( y, b ) ) === 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole\r\n         * number in the direction of -Infinity.\r\n         */\r\n        P.floor = function () {\r\n            return round( new BigNumber(this), this.e + 1, 3 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.greaterThan = P.gt = function ( y, b ) {\r\n            id = 6;\r\n            return compare( this, new BigNumber( y, b ) ) > 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is greater than or equal to the value of\r\n         * BigNumber(y, b), otherwise returns false.\r\n         */\r\n        P.greaterThanOrEqualTo = P.gte = function ( y, b ) {\r\n            id = 7;\r\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === 1 || b === 0;\r\n\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is a finite number, otherwise returns false.\r\n         */\r\n        P.isFinite = function () {\r\n            return !!this.c;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n         */\r\n        P.isInteger = P.isInt = function () {\r\n            return !!this.c && bitFloor( this.e / LOG_BASE ) > this.c.length - 2;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is NaN, otherwise returns false.\r\n         */\r\n        P.isNaN = function () {\r\n            return !this.s;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is negative, otherwise returns false.\r\n         */\r\n        P.isNegative = P.isNeg = function () {\r\n            return this.s < 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is 0 or -0, otherwise returns false.\r\n         */\r\n        P.isZero = function () {\r\n            return !!this.c && this.c[0] == 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n         * otherwise returns false.\r\n         */\r\n        P.lessThan = P.lt = function ( y, b ) {\r\n            id = 8;\r\n            return compare( this, new BigNumber( y, b ) ) < 0;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return true if the value of this BigNumber is less than or equal to the value of\r\n         * BigNumber(y, b), otherwise returns false.\r\n         */\r\n        P.lessThanOrEqualTo = P.lte = function ( y, b ) {\r\n            id = 9;\r\n            return ( b = compare( this, new BigNumber( y, b ) ) ) === -1 || b === 0;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n - 0 = n\r\n         *  n - N = N\r\n         *  n - I = -I\r\n         *  0 - n = -n\r\n         *  0 - 0 = 0\r\n         *  0 - N = N\r\n         *  0 - I = -I\r\n         *  N - n = N\r\n         *  N - 0 = N\r\n         *  N - N = N\r\n         *  N - I = N\r\n         *  I - n = I\r\n         *  I - 0 = I\r\n         *  I - N = N\r\n         *  I - I = N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.minus = P.sub = function ( y, b ) {\r\n            var i, j, t, xLTy,\r\n                x = this,\r\n                a = x.s;\r\n\r\n            id = 10;\r\n            y = new BigNumber( y, b );\r\n            b = y.s;\r\n\r\n            // Either NaN?\r\n            if ( !a || !b ) return new BigNumber(NaN);\r\n\r\n            // Signs differ?\r\n            if ( a != b ) {\r\n                y.s = -b;\r\n                return x.plus(y);\r\n            }\r\n\r\n            var xe = x.e / LOG_BASE,\r\n                ye = y.e / LOG_BASE,\r\n                xc = x.c,\r\n                yc = y.c;\r\n\r\n            if ( !xe || !ye ) {\r\n\r\n                // Either Infinity?\r\n                if ( !xc || !yc ) return xc ? ( y.s = -b, y ) : new BigNumber( yc ? x : NaN );\r\n\r\n                // Either zero?\r\n                if ( !xc[0] || !yc[0] ) {\r\n\r\n                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                    return yc[0] ? ( y.s = -b, y ) : new BigNumber( xc[0] ? x :\r\n\r\n                      // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n                      ROUNDING_MODE == 3 ? -0 : 0 );\r\n                }\r\n            }\r\n\r\n            xe = bitFloor(xe);\r\n            ye = bitFloor(ye);\r\n            xc = xc.slice();\r\n\r\n            // Determine which is the bigger number.\r\n            if ( a = xe - ye ) {\r\n\r\n                if ( xLTy = a < 0 ) {\r\n                    a = -a;\r\n                    t = xc;\r\n                } else {\r\n                    ye = xe;\r\n                    t = yc;\r\n                }\r\n\r\n                t.reverse();\r\n\r\n                // Prepend zeros to equalise exponents.\r\n                for ( b = a; b--; t.push(0) );\r\n                t.reverse();\r\n            } else {\r\n\r\n                // Exponents equal. Check digit by digit.\r\n                j = ( xLTy = ( a = xc.length ) < ( b = yc.length ) ) ? a : b;\r\n\r\n                for ( a = b = 0; b < j; b++ ) {\r\n\r\n                    if ( xc[b] != yc[b] ) {\r\n                        xLTy = xc[b] < yc[b];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // x < y? Point xc to the array of the bigger number.\r\n            if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n            b = ( j = yc.length ) - ( i = xc.length );\r\n\r\n            // Append zeros to xc if shorter.\r\n            // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n            if ( b > 0 ) for ( ; b--; xc[i++] = 0 );\r\n            b = BASE - 1;\r\n\r\n            // Subtract yc from xc.\r\n            for ( ; j > a; ) {\r\n\r\n                if ( xc[--j] < yc[j] ) {\r\n                    for ( i = j; i && !xc[--i]; xc[i] = b );\r\n                    --xc[i];\r\n                    xc[j] += BASE;\r\n                }\r\n\r\n                xc[j] -= yc[j];\r\n            }\r\n\r\n            // Remove leading zeros and adjust exponent accordingly.\r\n            for ( ; xc[0] == 0; xc.shift(), --ye );\r\n\r\n            // Zero?\r\n            if ( !xc[0] ) {\r\n\r\n                // Following IEEE 754 (2008) 6.3,\r\n                // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n                y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n                y.c = [ y.e = 0 ];\r\n                return y;\r\n            }\r\n\r\n            // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n            // for finite x and y.\r\n            return normalise( y, xc, ye );\r\n        };\r\n\r\n\r\n        /*\r\n         *   n % 0 =  N\r\n         *   n % N =  N\r\n         *   n % I =  n\r\n         *   0 % n =  0\r\n         *  -0 % n = -0\r\n         *   0 % 0 =  N\r\n         *   0 % N =  N\r\n         *   0 % I =  0\r\n         *   N % n =  N\r\n         *   N % 0 =  N\r\n         *   N % N =  N\r\n         *   N % I =  N\r\n         *   I % n =  N\r\n         *   I % 0 =  N\r\n         *   I % N =  N\r\n         *   I % I =  N\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n         * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n         */\r\n        P.modulo = P.mod = function ( y, b ) {\r\n            var q, s,\r\n                x = this;\r\n\r\n            id = 11;\r\n            y = new BigNumber( y, b );\r\n\r\n            // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n            if ( !x.c || !y.s || y.c && !y.c[0] ) {\r\n                return new BigNumber(NaN);\r\n\r\n            // Return x if y is Infinity or x is zero.\r\n            } else if ( !y.c || x.c && !x.c[0] ) {\r\n                return new BigNumber(x);\r\n            }\r\n\r\n            if ( MODULO_MODE == 9 ) {\r\n\r\n                // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n                // r = x - qy    where  0 <= r < abs(y)\r\n                s = y.s;\r\n                y.s = 1;\r\n                q = div( x, y, 0, 3 );\r\n                y.s = s;\r\n                q.s *= s;\r\n            } else {\r\n                q = div( x, y, 0, MODULO_MODE );\r\n            }\r\n\r\n            return x.minus( q.times(y) );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n         * i.e. multiplied by -1.\r\n         */\r\n        P.negated = P.neg = function () {\r\n            var x = new BigNumber(this);\r\n            x.s = -x.s || null;\r\n            return x;\r\n        };\r\n\r\n\r\n        /*\r\n         *  n + 0 = n\r\n         *  n + N = N\r\n         *  n + I = I\r\n         *  0 + n = n\r\n         *  0 + 0 = 0\r\n         *  0 + N = N\r\n         *  0 + I = I\r\n         *  N + n = N\r\n         *  N + 0 = N\r\n         *  N + N = N\r\n         *  N + I = N\r\n         *  I + n = I\r\n         *  I + 0 = I\r\n         *  I + N = N\r\n         *  I + I = I\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.plus = P.add = function ( y, b ) {\r\n            var t,\r\n                x = this,\r\n                a = x.s;\r\n\r\n            id = 12;\r\n            y = new BigNumber( y, b );\r\n            b = y.s;\r\n\r\n            // Either NaN?\r\n            if ( !a || !b ) return new BigNumber(NaN);\r\n\r\n            // Signs differ?\r\n             if ( a != b ) {\r\n                y.s = -b;\r\n                return x.minus(y);\r\n            }\r\n\r\n            var xe = x.e / LOG_BASE,\r\n                ye = y.e / LOG_BASE,\r\n                xc = x.c,\r\n                yc = y.c;\r\n\r\n            if ( !xe || !ye ) {\r\n\r\n                // Return ±Infinity if either ±Infinity.\r\n                if ( !xc || !yc ) return new BigNumber( a / 0 );\r\n\r\n                // Either zero?\r\n                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                if ( !xc[0] || !yc[0] ) return yc[0] ? y : new BigNumber( xc[0] ? x : a * 0 );\r\n            }\r\n\r\n            xe = bitFloor(xe);\r\n            ye = bitFloor(ye);\r\n            xc = xc.slice();\r\n\r\n            // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n            if ( a = xe - ye ) {\r\n                if ( a > 0 ) {\r\n                    ye = xe;\r\n                    t = yc;\r\n                } else {\r\n                    a = -a;\r\n                    t = xc;\r\n                }\r\n\r\n                t.reverse();\r\n                for ( ; a--; t.push(0) );\r\n                t.reverse();\r\n            }\r\n\r\n            a = xc.length;\r\n            b = yc.length;\r\n\r\n            // Point xc to the longer array, and b to the shorter length.\r\n            if ( a - b < 0 ) t = yc, yc = xc, xc = t, b = a;\r\n\r\n            // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n            for ( a = 0; b; ) {\r\n                a = ( xc[--b] = xc[b] + yc[b] + a ) / BASE | 0;\r\n                xc[b] %= BASE;\r\n            }\r\n\r\n            if (a) {\r\n                xc.unshift(a);\r\n                ++ye;\r\n            }\r\n\r\n            // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n            // ye = MAX_EXP + 1 possible\r\n            return normalise( y, xc, ye );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the number of significant digits of the value of this BigNumber.\r\n         *\r\n         * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n         */\r\n        P.precision = P.sd = function (z) {\r\n            var n, v,\r\n                x = this,\r\n                c = x.c;\r\n\r\n            // 'precision() argument not a boolean or binary digit: {z}'\r\n            if ( z != null && z !== !!z && z !== 1 && z !== 0 ) {\r\n                if (ERRORS) raise( 13, 'argument' + notBool, z );\r\n                if ( z != !!z ) z = null;\r\n            }\r\n\r\n            if ( !c ) return null;\r\n            v = c.length - 1;\r\n            n = v * LOG_BASE + 1;\r\n\r\n            if ( v = c[v] ) {\r\n\r\n                // Subtract the number of trailing zeros of the last element.\r\n                for ( ; v % 10 == 0; v /= 10, n-- );\r\n\r\n                // Add the number of digits of the first element.\r\n                for ( v = c[0]; v >= 10; v /= 10, n++ );\r\n            }\r\n\r\n            if ( z && x.e + 1 > n ) n = x.e + 1;\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n         * dp decimal places using rounding mode rm, or to 0 and ROUNDING_MODE respectively if\r\n         * omitted.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'round() decimal places out of range: {dp}'\r\n         * 'round() decimal places not an integer: {dp}'\r\n         * 'round() rounding mode not an integer: {rm}'\r\n         * 'round() rounding mode out of range: {rm}'\r\n         */\r\n        P.round = function ( dp, rm ) {\r\n            var n = new BigNumber(this);\r\n\r\n            if ( dp == null || isValidInt( dp, 0, MAX, 15 ) ) {\r\n                round( n, ~~dp + this.e + 1, rm == null ||\r\n                  !isValidInt( rm, 0, 8, 15, roundingMode ) ? ROUNDING_MODE : rm | 0 );\r\n            }\r\n\r\n            return n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n         * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n         *\r\n         * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n         *\r\n         * If k is out of range and ERRORS is false, the result will be ±0 if k < 0, or ±Infinity\r\n         * otherwise.\r\n         *\r\n         * 'shift() argument not an integer: {k}'\r\n         * 'shift() argument out of range: {k}'\r\n         */\r\n        P.shift = function (k) {\r\n            var n = this;\r\n            return isValidInt( k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 16, 'argument' )\r\n\r\n              // k < 1e+21, or truncate(k) will produce exponential notation.\r\n              ? n.times( '1e' + truncate(k) )\r\n              : new BigNumber( n.c && n.c[0] && ( k < -MAX_SAFE_INTEGER || k > MAX_SAFE_INTEGER )\r\n                ? n.s * ( k < 0 ? 0 : 1 / 0 )\r\n                : n );\r\n        };\r\n\r\n\r\n        /*\r\n         *  sqrt(-n) =  N\r\n         *  sqrt( N) =  N\r\n         *  sqrt(-I) =  N\r\n         *  sqrt( I) =  I\r\n         *  sqrt( 0) =  0\r\n         *  sqrt(-0) = -0\r\n         *\r\n         * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n         * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         */\r\n        P.squareRoot = P.sqrt = function () {\r\n            var m, n, r, rep, t,\r\n                x = this,\r\n                c = x.c,\r\n                s = x.s,\r\n                e = x.e,\r\n                dp = DECIMAL_PLACES + 4,\r\n                half = new BigNumber('0.5');\r\n\r\n            // Negative/NaN/Infinity/zero?\r\n            if ( s !== 1 || !c || !c[0] ) {\r\n                return new BigNumber( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );\r\n            }\r\n\r\n            // Initial estimate.\r\n            s = Math.sqrt( +x );\r\n\r\n            // Math.sqrt underflow/overflow?\r\n            // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n            if ( s == 0 || s == 1 / 0 ) {\r\n                n = coeffToString(c);\r\n                if ( ( n.length + e ) % 2 == 0 ) n += '0';\r\n                s = Math.sqrt(n);\r\n                e = bitFloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );\r\n\r\n                if ( s == 1 / 0 ) {\r\n                    n = '1e' + e;\r\n                } else {\r\n                    n = s.toExponential();\r\n                    n = n.slice( 0, n.indexOf('e') + 1 ) + e;\r\n                }\r\n\r\n                r = new BigNumber(n);\r\n            } else {\r\n                r = new BigNumber( s + '' );\r\n            }\r\n\r\n            // Check for zero.\r\n            // r could be zero if MIN_EXP is changed after the this value was created.\r\n            // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n            // coeffToString to throw.\r\n            if ( r.c[0] ) {\r\n                e = r.e;\r\n                s = e + dp;\r\n                if ( s < 3 ) s = 0;\r\n\r\n                // Newton-Raphson iteration.\r\n                for ( ; ; ) {\r\n                    t = r;\r\n                    r = half.times( t.plus( div( x, t, dp, 1 ) ) );\r\n\r\n                    if ( coeffToString( t.c   ).slice( 0, s ) === ( n =\r\n                         coeffToString( r.c ) ).slice( 0, s ) ) {\r\n\r\n                        // The exponent of r may here be one less than the final result exponent,\r\n                        // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n                        // are indexed correctly.\r\n                        if ( r.e < e ) --s;\r\n                        n = n.slice( s - 3, s + 1 );\r\n\r\n                        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n                        // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n                        // iteration.\r\n                        if ( n == '9999' || !rep && n == '4999' ) {\r\n\r\n                            // On the first iteration only, check to see if rounding up gives the\r\n                            // exact result as the nines may infinitely repeat.\r\n                            if ( !rep ) {\r\n                                round( t, t.e + DECIMAL_PLACES + 2, 0 );\r\n\r\n                                if ( t.times(t).eq(x) ) {\r\n                                    r = t;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            dp += 4;\r\n                            s += 4;\r\n                            rep = 1;\r\n                        } else {\r\n\r\n                            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n                            // result. If not, then there are further digits and m will be truthy.\r\n                            if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {\r\n\r\n                                // Truncate to the first rounding digit.\r\n                                round( r, r.e + DECIMAL_PLACES + 2, 1 );\r\n                                m = !r.times(r).eq(x);\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return round( r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m );\r\n        };\r\n\r\n\r\n        /*\r\n         *  n * 0 = 0\r\n         *  n * N = N\r\n         *  n * I = I\r\n         *  0 * n = 0\r\n         *  0 * 0 = 0\r\n         *  0 * N = N\r\n         *  0 * I = N\r\n         *  N * n = N\r\n         *  N * 0 = N\r\n         *  N * N = N\r\n         *  N * I = N\r\n         *  I * n = I\r\n         *  I * 0 = N\r\n         *  I * N = N\r\n         *  I * I = I\r\n         *\r\n         * Return a new BigNumber whose value is the value of this BigNumber times the value of\r\n         * BigNumber(y, b).\r\n         */\r\n        P.times = P.mul = function ( y, b ) {\r\n            var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n                base, sqrtBase,\r\n                x = this,\r\n                xc = x.c,\r\n                yc = ( id = 17, y = new BigNumber( y, b ) ).c;\r\n\r\n            // Either NaN, ±Infinity or ±0?\r\n            if ( !xc || !yc || !xc[0] || !yc[0] ) {\r\n\r\n                // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n                if ( !x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc ) {\r\n                    y.c = y.e = y.s = null;\r\n                } else {\r\n                    y.s *= x.s;\r\n\r\n                    // Return ±Infinity if either is ±Infinity.\r\n                    if ( !xc || !yc ) {\r\n                        y.c = y.e = null;\r\n\r\n                    // Return ±0 if either is ±0.\r\n                    } else {\r\n                        y.c = [0];\r\n                        y.e = 0;\r\n                    }\r\n                }\r\n\r\n                return y;\r\n            }\r\n\r\n            e = bitFloor( x.e / LOG_BASE ) + bitFloor( y.e / LOG_BASE );\r\n            y.s *= x.s;\r\n            xcL = xc.length;\r\n            ycL = yc.length;\r\n\r\n            // Ensure xc points to longer array and xcL to its length.\r\n            if ( xcL < ycL ) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n            // Initialise the result array with zeros.\r\n            for ( i = xcL + ycL, zc = []; i--; zc.push(0) );\r\n\r\n            base = BASE;\r\n            sqrtBase = SQRT_BASE;\r\n\r\n            for ( i = ycL; --i >= 0; ) {\r\n                c = 0;\r\n                ylo = yc[i] % sqrtBase;\r\n                yhi = yc[i] / sqrtBase | 0;\r\n\r\n                for ( k = xcL, j = i + k; j > i; ) {\r\n                    xlo = xc[--k] % sqrtBase;\r\n                    xhi = xc[k] / sqrtBase | 0;\r\n                    m = yhi * xlo + xhi * ylo;\r\n                    xlo = ylo * xlo + ( ( m % sqrtBase ) * sqrtBase ) + zc[j] + c;\r\n                    c = ( xlo / base | 0 ) + ( m / sqrtBase | 0 ) + yhi * xhi;\r\n                    zc[j--] = xlo % base;\r\n                }\r\n\r\n                zc[j] = c;\r\n            }\r\n\r\n            if (c) {\r\n                ++e;\r\n            } else {\r\n                zc.shift();\r\n            }\r\n\r\n            return normalise( y, zc, e );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of\r\n         * sd significant digits using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n         *\r\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toDigits() precision out of range: {sd}'\r\n         * 'toDigits() precision not an integer: {sd}'\r\n         * 'toDigits() rounding mode not an integer: {rm}'\r\n         * 'toDigits() rounding mode out of range: {rm}'\r\n         */\r\n        P.toDigits = function ( sd, rm ) {\r\n            var n = new BigNumber(this);\r\n            sd = sd == null || !isValidInt( sd, 1, MAX, 18, 'precision' ) ? null : sd | 0;\r\n            rm = rm == null || !isValidInt( rm, 0, 8, 18, roundingMode ) ? ROUNDING_MODE : rm | 0;\r\n            return sd ? round( n, sd, rm ) : n;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in exponential notation and\r\n         * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toExponential() decimal places not an integer: {dp}'\r\n         * 'toExponential() decimal places out of range: {dp}'\r\n         * 'toExponential() rounding mode not an integer: {rm}'\r\n         * 'toExponential() rounding mode out of range: {rm}'\r\n         */\r\n        P.toExponential = function ( dp, rm ) {\r\n            return format( this,\r\n              dp != null && isValidInt( dp, 0, MAX, 19 ) ? ~~dp + 1 : null, rm, 19 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n         * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n         *\r\n         * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n         * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toFixed() decimal places not an integer: {dp}'\r\n         * 'toFixed() decimal places out of range: {dp}'\r\n         * 'toFixed() rounding mode not an integer: {rm}'\r\n         * 'toFixed() rounding mode out of range: {rm}'\r\n         */\r\n        P.toFixed = function ( dp, rm ) {\r\n            return format( this, dp != null && isValidInt( dp, 0, MAX, 20 )\r\n              ? ~~dp + this.e + 1 : null, rm, 20 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n         * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n         * of the FORMAT object (see BigNumber.config).\r\n         *\r\n         * FORMAT = {\r\n         *      decimalSeparator : '.',\r\n         *      groupSeparator : ',',\r\n         *      groupSize : 3,\r\n         *      secondaryGroupSize : 0,\r\n         *      fractionGroupSeparator : '\\xA0',    // non-breaking space\r\n         *      fractionGroupSize : 0\r\n         * };\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toFormat() decimal places not an integer: {dp}'\r\n         * 'toFormat() decimal places out of range: {dp}'\r\n         * 'toFormat() rounding mode not an integer: {rm}'\r\n         * 'toFormat() rounding mode out of range: {rm}'\r\n         */\r\n        P.toFormat = function ( dp, rm ) {\r\n            var str = format( this, dp != null && isValidInt( dp, 0, MAX, 21 )\r\n              ? ~~dp + this.e + 1 : null, rm, 21 );\r\n\r\n            if ( this.c ) {\r\n                var i,\r\n                    arr = str.split('.'),\r\n                    g1 = +FORMAT.groupSize,\r\n                    g2 = +FORMAT.secondaryGroupSize,\r\n                    groupSeparator = FORMAT.groupSeparator,\r\n                    intPart = arr[0],\r\n                    fractionPart = arr[1],\r\n                    isNeg = this.s < 0,\r\n                    intDigits = isNeg ? intPart.slice(1) : intPart,\r\n                    len = intDigits.length;\r\n\r\n                if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n                if ( g1 > 0 && len > 0 ) {\r\n                    i = len % g1 || g1;\r\n                    intPart = intDigits.substr( 0, i );\r\n\r\n                    for ( ; i < len; i += g1 ) {\r\n                        intPart += groupSeparator + intDigits.substr( i, g1 );\r\n                    }\r\n\r\n                    if ( g2 > 0 ) intPart += groupSeparator + intDigits.slice(i);\r\n                    if (isNeg) intPart = '-' + intPart;\r\n                }\r\n\r\n                str = fractionPart\r\n                  ? intPart + FORMAT.decimalSeparator + ( ( g2 = +FORMAT.fractionGroupSize )\r\n                    ? fractionPart.replace( new RegExp( '\\\\d{' + g2 + '}\\\\B', 'g' ),\r\n                      '$&' + FORMAT.fractionGroupSeparator )\r\n                    : fractionPart )\r\n                  : intPart;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string array representing the value of this BigNumber as a simple fraction with\r\n         * an integer numerator and an integer denominator. The denominator will be a positive\r\n         * non-zero value less than or equal to the specified maximum denominator. If a maximum\r\n         * denominator is not specified, the denominator will be the lowest value necessary to\r\n         * represent the number exactly.\r\n         *\r\n         * [md] {number|string|BigNumber} Integer >= 1 and < Infinity. The maximum denominator.\r\n         *\r\n         * 'toFraction() max denominator not an integer: {md}'\r\n         * 'toFraction() max denominator out of range: {md}'\r\n         */\r\n        P.toFraction = function (md) {\r\n            var arr, d0, d2, e, exp, n, n0, q, s,\r\n                k = ERRORS,\r\n                x = this,\r\n                xc = x.c,\r\n                d = new BigNumber(ONE),\r\n                n1 = d0 = new BigNumber(ONE),\r\n                d1 = n0 = new BigNumber(ONE);\r\n\r\n            if ( md != null ) {\r\n                ERRORS = false;\r\n                n = new BigNumber(md);\r\n                ERRORS = k;\r\n\r\n                if ( !( k = n.isInt() ) || n.lt(ONE) ) {\r\n\r\n                    if (ERRORS) {\r\n                        raise( 22,\r\n                          'max denominator ' + ( k ? 'out of range' : 'not an integer' ), md );\r\n                    }\r\n\r\n                    // ERRORS is false:\r\n                    // If md is a finite non-integer >= 1, round it to an integer and use it.\r\n                    md = !k && n.c && round( n, n.e + 1, 1 ).gte(ONE) ? n : null;\r\n                }\r\n            }\r\n\r\n            if ( !xc ) return x.toString();\r\n            s = coeffToString(xc);\r\n\r\n            // Determine initial denominator.\r\n            // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n            e = d.e = s.length - x.e - 1;\r\n            d.c[0] = POWS_TEN[ ( exp = e % LOG_BASE ) < 0 ? LOG_BASE + exp : exp ];\r\n            md = !md || n.cmp(d) > 0 ? ( e > 0 ? d : n1 ) : n;\r\n\r\n            exp = MAX_EXP;\r\n            MAX_EXP = 1 / 0;\r\n            n = new BigNumber(s);\r\n\r\n            // n0 = d1 = 0\r\n            n0.c[0] = 0;\r\n\r\n            for ( ; ; )  {\r\n                q = div( n, d, 0, 1 );\r\n                d2 = d0.plus( q.times(d1) );\r\n                if ( d2.cmp(md) == 1 ) break;\r\n                d0 = d1;\r\n                d1 = d2;\r\n                n1 = n0.plus( q.times( d2 = n1 ) );\r\n                n0 = d2;\r\n                d = n.minus( q.times( d2 = d ) );\r\n                n = d2;\r\n            }\r\n\r\n            d2 = div( md.minus(d0), d1, 0, 1 );\r\n            n0 = n0.plus( d2.times(n1) );\r\n            d0 = d0.plus( d2.times(d1) );\r\n            n0.s = n1.s = x.s;\r\n            e *= 2;\r\n\r\n            // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n            arr = div( n1, d1, e, ROUNDING_MODE ).minus(x).abs().cmp(\r\n                  div( n0, d0, e, ROUNDING_MODE ).minus(x).abs() ) < 1\r\n                    ? [ n1.toString(), d1.toString() ]\r\n                    : [ n0.toString(), d0.toString() ];\r\n\r\n            MAX_EXP = exp;\r\n            return arr;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return the value of this BigNumber converted to a number primitive.\r\n         */\r\n        P.toNumber = function () {\r\n            var x = this;\r\n\r\n            // Ensure zero has correct sign.\r\n            return +x || ( x.s ? x.s * 0 : NaN );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a BigNumber whose value is the value of this BigNumber raised to the power n.\r\n         * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n         * If POW_PRECISION is not 0, round to POW_PRECISION using ROUNDING_MODE.\r\n         *\r\n         * n {number} Integer, -9007199254740992 to 9007199254740992 inclusive.\r\n         * (Performs 54 loop iterations for n of 9007199254740992.)\r\n         *\r\n         * 'pow() exponent not an integer: {n}'\r\n         * 'pow() exponent out of range: {n}'\r\n         */\r\n        P.toPower = P.pow = function (n) {\r\n            var k, y,\r\n                i = mathfloor( n < 0 ? -n : +n ),\r\n                x = this;\r\n\r\n            // Pass ±Infinity to Math.pow if exponent is out of range.\r\n            if ( !isValidInt( n, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 23, 'exponent' ) &&\r\n              ( !isFinite(n) || i > MAX_SAFE_INTEGER && ( n /= 0 ) ||\r\n                parseFloat(n) != n && !( n = NaN ) ) ) {\r\n                return new BigNumber( Math.pow( +x, n ) );\r\n            }\r\n\r\n            // Truncating each coefficient array to a length of k after each multiplication equates\r\n            // to truncating significant digits to POW_PRECISION + [28, 41], i.e. there will be a\r\n            // minimum of 28 guard digits retained. (Using + 1.5 would give [9, 21] guard digits.)\r\n            k = POW_PRECISION ? mathceil( POW_PRECISION / LOG_BASE + 2 ) : 0;\r\n            y = new BigNumber(ONE);\r\n\r\n            for ( ; ; ) {\r\n\r\n                if ( i % 2 ) {\r\n                    y = y.times(x);\r\n                    if ( !y.c ) break;\r\n                    if ( k && y.c.length > k ) y.c.length = k;\r\n                }\r\n\r\n                i = mathfloor( i / 2 );\r\n                if ( !i ) break;\r\n\r\n                x = x.times(x);\r\n                if ( k && x.c && x.c.length > k ) x.c.length = k;\r\n            }\r\n\r\n            if ( n < 0 ) y = ONE.div(y);\r\n            return k ? round( y, POW_PRECISION, ROUNDING_MODE ) : y;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n         * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n         * necessary to represent the integer part of the value in fixed-point notation, then use\r\n         * exponential notation.\r\n         *\r\n         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n         *\r\n         * 'toPrecision() precision not an integer: {sd}'\r\n         * 'toPrecision() precision out of range: {sd}'\r\n         * 'toPrecision() rounding mode not an integer: {rm}'\r\n         * 'toPrecision() rounding mode out of range: {rm}'\r\n         */\r\n        P.toPrecision = function ( sd, rm ) {\r\n            return format( this, sd != null && isValidInt( sd, 1, MAX, 24, 'precision' )\r\n              ? sd | 0 : null, rm, 24 );\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n         * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n         * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n         * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n         * TO_EXP_NEG, return exponential notation.\r\n         *\r\n         * [b] {number} Integer, 2 to 64 inclusive.\r\n         *\r\n         * 'toString() base not an integer: {b}'\r\n         * 'toString() base out of range: {b}'\r\n         */\r\n        P.toString = function (b) {\r\n            var str,\r\n                n = this,\r\n                s = n.s,\r\n                e = n.e;\r\n\r\n            // Infinity or NaN?\r\n            if ( e === null ) {\r\n\r\n                if (s) {\r\n                    str = 'Infinity';\r\n                    if ( s < 0 ) str = '-' + str;\r\n                } else {\r\n                    str = 'NaN';\r\n                }\r\n            } else {\r\n                str = coeffToString( n.c );\r\n\r\n                if ( b == null || !isValidInt( b, 2, 64, 25, 'base' ) ) {\r\n                    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n                      ? toExponential( str, e )\r\n                      : toFixedPoint( str, e );\r\n                } else {\r\n                    str = convertBase( toFixedPoint( str, e ), b | 0, 10, s );\r\n                }\r\n\r\n                if ( s < 0 && n.c[0] ) str = '-' + str;\r\n            }\r\n\r\n            return str;\r\n        };\r\n\r\n\r\n        /*\r\n         * Return a new BigNumber whose value is the value of this BigNumber truncated to a whole\r\n         * number.\r\n         */\r\n        P.truncated = P.trunc = function () {\r\n            return round( new BigNumber(this), this.e + 1, 1 );\r\n        };\r\n\r\n\r\n\r\n        /*\r\n         * Return as toString, but do not accept a base argument.\r\n         */\r\n        P.valueOf = P.toJSON = function () {\r\n            return this.toString();\r\n        };\r\n\r\n\r\n        // Aliases for BigDecimal methods.\r\n        //P.add = P.plus;         // P.add included above\r\n        //P.subtract = P.minus;   // P.sub included above\r\n        //P.multiply = P.times;   // P.mul included above\r\n        //P.divide = P.div;\r\n        //P.remainder = P.mod;\r\n        //P.compareTo = P.cmp;\r\n        //P.negate = P.neg;\r\n\r\n\r\n        if ( configObj != null ) BigNumber.config(configObj);\r\n\r\n        return BigNumber;\r\n    }\r\n\r\n\r\n    // PRIVATE HELPER FUNCTIONS\r\n\r\n\r\n    function bitFloor(n) {\r\n        var i = n | 0;\r\n        return n > 0 || n === i ? i : i - 1;\r\n    }\r\n\r\n\r\n    // Return a coefficient array as a string of base 10 digits.\r\n    function coeffToString(a) {\r\n        var s, z,\r\n            i = 1,\r\n            j = a.length,\r\n            r = a[0] + '';\r\n\r\n        for ( ; i < j; ) {\r\n            s = a[i++] + '';\r\n            z = LOG_BASE - s.length;\r\n            for ( ; z--; s = '0' + s );\r\n            r += s;\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for ( j = r.length; r.charCodeAt(--j) === 48; );\r\n        return r.slice( 0, j + 1 || 1 );\r\n    }\r\n\r\n\r\n    // Compare the value of BigNumbers x and y.\r\n    function compare( x, y ) {\r\n        var a, b,\r\n            xc = x.c,\r\n            yc = y.c,\r\n            i = x.s,\r\n            j = y.s,\r\n            k = x.e,\r\n            l = y.e;\r\n\r\n        // Either NaN?\r\n        if ( !i || !j ) return null;\r\n\r\n        a = xc && !xc[0];\r\n        b = yc && !yc[0];\r\n\r\n        // Either zero?\r\n        if ( a || b ) return a ? b ? 0 : -j : i;\r\n\r\n        // Signs differ?\r\n        if ( i != j ) return i;\r\n\r\n        a = i < 0;\r\n        b = k == l;\r\n\r\n        // Either Infinity?\r\n        if ( !xc || !yc ) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n        // Compare exponents.\r\n        if ( !b ) return k > l ^ a ? 1 : -1;\r\n\r\n        j = ( k = xc.length ) < ( l = yc.length ) ? k : l;\r\n\r\n        // Compare digit by digit.\r\n        for ( i = 0; i < j; i++ ) if ( xc[i] != yc[i] ) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n        // Compare lengths.\r\n        return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n    }\r\n\r\n\r\n    /*\r\n     * Return true if n is a valid number in range, otherwise false.\r\n     * Use for argument validation when ERRORS is false.\r\n     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.\r\n     */\r\n    function intValidatorNoErrors( n, min, max ) {\r\n        return ( n = truncate(n) ) >= min && n <= max;\r\n    }\r\n\r\n\r\n    function isArray(obj) {\r\n        return Object.prototype.toString.call(obj) == '[object Array]';\r\n    }\r\n\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. convertBase('255', 10, 16) returns [15, 15].\r\n     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut( str, baseIn, baseOut ) {\r\n        var j,\r\n            arr = [0],\r\n            arrL,\r\n            i = 0,\r\n            len = str.length;\r\n\r\n        for ( ; i < len; ) {\r\n            for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );\r\n            arr[ j = 0 ] += ALPHABET.indexOf( str.charAt( i++ ) );\r\n\r\n            for ( ; j < arr.length; j++ ) {\r\n\r\n                if ( arr[j] > baseOut - 1 ) {\r\n                    if ( arr[j + 1] == null ) arr[j + 1] = 0;\r\n                    arr[j + 1] += arr[j] / baseOut | 0;\r\n                    arr[j] %= baseOut;\r\n                }\r\n            }\r\n        }\r\n\r\n        return arr.reverse();\r\n    }\r\n\r\n\r\n    function toExponential( str, e ) {\r\n        return ( str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str ) +\r\n          ( e < 0 ? 'e' : 'e+' ) + e;\r\n    }\r\n\r\n\r\n    function toFixedPoint( str, e ) {\r\n        var len, z;\r\n\r\n        // Negative exponent?\r\n        if ( e < 0 ) {\r\n\r\n            // Prepend zeros.\r\n            for ( z = '0.'; ++e; z += '0' );\r\n            str = z + str;\r\n\r\n        // Positive exponent\r\n        } else {\r\n            len = str.length;\r\n\r\n            // Append zeros.\r\n            if ( ++e > len ) {\r\n                for ( z = '0', e -= len; --e; z += '0' );\r\n                str += z;\r\n            } else if ( e < len ) {\r\n                str = str.slice( 0, e ) + '.' + str.slice(e);\r\n            }\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n\r\n    function truncate(n) {\r\n        n = parseFloat(n);\r\n        return n < 0 ? mathceil(n) : mathfloor(n);\r\n    }\r\n\r\n\r\n    // EXPORT\r\n\r\n\r\n    BigNumber = another();\r\n\r\n    // AMD.\r\n    if ( typeof define == 'function' && define.amd ) {\r\n        define( function () { return BigNumber; } );\r\n\r\n    // Node and other environments that support module.exports.\r\n    } else if ( typeof module != 'undefined' && module.exports ) {\r\n        module.exports = BigNumber;\r\n        if ( !crypto ) try { crypto = require('crypto'); } catch (e) {}\r\n\r\n    // Browser.\r\n    } else {\r\n        global.BigNumber = BigNumber;\r\n    }\r\n})(this);\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/~/bignumber.js/bignumber.js\n// module id = 26\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file sha3.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar CryptoJS = require('crypto-js');\nvar sha3 = require('crypto-js/sha3');\n\nmodule.exports = function (value, options) {\n    if (options && options.encoding === 'hex') {\n        if (value.length > 2 && value.substr(0, 2) === '0x') {\n            value = value.substr(2);\n        }\n        value = CryptoJS.enc.Hex.parse(value);\n    }\n\n    return sha3(value, {\n        outputLength: 256\n    }).toString();\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/utils/sha3.js\n// module id = 27\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/index.js\n// module id = 28\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/core.js\n// module id = 29\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/x64-core.js\n// module id = 30\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/lib-typedarrays.js\n// module id = 31\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/enc-utf16.js\n// module id = 32\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/enc-base64.js\n// module id = 33\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/md5.js\n// module id = 34\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/sha1.js\n// module id = 35\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/sha256.js\n// module id = 36\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/sha224.js\n// module id = 37\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    var Wil = gamma0l + Wi7l;\n\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + gamma1l;\n\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + Wi16l;\n\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/sha512.js\n// module id = 38\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/sha384.js\n// module id = 39\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/sha3.js\n// module id = 40\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/ripemd160.js\n// module id = 41\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/hmac.js\n// module id = 42\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/pbkdf2.js\n// module id = 43\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                var block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/evpkdf.js\n// module id = 44\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                var block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                var block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                var modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                var modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                var wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/cipher-core.js\n// module id = 45\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            var keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            var keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/mode-cfb.js\n// module id = 46\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/mode-ctr.js\n// module id = 47\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/mode-ctr-gladman.js\n// module id = 48\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/mode-ofb.js\n// module id = 49\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/mode-ecb.js\n// module id = 50\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/pad-ansix923.js\n// module id = 51\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/pad-iso10126.js\n// module id = 52\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/pad-iso97971.js\n// module id = 53\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t            i--;\n\t        }\n\t        data.sigBytes = i + 1;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/pad-zeropadding.js\n// module id = 54\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/pad-nopadding.js\n// module id = 55\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/format-hex.js\n// module id = 56\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/aes.js\n// module id = 57\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/tripledes.js\n// module id = 58\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/rc4.js\n// module id = 59\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/rabbit.js\n// module id = 60\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crypto-js/rabbit-legacy.js\n// module id = 61\n// module chunks = 0","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/utf8/utf8.js\n// module id = 62\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 63\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file config.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\n/**\n * Utils\n * \n * @module utils\n */\n\n/**\n * Utility functions\n * \n * @class [utils] config\n * @constructor\n */\n\n\n/// required to define ETH_BIGNUMBER_ROUNDING_MODE\nvar BigNumber = require('bignumber.js');\n\nvar ETH_UNITS = [\n    'wei',\n    'kwei',\n    'Mwei',\n    'Gwei',\n    'szabo',\n    'finney',\n    'femtoether',\n    'picoether',\n    'nanoether',\n    'microether',\n    'milliether',\n    'nano',\n    'micro',\n    'milli',\n    'ether',\n    'grand',\n    'Mether',\n    'Gether',\n    'Tether',\n    'Pether',\n    'Eether',\n    'Zether',\n    'Yether',\n    'Nether',\n    'Dether',\n    'Vether',\n    'Uether'\n];\n\nmodule.exports = {\n    ETH_PADDING: 32,\n    ETH_SIGNATURE_LENGTH: 4,\n    ETH_UNITS: ETH_UNITS,\n    ETH_BIGNUMBER_ROUNDING_MODE: { ROUNDING_MODE: BigNumber.ROUND_DOWN },\n    ETH_POLLING_TIMEOUT: 1000/2,\n    defaultBlock: 'latest',\n    defaultAccount: undefined\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/utils/config.js\n// module id = 64\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file errors.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nmodule.exports = {\n    InvalidNumberOfParams: function () {\n        return new Error('Invalid number of input parameters');\n    },\n    InvalidConnection: function (host){\n        return new Error('CONNECTION ERROR: Couldn\\'t connect to node '+ host +'.');\n    },\n    InvalidProvider: function () {\n        return new Error('Provider not set or invalid');\n    },\n    InvalidResponse: function (result){\n        var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);\n        return new Error(message);\n    }\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/errors.js\n// module id = 65\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file iban.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar BigNumber = require('bignumber.js');\n\nvar padLeft = function (string, bytes) {\n    var result = string;\n    while (result.length < bytes * 2) {\n        result = '00' + result;\n    }\n    return result;\n};\n\n/**\n * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n *\n * @method iso13616Prepare\n * @param {String} iban the IBAN\n * @returns {String} the prepared IBAN\n */\nvar iso13616Prepare = function (iban) {\n    var A = 'A'.charCodeAt(0);\n    var Z = 'Z'.charCodeAt(0);\n\n    iban = iban.toUpperCase();\n    iban = iban.substr(4) + iban.substr(0,4);\n\n    return iban.split('').map(function(n){\n        var code = n.charCodeAt(0);\n        if (code >= A && code <= Z){\n            // A = 10, B = 11, ... Z = 35\n            return code - A + 10;\n        } else {\n            return n;\n        }\n    }).join('');\n};\n\n/**\n * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n *\n * @method mod9710\n * @param {String} iban\n * @returns {Number}\n */\nvar mod9710 = function (iban) {\n    var remainder = iban,\n        block;\n\n    while (remainder.length > 2){\n        block = remainder.slice(0, 9);\n        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\n    }\n\n    return parseInt(remainder, 10) % 97;\n};\n\n/**\n * This prototype should be used to create iban object from iban correct string\n *\n * @param {String} iban\n */\nvar Iban = function (iban) {\n    this._iban = iban;\n};\n\n/**\n * This method should be used to create iban object from ethereum address\n *\n * @method fromAddress\n * @param {String} address\n * @return {Iban} the IBAN object\n */\nIban.fromAddress = function (address) {\n    var asBn = new BigNumber(address, 16);\n    var base36 = asBn.toString(36);\n    var padded = padLeft(base36, 15);\n    return Iban.fromBban(padded.toUpperCase());\n};\n\n/**\n * Convert the passed BBAN to an IBAN for this country specification.\n * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n *\n * @method fromBban\n * @param {String} bban the BBAN to convert to IBAN\n * @returns {Iban} the IBAN object\n */\nIban.fromBban = function (bban) {\n    var countryCode = 'XE';\n\n    var remainder = mod9710(iso13616Prepare(countryCode + '00' + bban));\n    var checkDigit = ('0' + (98 - remainder)).slice(-2);\n\n    return new Iban(countryCode + checkDigit + bban);\n};\n\n/**\n * Should be used to create IBAN object for given institution and identifier\n *\n * @method createIndirect\n * @param {Object} options, required options are \"institution\" and \"identifier\"\n * @return {Iban} the IBAN object\n */\nIban.createIndirect = function (options) {\n    return Iban.fromBban('ETH' + options.institution + options.identifier);\n};\n\n/**\n * Thos method should be used to check if given string is valid iban object\n *\n * @method isValid\n * @param {String} iban string\n * @return {Boolean} true if it is valid IBAN\n */\nIban.isValid = function (iban) {\n    var i = new Iban(iban);\n    return i.isValid();\n};\n\n/**\n * Should be called to check if iban is correct\n *\n * @method isValid\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isValid = function () {\n    return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) &&\n        mod9710(iso13616Prepare(this._iban)) === 1;\n};\n\n/**\n * Should be called to check if iban number is direct\n *\n * @method isDirect\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isDirect = function () {\n    return this._iban.length === 34 || this._iban.length === 35;\n};\n\n/**\n * Should be called to check if iban number if indirect\n *\n * @method isIndirect\n * @returns {Boolean} true if it is, otherwise false\n */\nIban.prototype.isIndirect = function () {\n    return this._iban.length === 20;\n};\n\n/**\n * Should be called to get iban checksum\n * Uses the mod-97-10 checksumming protocol (ISO/IEC 7064:2003)\n *\n * @method checksum\n * @returns {String} checksum\n */\nIban.prototype.checksum = function () {\n    return this._iban.substr(2, 2);\n};\n\n/**\n * Should be called to get institution identifier\n * eg. XREG\n *\n * @method institution\n * @returns {String} institution identifier\n */\nIban.prototype.institution = function () {\n    return this.isIndirect() ? this._iban.substr(7, 4) : '';\n};\n\n/**\n * Should be called to get client identifier within institution\n * eg. GAVOFYORK\n *\n * @method client\n * @returns {String} client identifier\n */\nIban.prototype.client = function () {\n    return this.isIndirect() ? this._iban.substr(11) : '';\n};\n\n/**\n * Should be called to get client direct address\n *\n * @method address\n * @returns {String} client direct address\n */\nIban.prototype.address = function () {\n    if (this.isDirect()) {\n        var base36 = this._iban.substr(4);\n        var asBn = new BigNumber(base36, 36);\n        return padLeft(asBn.toString(16), 20);\n    } \n\n    return '';\n};\n\nIban.prototype.toString = function () {\n    return this._iban;\n};\n\nmodule.exports = Iban;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/iban.js\n// module id = 66\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file eth.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @author Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar formatters = require('../formatters');\nvar utils = require('../../utils/utils');\nvar Method = require('../method');\nvar Property = require('../property');\nvar c = require('../../utils/config');\nvar Contract = require('../contract');\nvar watches = require('./watches');\nvar Filter = require('../filter');\nvar IsSyncing = require('../syncing');\nvar namereg = require('../namereg');\nvar Iban = require('../iban');\nvar transfer = require('../transfer');\n\nvar blockCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\n\nvar transactionFromBlockCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\n\nvar uncleCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\n\nvar getBlockTransactionCountCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\n\nvar uncleCountCall = function (args) {\n    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\n\nfunction Eth(web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) { \n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n\n    properties().forEach(function(p) { \n        p.attachToObject(self);\n        p.setRequestManager(self._requestManager);\n    });\n\n\n    this.iban = Iban;\n    this.sendIBANTransaction = transfer.bind(null, this);\n}\n\nObject.defineProperty(Eth.prototype, 'defaultBlock', {\n    get: function () {\n        return c.defaultBlock;\n    },\n    set: function (val) {\n        c.defaultBlock = val;\n        return val;\n    }\n});\n\nObject.defineProperty(Eth.prototype, 'defaultAccount', {\n    get: function () {\n        return c.defaultAccount;\n    },\n    set: function (val) {\n        c.defaultAccount = val;\n        return val;\n    }\n});\n\nvar methods = function () {\n    var getBalance = new Method({\n        name: 'getBalance',\n        call: 'eth_getBalance',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter],\n        outputFormatter: formatters.outputBigNumberFormatter\n    });\n\n    var getStorageAt = new Method({\n        name: 'getStorageAt',\n        call: 'eth_getStorageAt',\n        params: 3,\n        inputFormatter: [null, utils.toHex, formatters.inputDefaultBlockNumberFormatter]\n    });\n\n    var getCode = new Method({\n        name: 'getCode',\n        call: 'eth_getCode',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter]\n    });\n\n    var getBlock = new Method({\n        name: 'getBlock',\n        call: blockCall,\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, function (val) { return !!val; }],\n        outputFormatter: formatters.outputBlockFormatter\n    });\n\n    var getUncle = new Method({\n        name: 'getUncle',\n        call: uncleCall,\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputBlockFormatter,\n\n    });\n\n    var getCompilers = new Method({\n        name: 'getCompilers',\n        call: 'eth_getCompilers',\n        params: 0\n    });\n\n    var getBlockTransactionCount = new Method({\n        name: 'getBlockTransactionCount',\n        call: getBlockTransactionCountCall,\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var getBlockUncleCount = new Method({\n        name: 'getBlockUncleCount',\n        call: uncleCountCall,\n        params: 1,\n        inputFormatter: [formatters.inputBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var getTransaction = new Method({\n        name: 'getTransaction',\n        call: 'eth_getTransactionByHash',\n        params: 1,\n        outputFormatter: formatters.outputTransactionFormatter\n    });\n\n    var getTransactionFromBlock = new Method({\n        name: 'getTransactionFromBlock',\n        call: transactionFromBlockCall,\n        params: 2,\n        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],\n        outputFormatter: formatters.outputTransactionFormatter\n    });\n\n    var getTransactionReceipt = new Method({\n        name: 'getTransactionReceipt',\n        call: 'eth_getTransactionReceipt',\n        params: 1,\n        outputFormatter: formatters.outputTransactionReceiptFormatter\n    });\n\n    var getTransactionCount = new Method({\n        name: 'getTransactionCount',\n        call: 'eth_getTransactionCount',\n        params: 2,\n        inputFormatter: [null, formatters.inputDefaultBlockNumberFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var sendRawTransaction = new Method({\n        name: 'sendRawTransaction',\n        call: 'eth_sendRawTransaction',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var sendTransaction = new Method({\n        name: 'sendTransaction',\n        call: 'eth_sendTransaction',\n        params: 1,\n        inputFormatter: [formatters.inputTransactionFormatter]\n    });\n\n    var sign = new Method({\n        name: 'sign',\n        call: 'eth_sign',\n        params: 2,\n        inputFormatter: [formatters.inputAddressFormatter, null]\n    });\n\n    var call = new Method({\n        name: 'call',\n        call: 'eth_call',\n        params: 2,\n        inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter]\n    });\n\n    var estimateGas = new Method({\n        name: 'estimateGas',\n        call: 'eth_estimateGas',\n        params: 1,\n        inputFormatter: [formatters.inputCallFormatter],\n        outputFormatter: utils.toDecimal\n    });\n\n    var compileSolidity = new Method({\n        name: 'compile.solidity',\n        call: 'eth_compileSolidity',\n        params: 1\n    });\n\n    var compileLLL = new Method({\n        name: 'compile.lll',\n        call: 'eth_compileLLL',\n        params: 1\n    });\n\n    var compileSerpent = new Method({\n        name: 'compile.serpent',\n        call: 'eth_compileSerpent',\n        params: 1\n    });\n\n    var submitWork = new Method({\n        name: 'submitWork',\n        call: 'eth_submitWork',\n        params: 3\n    });\n\n    var getWork = new Method({\n        name: 'getWork',\n        call: 'eth_getWork',\n        params: 0\n    });\n\n    return [\n        getBalance,\n        getStorageAt,\n        getCode,\n        getBlock,\n        getUncle,\n        getCompilers,\n        getBlockTransactionCount,\n        getBlockUncleCount,\n        getTransaction,\n        getTransactionFromBlock,\n        getTransactionReceipt,\n        getTransactionCount,\n        call,\n        estimateGas,\n        sendRawTransaction,\n        sendTransaction,\n        sign,\n        compileSolidity,\n        compileLLL,\n        compileSerpent,\n        submitWork,\n        getWork\n    ];\n};\n\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'coinbase',\n            getter: 'eth_coinbase'\n        }),\n        new Property({\n            name: 'mining',\n            getter: 'eth_mining'\n        }),\n        new Property({\n            name: 'hashrate',\n            getter: 'eth_hashrate',\n            outputFormatter: utils.toDecimal\n        }),\n        new Property({\n            name: 'syncing',\n            getter: 'eth_syncing',\n            outputFormatter: formatters.outputSyncingFormatter\n        }),\n        new Property({\n            name: 'gasPrice',\n            getter: 'eth_gasPrice',\n            outputFormatter: formatters.outputBigNumberFormatter\n        }),\n        new Property({\n            name: 'accounts',\n            getter: 'eth_accounts'\n        }),\n        new Property({\n            name: 'blockNumber',\n            getter: 'eth_blockNumber',\n            outputFormatter: utils.toDecimal\n        })\n    ];\n};\n\nEth.prototype.contract = function (abi) {\n    var factory = new Contract(this, abi);\n    return factory;\n};\n\nEth.prototype.filter = function (fil, callback) {\n    return new Filter(this._requestManager, fil, watches.eth(), formatters.outputLogFormatter, callback);\n};\n\nEth.prototype.namereg = function () {\n    return this.contract(namereg.global.abi).at(namereg.global.address);\n};\n\nEth.prototype.icapNamereg = function () {\n    return this.contract(namereg.icap.abi).at(namereg.icap.address);\n};\n\nEth.prototype.isSyncing = function (callback) {\n    return new IsSyncing(this._requestManager, callback);\n};\n\nmodule.exports = Eth;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/methods/eth.js\n// module id = 67\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file formatters.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @author Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\nvar config = require('../utils/config');\nvar Iban = require('./iban');\n\n/**\n * Should the format output to a big number\n *\n * @method outputBigNumberFormatter\n * @param {String|Number|BigNumber}\n * @returns {BigNumber} object\n */\nvar outputBigNumberFormatter = function (number) {\n    return utils.toBigNumber(number);\n};\n\nvar isPredefinedBlockNumber = function (blockNumber) {\n    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';\n};\n\nvar inputDefaultBlockNumberFormatter = function (blockNumber) {\n    if (blockNumber === undefined) {\n        return config.defaultBlock;\n    }\n    return inputBlockNumberFormatter(blockNumber);\n};\n\nvar inputBlockNumberFormatter = function (blockNumber) {\n    if (blockNumber === undefined) {\n        return undefined;\n    } else if (isPredefinedBlockNumber(blockNumber)) {\n        return blockNumber;\n    }\n    return utils.toHex(blockNumber);\n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputCallFormatter\n * @param {Object} transaction options\n * @returns object\n*/\nvar inputCallFormatter = function (options){\n\n    options.from = options.from || config.defaultAccount;\n\n    if (options.from) {\n        options.from = inputAddressFormatter(options.from);\n    }\n\n    if (options.to) { // it might be contract creation\n        options.to = inputAddressFormatter(options.to);\n    }\n\n    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {\n        return options[key] !== undefined;\n    }).forEach(function(key){\n        options[key] = utils.fromDecimal(options[key]);\n    });\n\n    return options; \n};\n\n/**\n * Formats the input of a transaction and converts all values to HEX\n *\n * @method inputTransactionFormatter\n * @param {Object} transaction options\n * @returns object\n*/\nvar inputTransactionFormatter = function (options){\n\n    options.from = options.from || config.defaultAccount;\n    options.from = inputAddressFormatter(options.from);\n\n    if (options.to) { // it might be contract creation\n        options.to = inputAddressFormatter(options.to);\n    }\n\n    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {\n        return options[key] !== undefined;\n    }).forEach(function(key){\n        options[key] = utils.fromDecimal(options[key]);\n    });\n\n    return options; \n};\n\n/**\n * Formats the output of a transaction to its proper values\n * \n * @method outputTransactionFormatter\n * @param {Object} tx\n * @returns {Object}\n*/\nvar outputTransactionFormatter = function (tx){\n    if(tx.blockNumber !== null)\n        tx.blockNumber = utils.toDecimal(tx.blockNumber);\n    if(tx.transactionIndex !== null)\n        tx.transactionIndex = utils.toDecimal(tx.transactionIndex);\n    tx.nonce = utils.toDecimal(tx.nonce);\n    tx.gas = utils.toDecimal(tx.gas);\n    tx.gasPrice = utils.toBigNumber(tx.gasPrice);\n    tx.value = utils.toBigNumber(tx.value);\n    return tx;\n};\n\n/**\n * Formats the output of a transaction receipt to its proper values\n * \n * @method outputTransactionReceiptFormatter\n * @param {Object} receipt\n * @returns {Object}\n*/\nvar outputTransactionReceiptFormatter = function (receipt){\n    if(receipt.blockNumber !== null)\n        receipt.blockNumber = utils.toDecimal(receipt.blockNumber);\n    if(receipt.transactionIndex !== null)\n        receipt.transactionIndex = utils.toDecimal(receipt.transactionIndex);\n    receipt.cumulativeGasUsed = utils.toDecimal(receipt.cumulativeGasUsed);\n    receipt.gasUsed = utils.toDecimal(receipt.gasUsed);\n\n    if(utils.isArray(receipt.logs)) {\n        receipt.logs = receipt.logs.map(function(log){\n            return outputLogFormatter(log);\n        });\n    }\n\n    return receipt;\n};\n\n/**\n * Formats the output of a block to its proper values\n *\n * @method outputBlockFormatter\n * @param {Object} block \n * @returns {Object}\n*/\nvar outputBlockFormatter = function(block) {\n\n    // transform to number\n    block.gasLimit = utils.toDecimal(block.gasLimit);\n    block.gasUsed = utils.toDecimal(block.gasUsed);\n    block.size = utils.toDecimal(block.size);\n    block.timestamp = utils.toDecimal(block.timestamp);\n    if(block.number !== null)\n        block.number = utils.toDecimal(block.number);\n\n    block.difficulty = utils.toBigNumber(block.difficulty);\n    block.totalDifficulty = utils.toBigNumber(block.totalDifficulty);\n\n    if (utils.isArray(block.transactions)) {\n        block.transactions.forEach(function(item){\n            if(!utils.isString(item))\n                return outputTransactionFormatter(item);\n        });\n    }\n\n    return block;\n};\n\n/**\n * Formats the output of a log\n * \n * @method outputLogFormatter\n * @param {Object} log object\n * @returns {Object} log\n*/\nvar outputLogFormatter = function(log) {\n    if(log.blockNumber !== null)\n        log.blockNumber = utils.toDecimal(log.blockNumber);\n    if(log.transactionIndex !== null)\n        log.transactionIndex = utils.toDecimal(log.transactionIndex);\n    if(log.logIndex !== null)\n        log.logIndex = utils.toDecimal(log.logIndex);\n\n    return log;\n};\n\n/**\n * Formats the input of a whisper post and converts all values to HEX\n *\n * @method inputPostFormatter\n * @param {Object} transaction object\n * @returns {Object}\n*/\nvar inputPostFormatter = function(post) {\n\n    // post.payload = utils.toHex(post.payload);\n    post.ttl = utils.fromDecimal(post.ttl);\n    post.workToProve = utils.fromDecimal(post.workToProve);\n    post.priority = utils.fromDecimal(post.priority);\n\n    // fallback\n    if (!utils.isArray(post.topics)) {\n        post.topics = post.topics ? [post.topics] : [];\n    }\n\n    // format the following options\n    post.topics = post.topics.map(function(topic){\n        // convert only if not hex\n        return (topic.indexOf('0x') === 0) ? topic : utils.fromUtf8(topic);\n    });\n\n    return post; \n};\n\n/**\n * Formats the output of a received post message\n *\n * @method outputPostFormatter\n * @param {Object}\n * @returns {Object}\n */\nvar outputPostFormatter = function(post){\n\n    post.expiry = utils.toDecimal(post.expiry);\n    post.sent = utils.toDecimal(post.sent);\n    post.ttl = utils.toDecimal(post.ttl);\n    post.workProved = utils.toDecimal(post.workProved);\n    // post.payloadRaw = post.payload;\n    // post.payload = utils.toAscii(post.payload);\n\n    // if (utils.isJson(post.payload)) {\n    //     post.payload = JSON.parse(post.payload);\n    // }\n\n    // format the following options\n    if (!post.topics) {\n        post.topics = [];\n    }\n    post.topics = post.topics.map(function(topic){\n        return utils.toAscii(topic);\n    });\n\n    return post;\n};\n\nvar inputAddressFormatter = function (address) {\n    var iban = new Iban(address);\n    if (iban.isValid() && iban.isDirect()) {\n        return '0x' + iban.address();\n    } else if (utils.isStrictAddress(address)) {\n        return address;\n    } else if (utils.isAddress(address)) {\n        return '0x' + address;\n    }\n    throw 'invalid address';\n};\n\n\nvar outputSyncingFormatter = function(result) {\n\n    result.startingBlock = utils.toDecimal(result.startingBlock);\n    result.currentBlock = utils.toDecimal(result.currentBlock);\n    result.highestBlock = utils.toDecimal(result.highestBlock);\n\n    return result;\n};\n\nmodule.exports = {\n    inputDefaultBlockNumberFormatter: inputDefaultBlockNumberFormatter,\n    inputBlockNumberFormatter: inputBlockNumberFormatter,\n    inputCallFormatter: inputCallFormatter,\n    inputTransactionFormatter: inputTransactionFormatter,\n    inputAddressFormatter: inputAddressFormatter,\n    inputPostFormatter: inputPostFormatter,\n    outputBigNumberFormatter: outputBigNumberFormatter,\n    outputTransactionFormatter: outputTransactionFormatter,\n    outputTransactionReceiptFormatter: outputTransactionReceiptFormatter,\n    outputBlockFormatter: outputBlockFormatter,\n    outputLogFormatter: outputLogFormatter,\n    outputPostFormatter: outputPostFormatter,\n    outputSyncingFormatter: outputSyncingFormatter\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/formatters.js\n// module id = 68\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file method.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\nvar errors = require('./errors');\n\nvar Method = function (options) {\n    this.name = options.name;\n    this.call = options.call;\n    this.params = options.params || 0;\n    this.inputFormatter = options.inputFormatter;\n    this.outputFormatter = options.outputFormatter;\n    this.requestManager = null;\n};\n\nMethod.prototype.setRequestManager = function (rm) {\n    this.requestManager = rm;\n};\n\n/**\n * Should be used to determine name of the jsonrpc method based on arguments\n *\n * @method getCall\n * @param {Array} arguments\n * @return {String} name of jsonrpc method\n */\nMethod.prototype.getCall = function (args) {\n    return utils.isFunction(this.call) ? this.call(args) : this.call;\n};\n\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\nMethod.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\n/**\n * Should be called to check if the number of arguments is correct\n * \n * @method validateArgs\n * @param {Array} arguments\n * @throws {Error} if it is not\n */\nMethod.prototype.validateArgs = function (args) {\n    if (args.length !== this.params) {\n        throw errors.InvalidNumberOfParams();\n    }\n};\n\n/**\n * Should be called to format input args of method\n * \n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\nMethod.prototype.formatInput = function (args) {\n    if (!this.inputFormatter) {\n        return args;\n    }\n\n    return this.inputFormatter.map(function (formatter, index) {\n        return formatter ? formatter(args[index]) : args[index];\n    });\n};\n\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param {Object}\n * @return {Object}\n */\nMethod.prototype.formatOutput = function (result) {\n    return this.outputFormatter && result ? this.outputFormatter(result) : result;\n};\n\n/**\n * Should create payload from given input args\n *\n * @method toPayload\n * @param {Array} args\n * @return {Object}\n */\nMethod.prototype.toPayload = function (args) {\n    var call = this.getCall(args);\n    var callback = this.extractCallback(args);\n    var params = this.formatInput(args);\n    this.validateArgs(params);\n\n    return {\n        method: call,\n        params: params,\n        callback: callback\n    };\n};\n\nMethod.prototype.attachToObject = function (obj) {\n    var func = this.buildCall();\n    func.call = this.call; // TODO!!! that's ugly. filter.js uses it\n    var name = this.name.split('.');\n    if (name.length > 1) {\n        obj[name[0]] = obj[name[0]] || {};\n        obj[name[0]][name[1]] = func;\n    } else {\n        obj[name[0]] = func; \n    }\n};\n\nMethod.prototype.buildCall = function() {\n    var method = this;\n    var send = function () {\n        var payload = method.toPayload(Array.prototype.slice.call(arguments));\n        if (payload.callback) {\n            return method.requestManager.sendAsync(payload, function (err, result) {\n                payload.callback(err, method.formatOutput(result));\n            });\n        }\n        return method.formatOutput(method.requestManager.send(payload));\n    };\n    send.request = this.request.bind(this);\n    return send;\n};\n\n/**\n * Should be called to create pure JSONRPC request which can be used in batch request\n *\n * @method request\n * @param {...} params\n * @return {Object} jsonrpc request\n */\nMethod.prototype.request = function () {\n    var payload = this.toPayload(Array.prototype.slice.call(arguments));\n    payload.format = this.formatOutput.bind(this);\n    return payload;\n};\n\nmodule.exports = Method;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/method.js\n// module id = 69\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file property.js\n * @author Fabian Vogelsteller <fabian@frozeman.de>\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\n\nvar Property = function (options) {\n    this.name = options.name;\n    this.getter = options.getter;\n    this.setter = options.setter;\n    this.outputFormatter = options.outputFormatter;\n    this.inputFormatter = options.inputFormatter;\n    this.requestManager = null;\n};\n\nProperty.prototype.setRequestManager = function (rm) {\n    this.requestManager = rm;\n};\n\n/**\n * Should be called to format input args of method\n * \n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\nProperty.prototype.formatInput = function (arg) {\n    return this.inputFormatter ? this.inputFormatter(arg) : arg;\n};\n\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param {Object}\n * @return {Object}\n */\nProperty.prototype.formatOutput = function (result) {\n    return this.outputFormatter && result !== null ? this.outputFormatter(result) : result;\n};\n\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\nProperty.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\n\n/**\n * Should attach function to method\n * \n * @method attachToObject\n * @param {Object}\n * @param {Function}\n */\nProperty.prototype.attachToObject = function (obj) {\n    var proto = {\n        get: this.buildGet(),\n        enumerable: true \n    };\n\n    var names = this.name.split('.');\n    var name = names[0];\n    if (names.length > 1) {\n        obj[names[0]] = obj[names[0]] || {};\n        obj = obj[names[0]];\n        name = names[1];\n    }\n\n    Object.defineProperty(obj, name, proto);\n    obj[asyncGetterName(name)] = this.buildAsyncGet();\n};\n\nvar asyncGetterName = function (name) {\n    return 'get' + name.charAt(0).toUpperCase() + name.slice(1);\n};\n\nProperty.prototype.buildGet = function () {\n    var property = this;\n    return function get() {\n        return property.formatOutput(property.requestManager.send({\n            method: property.getter\n        })); \n    };\n};\n\nProperty.prototype.buildAsyncGet = function () {\n    var property = this;\n    var get = function (callback) {\n        property.requestManager.sendAsync({\n            method: property.getter\n        }, function (err, result) {\n            callback(err, property.formatOutput(result));\n        });\n    };\n    get.request = this.request.bind(this);\n    return get;\n};\n\n/**\n * Should be called to create pure JSONRPC request which can be used in batch request\n *\n * @method request\n * @param {...} params\n * @return {Object} jsonrpc request\n */\nProperty.prototype.request = function () {\n    var payload = {\n        method: this.getter,\n        params: [],\n        callback: this.extractCallback(Array.prototype.slice.call(arguments))\n    };\n    payload.format = this.formatOutput.bind(this);\n    return payload;\n};\n\nmodule.exports = Property;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/property.js\n// module id = 70\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\n\nvar utils = require('../utils/utils');\nvar coder = require('../solidity/coder');\nvar SolidityEvent = require('./event');\nvar SolidityFunction = require('./function');\nvar AllEvents = require('./allevents');\n\n/**\n * Should be called to encode constructor params\n *\n * @method encodeConstructorParams\n * @param {Array} abi\n * @param {Array} constructor params\n */\nvar encodeConstructorParams = function (abi, params) {\n    return abi.filter(function (json) {\n        return json.type === 'constructor' && json.inputs.length === params.length;\n    }).map(function (json) {\n        return json.inputs.map(function (input) {\n            return input.type;\n        });\n    }).map(function (types) {\n        return coder.encodeParams(types, params);\n    })[0] || '';\n};\n\n/**\n * Should be called to add functions to contract object\n *\n * @method addFunctionsToContract\n * @param {Contract} contract\n * @param {Array} abi\n */\nvar addFunctionsToContract = function (contract) {\n    contract.abi.filter(function (json) {\n        return json.type === 'function';\n    }).map(function (json) {\n        return new SolidityFunction(contract._eth, json, contract.address);\n    }).forEach(function (f) {\n        f.attachToContract(contract);\n    });\n};\n\n/**\n * Should be called to add events to contract object\n *\n * @method addEventsToContract\n * @param {Contract} contract\n * @param {Array} abi\n */\nvar addEventsToContract = function (contract) {\n    var events = contract.abi.filter(function (json) {\n        return json.type === 'event';\n    });\n\n    var All = new AllEvents(contract._eth._requestManager, events, contract.address);\n    All.attachToContract(contract);\n\n    events.map(function (json) {\n        return new SolidityEvent(contract._eth._requestManager, json, contract.address);\n    }).forEach(function (e) {\n        e.attachToContract(contract);\n    });\n};\n\n\n/**\n * Should be called to check if the contract gets properly deployed on the blockchain.\n *\n * @method checkForContractAddress\n * @param {Object} contract\n * @param {Function} callback\n * @returns {Undefined}\n */\nvar checkForContractAddress = function(contract, callback){\n    var count = 0,\n        callbackFired = false;\n\n    // wait for receipt\n    var filter = contract._eth.filter('latest', function(e){\n        if (!e && !callbackFired) {\n            count++;\n\n            // stop watching after 50 blocks (timeout)\n            if (count > 50) {\n\n                filter.stopWatching();\n                callbackFired = true;\n\n                if (callback)\n                    callback(new Error('Contract transaction couldn\\'t be found after 50 blocks'));\n                else\n                    throw new Error('Contract transaction couldn\\'t be found after 50 blocks');\n\n\n            } else {\n\n                contract._eth.getTransactionReceipt(contract.transactionHash, function(e, receipt){\n                    if(receipt && !callbackFired) {\n\n                        contract._eth.getCode(receipt.contractAddress, function(e, code){\n                            /*jshint maxcomplexity: 6 */\n\n                            if(callbackFired || !code)\n                                return;\n\n                            filter.stopWatching();\n                            callbackFired = true;\n\n                            if(code.length > 2) {\n\n                                // console.log('Contract code deployed!');\n\n                                contract.address = receipt.contractAddress;\n\n                                // attach events and methods again after we have\n                                addFunctionsToContract(contract);\n                                addEventsToContract(contract);\n\n                                // call callback for the second time\n                                if(callback)\n                                    callback(null, contract);\n\n                            } else {\n                                if(callback)\n                                    callback(new Error('The contract code couldn\\'t be stored, please check your gas amount.'));\n                                else\n                                    throw new Error('The contract code couldn\\'t be stored, please check your gas amount.');\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    });\n};\n\n/**\n * Should be called to create new ContractFactory instance\n *\n * @method ContractFactory\n * @param {Array} abi\n */\nvar ContractFactory = function (eth, abi) {\n    this.eth = eth;\n    this.abi = abi;\n\n    /**\n     * Should be called to create new contract on a blockchain\n     *\n     * @method new\n     * @param {Any} contract constructor param1 (optional)\n     * @param {Any} contract constructor param2 (optional)\n     * @param {Object} contract transaction object (required)\n     * @param {Function} callback\n     * @returns {Contract} returns contract instance\n     */\n    this.new = function () {\n        var contract = new Contract(this.eth, this.abi);\n\n        // parse arguments\n        var options = {}; // required!\n        var callback;\n\n        var args = Array.prototype.slice.call(arguments);\n        if (utils.isFunction(args[args.length - 1])) {\n            callback = args.pop();\n        }\n\n        var last = args[args.length - 1];\n        if (utils.isObject(last) && !utils.isArray(last)) {\n            options = args.pop();\n        }\n\n        var bytes = encodeConstructorParams(this.abi, args);\n        options.data += bytes;\n\n        if (callback) {\n\n            // wait for the contract address adn check if the code was deployed\n            this.eth.sendTransaction(options, function (err, hash) {\n                if (err) {\n                    callback(err);\n                } else {\n                    // add the transaction hash\n                    contract.transactionHash = hash;\n\n                    // call callback for the first time\n                    callback(null, contract);\n\n                    checkForContractAddress(contract, callback);\n                }\n            });\n        } else {\n            var hash = this.eth.sendTransaction(options);\n            // add the transaction hash\n            contract.transactionHash = hash;\n            checkForContractAddress(contract);\n        }\n\n        return contract;\n    };\n\n    this.new.getData = this.getData.bind(this);\n};\n\n/**\n * Should be called to create new ContractFactory\n *\n * @method contract\n * @param {Array} abi\n * @returns {ContractFactory} new contract factory\n */\n//var contract = function (abi) {\n    //return new ContractFactory(abi);\n//};\n\n\n\n/**\n * Should be called to get access to existing contract on a blockchain\n *\n * @method at\n * @param {Address} contract address (required)\n * @param {Function} callback {optional)\n * @returns {Contract} returns contract if no callback was passed,\n * otherwise calls callback function (err, contract)\n */\nContractFactory.prototype.at = function (address, callback) {\n    var contract = new Contract(this.eth, this.abi, address);\n\n    // this functions are not part of prototype,\n    // because we dont want to spoil the interface\n    addFunctionsToContract(contract);\n    addEventsToContract(contract);\n\n    if (callback) {\n        callback(null, contract);\n    }\n    return contract;\n};\n\n/**\n * Gets the data, which is data to deploy plus constructor params\n *\n * @method getData\n */\nContractFactory.prototype.getData = function () {\n    var options = {}; // required!\n    var args = Array.prototype.slice.call(arguments);\n\n    var last = args[args.length - 1];\n    if (utils.isObject(last) && !utils.isArray(last)) {\n        options = args.pop();\n    }\n\n    var bytes = encodeConstructorParams(this.abi, args);\n    options.data += bytes;\n\n    return options.data;\n};\n\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @param {Array} abi\n * @param {Address} contract address\n */\nvar Contract = function (eth, abi, address) {\n    this._eth = eth;\n    this.transactionHash = null;\n    this.address = address;\n    this.abi = abi;\n};\n\nmodule.exports = ContractFactory;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/contract.js\n// module id = 71\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file coder.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar f = require('./formatters');\n\nvar SolidityTypeAddress = require('./address');\nvar SolidityTypeBool = require('./bool');\nvar SolidityTypeInt = require('./int');\nvar SolidityTypeUInt = require('./uint');\nvar SolidityTypeDynamicBytes = require('./dynamicbytes');\nvar SolidityTypeString = require('./string');\nvar SolidityTypeReal = require('./real');\nvar SolidityTypeUReal = require('./ureal');\nvar SolidityTypeBytes = require('./bytes');\n\n/**\n * SolidityCoder prototype should be used to encode/decode solidity params of any type\n */\nvar SolidityCoder = function (types) {\n    this._types = types;\n};\n\n/**\n * This method should be used to transform type to SolidityType\n *\n * @method _requireType\n * @param {String} type\n * @returns {SolidityType} \n * @throws {Error} throws if no matching type is found\n */\nSolidityCoder.prototype._requireType = function (type) {\n    var solidityType = this._types.filter(function (t) {\n        return t.isType(type);\n    })[0];\n\n    if (!solidityType) {\n        throw Error('invalid solidity type!: ' + type);\n    }\n\n    return solidityType;\n};\n\n/**\n * Should be used to encode plain param\n *\n * @method encodeParam\n * @param {String} type\n * @param {Object} plain param\n * @return {String} encoded plain param\n */\nSolidityCoder.prototype.encodeParam = function (type, param) {\n    return this.encodeParams([type], [param]);\n};\n\n/**\n * Should be used to encode list of params\n *\n * @method encodeParams\n * @param {Array} types\n * @param {Array} params\n * @return {String} encoded list of params\n */\nSolidityCoder.prototype.encodeParams = function (types, params) {\n    var solidityTypes = this.getSolidityTypes(types);\n\n    var encodeds = solidityTypes.map(function (solidityType, index) {\n        return solidityType.encode(params[index], types[index]);\n    });\n\n    var dynamicOffset = solidityTypes.reduce(function (acc, solidityType, index) {\n        var staticPartLength = solidityType.staticPartLength(types[index]);\n        var roundedStaticPartLength = Math.floor((staticPartLength + 31) / 32) * 32;\n        return acc + roundedStaticPartLength;\n    }, 0);\n\n    var result = this.encodeMultiWithOffset(types, solidityTypes, encodeds, dynamicOffset); \n\n    return result;\n};\n\nSolidityCoder.prototype.encodeMultiWithOffset = function (types, solidityTypes, encodeds, dynamicOffset) {\n    var result = \"\";\n    var self = this;\n\n    var isDynamic = function (i) {\n       return solidityTypes[i].isDynamicArray(types[i]) || solidityTypes[i].isDynamicType(types[i]);\n    };\n\n    types.forEach(function (type, i) {\n        if (isDynamic(i)) {\n            result += f.formatInputInt(dynamicOffset).encode();\n            var e = self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n            dynamicOffset += e.length / 2;\n        } else {\n            // don't add length to dynamicOffset. it's already counted\n            result += self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n        }\n\n        // TODO: figure out nested arrays\n    });\n    \n    types.forEach(function (type, i) {\n        if (isDynamic(i)) {\n            var e = self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);\n            dynamicOffset += e.length / 2;\n            result += e;\n        }\n    });\n    return result;\n};\n\n// TODO: refactor whole encoding!\nSolidityCoder.prototype.encodeWithOffset = function (type, solidityType, encoded, offset) {\n    var self = this;\n    if (solidityType.isDynamicArray(type)) {\n        return (function () {\n            // offset was already set\n            var nestedName = solidityType.nestedName(type);\n            var nestedStaticPartLength = solidityType.staticPartLength(nestedName);\n            var result = encoded[0];\n            \n            (function () {\n                var previousLength = 2; // in int\n                if (solidityType.isDynamicArray(nestedName)) {\n                    for (var i = 1; i < encoded.length; i++) {\n                        previousLength += +(encoded[i - 1])[0] || 0;\n                        result += f.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();\n                    }\n                }\n            })();\n            \n            // first element is length, skip it\n            (function () {\n                for (var i = 0; i < encoded.length - 1; i++) {\n                    var additionalOffset = result / 2;\n                    result += self.encodeWithOffset(nestedName, solidityType, encoded[i + 1], offset +  additionalOffset);\n                }\n            })();\n\n            return result;\n        })();\n       \n    } else if (solidityType.isStaticArray(type)) {\n        return (function () {\n            var nestedName = solidityType.nestedName(type);\n            var nestedStaticPartLength = solidityType.staticPartLength(nestedName);\n            var result = \"\";\n\n\n            if (solidityType.isDynamicArray(nestedName)) {\n                (function () {\n                    var previousLength = 0; // in int\n                    for (var i = 0; i < encoded.length; i++) {\n                        // calculate length of previous item\n                        previousLength += +(encoded[i - 1] || [])[0] || 0; \n                        result += f.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();\n                    }\n                })();\n            }\n\n            (function () {\n                for (var i = 0; i < encoded.length; i++) {\n                    var additionalOffset = result / 2;\n                    result += self.encodeWithOffset(nestedName, solidityType, encoded[i], offset + additionalOffset);\n                }\n            })();\n\n            return result;\n        })();\n    }\n\n    return encoded;\n};\n\n/**\n * Should be used to decode bytes to plain param\n *\n * @method decodeParam\n * @param {String} type\n * @param {String} bytes\n * @return {Object} plain param\n */\nSolidityCoder.prototype.decodeParam = function (type, bytes) {\n    return this.decodeParams([type], bytes)[0];\n};\n\n/**\n * Should be used to decode list of params\n *\n * @method decodeParam\n * @param {Array} types\n * @param {String} bytes\n * @return {Array} array of plain params\n */\nSolidityCoder.prototype.decodeParams = function (types, bytes) {\n    var solidityTypes = this.getSolidityTypes(types);\n    var offsets = this.getOffsets(types, solidityTypes);\n        \n    return solidityTypes.map(function (solidityType, index) {\n        return solidityType.decode(bytes, offsets[index],  types[index], index);\n    });\n};\n\nSolidityCoder.prototype.getOffsets = function (types, solidityTypes) {\n    var lengths =  solidityTypes.map(function (solidityType, index) {\n        return solidityType.staticPartLength(types[index]);\n    });\n    \n    for (var i = 1; i < lengths.length; i++) {\n         // sum with length of previous element\n        lengths[i] += lengths[i - 1]; \n    }\n\n    return lengths.map(function (length, index) {\n        // remove the current length, so the length is sum of previous elements\n        var staticPartLength = solidityTypes[index].staticPartLength(types[index]);\n        return length - staticPartLength; \n    });\n};\n\nSolidityCoder.prototype.getSolidityTypes = function (types) {\n    var self = this;\n    return types.map(function (type) {\n        return self._requireType(type);\n    });\n};\n\nvar coder = new SolidityCoder([\n    new SolidityTypeAddress(),\n    new SolidityTypeBool(),\n    new SolidityTypeInt(),\n    new SolidityTypeUInt(),\n    new SolidityTypeDynamicBytes(),\n    new SolidityTypeBytes(),\n    new SolidityTypeString(),\n    new SolidityTypeReal(),\n    new SolidityTypeUReal()\n]);\n\nmodule.exports = coder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/coder.js\n// module id = 72\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file formatters.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar BigNumber = require('bignumber.js');\nvar utils = require('../utils/utils');\nvar c = require('../utils/config');\nvar SolidityParam = require('./param');\n\n\n/**\n * Formats input value to byte representation of int\n * If value is negative, return it's two's complement\n * If the value is floating point, round it down\n *\n * @method formatInputInt\n * @param {String|Number|BigNumber} value that needs to be formatted\n * @returns {SolidityParam}\n */\nvar formatInputInt = function (value) {\n    BigNumber.config(c.ETH_BIGNUMBER_ROUNDING_MODE);\n    var result = utils.padLeft(utils.toTwosComplement(value).round().toString(16), 64);\n    return new SolidityParam(result);\n};\n\n/**\n * Formats input bytes\n *\n * @method formatInputBytes\n * @param {String}\n * @returns {SolidityParam}\n */\nvar formatInputBytes = function (value) {\n    var result = utils.toHex(value).substr(2);\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(result);\n};\n\n/**\n * Formats input bytes\n *\n * @method formatDynamicInputBytes\n * @param {String}\n * @returns {SolidityParam}\n */\nvar formatInputDynamicBytes = function (value) {\n    var result = utils.toHex(value).substr(2);\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of string\n *\n * @method formatInputString\n * @param {String}\n * @returns {SolidityParam}\n */\nvar formatInputString = function (value) {\n    var result = utils.fromUtf8(value).substr(2);\n    var length = result.length / 2;\n    var l = Math.floor((result.length + 63) / 64);\n    result = utils.padRight(result, l * 64);\n    return new SolidityParam(formatInputInt(length).value + result);\n};\n\n/**\n * Formats input value to byte representation of bool\n *\n * @method formatInputBool\n * @param {Boolean}\n * @returns {SolidityParam}\n */\nvar formatInputBool = function (value) {\n    var result = '000000000000000000000000000000000000000000000000000000000000000' + (value ?  '1' : '0');\n    return new SolidityParam(result);\n};\n\n/**\n * Formats input value to byte representation of real\n * Values are multiplied by 2^m and encoded as integers\n *\n * @method formatInputReal\n * @param {String|Number|BigNumber}\n * @returns {SolidityParam}\n */\nvar formatInputReal = function (value) {\n    return formatInputInt(new BigNumber(value).times(new BigNumber(2).pow(128)));\n};\n\n/**\n * Check if input value is negative\n *\n * @method signedIsNegative\n * @param {String} value is hex format\n * @returns {Boolean} true if it is negative, otherwise false\n */\nvar signedIsNegative = function (value) {\n    return (new BigNumber(value.substr(0, 1), 16).toString(2).substr(0, 1)) === '1';\n};\n\n/**\n * Formats right-aligned output bytes to int\n *\n * @method formatOutputInt\n * @param {SolidityParam} param\n * @returns {BigNumber} right-aligned output bytes formatted to big number\n */\nvar formatOutputInt = function (param) {\n    var value = param.staticPart() || \"0\";\n\n    // check if it's negative number\n    // it it is, return two's complement\n    if (signedIsNegative(value)) {\n        return new BigNumber(value, 16).minus(new BigNumber('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16)).minus(1);\n    }\n    return new BigNumber(value, 16);\n};\n\n/**\n * Formats right-aligned output bytes to uint\n *\n * @method formatOutputUInt\n * @param {SolidityParam}\n * @returns {BigNumeber} right-aligned output bytes formatted to uint\n */\nvar formatOutputUInt = function (param) {\n    var value = param.staticPart() || \"0\";\n    return new BigNumber(value, 16);\n};\n\n/**\n * Formats right-aligned output bytes to real\n *\n * @method formatOutputReal\n * @param {SolidityParam}\n * @returns {BigNumber} input bytes formatted to real\n */\nvar formatOutputReal = function (param) {\n    return formatOutputInt(param).dividedBy(new BigNumber(2).pow(128)); \n};\n\n/**\n * Formats right-aligned output bytes to ureal\n *\n * @method formatOutputUReal\n * @param {SolidityParam}\n * @returns {BigNumber} input bytes formatted to ureal\n */\nvar formatOutputUReal = function (param) {\n    return formatOutputUInt(param).dividedBy(new BigNumber(2).pow(128)); \n};\n\n/**\n * Should be used to format output bool\n *\n * @method formatOutputBool\n * @param {SolidityParam}\n * @returns {Boolean} right-aligned input bytes formatted to bool\n */\nvar formatOutputBool = function (param) {\n    return param.staticPart() === '0000000000000000000000000000000000000000000000000000000000000001' ? true : false;\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputBytes\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {String} hex string\n */\nvar formatOutputBytes = function (param) {\n    return '0x' + param.staticPart();\n};\n\n/**\n * Should be used to format output bytes\n *\n * @method formatOutputDynamicBytes\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {String} hex string\n */\nvar formatOutputDynamicBytes = function (param) {\n    var length = (new BigNumber(param.dynamicPart().slice(0, 64), 16)).toNumber() * 2;\n    return '0x' + param.dynamicPart().substr(64, length);\n};\n\n/**\n * Should be used to format output string\n *\n * @method formatOutputString\n * @param {SolidityParam} left-aligned hex representation of string\n * @returns {String} ascii string\n */\nvar formatOutputString = function (param) {\n    var length = (new BigNumber(param.dynamicPart().slice(0, 64), 16)).toNumber() * 2;\n    return utils.toUtf8(param.dynamicPart().substr(64, length));\n};\n\n/**\n * Should be used to format output address\n *\n * @method formatOutputAddress\n * @param {SolidityParam} right-aligned input bytes\n * @returns {String} address\n */\nvar formatOutputAddress = function (param) {\n    var value = param.staticPart();\n    return \"0x\" + value.slice(value.length - 40, value.length);\n};\n\nmodule.exports = {\n    formatInputInt: formatInputInt,\n    formatInputBytes: formatInputBytes,\n    formatInputDynamicBytes: formatInputDynamicBytes,\n    formatInputString: formatInputString,\n    formatInputBool: formatInputBool,\n    formatInputReal: formatInputReal,\n    formatOutputInt: formatOutputInt,\n    formatOutputUInt: formatOutputUInt,\n    formatOutputReal: formatOutputReal,\n    formatOutputUReal: formatOutputUReal,\n    formatOutputBool: formatOutputBool,\n    formatOutputBytes: formatOutputBytes,\n    formatOutputDynamicBytes: formatOutputDynamicBytes,\n    formatOutputString: formatOutputString,\n    formatOutputAddress: formatOutputAddress\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/formatters.js\n// module id = 73\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file param.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../utils/utils');\n\n/**\n * SolidityParam object prototype.\n * Should be used when encoding, decoding solidity bytes\n */\nvar SolidityParam = function (value, offset) {\n    this.value = value || '';\n    this.offset = offset; // offset in bytes\n};\n\n/**\n * This method should be used to get length of params's dynamic part\n * \n * @method dynamicPartLength\n * @returns {Number} length of dynamic part (in bytes)\n */\nSolidityParam.prototype.dynamicPartLength = function () {\n    return this.dynamicPart().length / 2;\n};\n\n/**\n * This method should be used to create copy of solidity param with different offset\n *\n * @method withOffset\n * @param {Number} offset length in bytes\n * @returns {SolidityParam} new solidity param with applied offset\n */\nSolidityParam.prototype.withOffset = function (offset) {\n    return new SolidityParam(this.value, offset);\n};\n\n/**\n * This method should be used to combine solidity params together\n * eg. when appending an array\n *\n * @method combine\n * @param {SolidityParam} param with which we should combine\n * @param {SolidityParam} result of combination\n */\nSolidityParam.prototype.combine = function (param) {\n    return new SolidityParam(this.value + param.value); \n};\n\n/**\n * This method should be called to check if param has dynamic size.\n * If it has, it returns true, otherwise false\n *\n * @method isDynamic\n * @returns {Boolean}\n */\nSolidityParam.prototype.isDynamic = function () {\n    return this.offset !== undefined;\n};\n\n/**\n * This method should be called to transform offset to bytes\n *\n * @method offsetAsBytes\n * @returns {String} bytes representation of offset\n */\nSolidityParam.prototype.offsetAsBytes = function () {\n    return !this.isDynamic() ? '' : utils.padLeft(utils.toTwosComplement(this.offset).toString(16), 64);\n};\n\n/**\n * This method should be called to get static part of param\n *\n * @method staticPart\n * @returns {String} offset if it is a dynamic param, otherwise value\n */\nSolidityParam.prototype.staticPart = function () {\n    if (!this.isDynamic()) {\n        return this.value; \n    } \n    return this.offsetAsBytes();\n};\n\n/**\n * This method should be called to get dynamic part of param\n *\n * @method dynamicPart\n * @returns {String} returns a value if it is a dynamic param, otherwise empty string\n */\nSolidityParam.prototype.dynamicPart = function () {\n    return this.isDynamic() ? this.value : '';\n};\n\n/**\n * This method should be called to encode param\n *\n * @method encode\n * @returns {String}\n */\nSolidityParam.prototype.encode = function () {\n    return this.staticPart() + this.dynamicPart();\n};\n\n/**\n * This method should be called to encode array of params\n *\n * @method encodeList\n * @param {Array[SolidityParam]} params\n * @returns {String}\n */\nSolidityParam.encodeList = function (params) {\n    \n    // updating offsets\n    var totalOffset = params.length * 32;\n    var offsetParams = params.map(function (param) {\n        if (!param.isDynamic()) {\n            return param;\n        }\n        var offset = totalOffset;\n        totalOffset += param.dynamicPartLength();\n        return param.withOffset(offset);\n    });\n\n    // encode everything!\n    return offsetParams.reduce(function (result, param) {\n        return result + param.dynamicPart();\n    }, offsetParams.reduce(function (result, param) {\n        return result + param.staticPart();\n    }, ''));\n};\n\n\n\nmodule.exports = SolidityParam;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/param.js\n// module id = 74\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\n/**\n * SolidityTypeAddress is a prootype that represents address type\n * It matches:\n * address\n * address[]\n * address[4]\n * address[][]\n * address[3][]\n * address[][6][], ...\n */\nvar SolidityTypeAddress = function () {\n    this._inputFormatter = f.formatInputInt;\n    this._outputFormatter = f.formatOutputAddress;\n};\n\nSolidityTypeAddress.prototype = new SolidityType({});\nSolidityTypeAddress.prototype.constructor = SolidityTypeAddress;\n\nSolidityTypeAddress.prototype.isType = function (name) {\n    return !!name.match(/address(\\[([0-9]*)\\])?/);\n};\n\nSolidityTypeAddress.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nmodule.exports = SolidityTypeAddress;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/address.js\n// module id = 75\n// module chunks = 0","var f = require('./formatters');\nvar SolidityParam = require('./param');\n\n/**\n * SolidityType prototype is used to encode/decode solidity params of certain type\n */\nvar SolidityType = function (config) {\n    this._inputFormatter = config.inputFormatter;\n    this._outputFormatter = config.outputFormatter;\n};\n\n/**\n * Should be used to determine if this SolidityType do match given name\n *\n * @method isType\n * @param {String} name\n * @return {Bool} true if type match this SolidityType, otherwise false\n */\nSolidityType.prototype.isType = function (name) {\n    throw \"this method should be overrwritten for type \" + name;\n};\n\n/**\n * Should be used to determine what is the length of static part in given type\n *\n * @method staticPartLength\n * @param {String} name\n * @return {Number} length of static part in bytes\n */\nSolidityType.prototype.staticPartLength = function (name) {\n    throw \"this method should be overrwritten for type: \" + name;\n};\n\n/**\n * Should be used to determine if type is dynamic array\n * eg: \n * \"type[]\" => true\n * \"type[4]\" => false\n *\n * @method isDynamicArray\n * @param {String} name\n * @return {Bool} true if the type is dynamic array \n */\nSolidityType.prototype.isDynamicArray = function (name) {\n    var nestedTypes = this.nestedTypes(name);\n    return !!nestedTypes && !nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n};\n\n/**\n * Should be used to determine if type is static array\n * eg: \n * \"type[]\" => false\n * \"type[4]\" => true\n *\n * @method isStaticArray\n * @param {String} name\n * @return {Bool} true if the type is static array \n */\nSolidityType.prototype.isStaticArray = function (name) {\n    var nestedTypes = this.nestedTypes(name);\n    return !!nestedTypes && !!nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);\n};\n\n/**\n * Should return length of static array\n * eg. \n * \"int[32]\" => 32\n * \"int256[14]\" => 14\n * \"int[2][3]\" => 3\n * \"int\" => 1\n * \"int[1]\" => 1\n * \"int[]\" => 1\n *\n * @method staticArrayLength\n * @param {String} name\n * @return {Number} static array length\n */\nSolidityType.prototype.staticArrayLength = function (name) {\n    var nestedTypes = this.nestedTypes(name);\n    if (nestedTypes) {\n       return parseInt(nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g) || 1);\n    }\n    return 1;\n};\n\n/**\n * Should return nested type\n * eg.\n * \"int[32]\" => \"int\"\n * \"int256[14]\" => \"int256\"\n * \"int[2][3]\" => \"int[2]\"\n * \"int\" => \"int\"\n * \"int[]\" => \"int\"\n *\n * @method nestedName\n * @param {String} name\n * @return {String} nested name\n */\nSolidityType.prototype.nestedName = function (name) {\n    // remove last [] in name\n    var nestedTypes = this.nestedTypes(name);\n    if (!nestedTypes) {\n        return name;\n    }\n\n    return name.substr(0, name.length - nestedTypes[nestedTypes.length - 1].length);\n};\n\n/**\n * Should return true if type has dynamic size by default\n * such types are \"string\", \"bytes\"\n *\n * @method isDynamicType\n * @param {String} name\n * @return {Bool} true if is dynamic, otherwise false\n */\nSolidityType.prototype.isDynamicType = function () {\n    return false;\n};\n\n/**\n * Should return array of nested types\n * eg.\n * \"int[2][3][]\" => [\"[2]\", \"[3]\", \"[]\"]\n * \"int[] => [\"[]\"]\n * \"int\" => null\n *\n * @method nestedTypes\n * @param {String} name\n * @return {Array} array of nested types\n */\nSolidityType.prototype.nestedTypes = function (name) {\n    // return list of strings eg. \"[]\", \"[3]\", \"[]\", \"[2]\"\n    return name.match(/(\\[[0-9]*\\])/g);\n};\n\n/**\n * Should be used to encode the value\n *\n * @method encode\n * @param {Object} value \n * @param {String} name\n * @return {String} encoded value\n */\nSolidityType.prototype.encode = function (value, name) {\n    var self = this;\n    if (this.isDynamicArray(name)) {\n\n        return (function () {\n            var length = value.length;                          // in int\n            var nestedName = self.nestedName(name);\n\n            var result = [];\n            result.push(f.formatInputInt(length).encode());\n            \n            value.forEach(function (v) {\n                result.push(self.encode(v, nestedName));\n            });\n\n            return result;\n        })();\n\n    } else if (this.isStaticArray(name)) {\n\n        return (function () {\n            var length = self.staticArrayLength(name);          // in int\n            var nestedName = self.nestedName(name);\n\n            var result = [];\n            for (var i = 0; i < length; i++) {\n                result.push(self.encode(value[i], nestedName));\n            }\n\n            return result;\n        })();\n\n    }\n\n    return this._inputFormatter(value, name).encode();\n};\n\n/**\n * Should be used to decode value from bytes\n *\n * @method decode\n * @param {String} bytes\n * @param {Number} offset in bytes\n * @param {String} name type name\n * @returns {Object} decoded value\n */\nSolidityType.prototype.decode = function (bytes, offset, name) {\n    var self = this;\n\n    if (this.isDynamicArray(name)) {\n\n        return (function () {\n            var arrayOffset = parseInt('0x' + bytes.substr(offset * 2, 64)); // in bytes\n            var length = parseInt('0x' + bytes.substr(arrayOffset * 2, 64)); // in int\n            var arrayStart = arrayOffset + 32; // array starts after length; // in bytes\n\n            var nestedName = self.nestedName(name);\n            var nestedStaticPartLength = self.staticPartLength(nestedName);  // in bytes\n            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n            var result = [];\n\n            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n                result.push(self.decode(bytes, arrayStart + i, nestedName));\n            }\n\n            return result;\n        })();\n\n    } else if (this.isStaticArray(name)) {\n\n        return (function () {\n            var length = self.staticArrayLength(name);                      // in int\n            var arrayStart = offset;                                        // in bytes\n\n            var nestedName = self.nestedName(name);\n            var nestedStaticPartLength = self.staticPartLength(nestedName); // in bytes\n            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;\n            var result = [];\n\n            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {\n                result.push(self.decode(bytes, arrayStart + i, nestedName));\n            }\n\n            return result;\n        })();\n    } else if (this.isDynamicType(name)) {\n        \n        return (function () {\n            var dynamicOffset = parseInt('0x' + bytes.substr(offset * 2, 64));      // in bytes\n            var length = parseInt('0x' + bytes.substr(dynamicOffset * 2, 64));      // in bytes\n            var roundedLength = Math.floor((length + 31) / 32);                     // in int\n        \n            return self._outputFormatter(new SolidityParam(bytes.substr(dynamicOffset * 2, ( 1 + roundedLength) * 64), 0));\n        })();\n    }\n\n    var length = this.staticPartLength(name);\n    return this._outputFormatter(new SolidityParam(bytes.substr(offset * 2, length * 2)));\n};\n\nmodule.exports = SolidityType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/type.js\n// module id = 76\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\n/**\n * SolidityTypeBool is a prootype that represents bool type\n * It matches:\n * bool\n * bool[]\n * bool[4]\n * bool[][]\n * bool[3][]\n * bool[][6][], ...\n */\nvar SolidityTypeBool = function () {\n    this._inputFormatter = f.formatInputBool;\n    this._outputFormatter = f.formatOutputBool;\n};\n\nSolidityTypeBool.prototype = new SolidityType({});\nSolidityTypeBool.prototype.constructor = SolidityTypeBool;\n\nSolidityTypeBool.prototype.isType = function (name) {\n    return !!name.match(/^bool(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeBool.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nmodule.exports = SolidityTypeBool;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/bool.js\n// module id = 77\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\n/**\n * SolidityTypeInt is a prootype that represents int type\n * It matches:\n * int\n * int[]\n * int[4]\n * int[][]\n * int[3][]\n * int[][6][], ...\n * int32\n * int64[]\n * int8[4]\n * int256[][]\n * int[3][]\n * int64[][6][], ...\n */\nvar SolidityTypeInt = function () {\n    this._inputFormatter = f.formatInputInt;\n    this._outputFormatter = f.formatOutputInt;\n};\n\nSolidityTypeInt.prototype = new SolidityType({});\nSolidityTypeInt.prototype.constructor = SolidityTypeInt;\n\nSolidityTypeInt.prototype.isType = function (name) {\n    return !!name.match(/^int([0-9]*)?(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeInt.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nmodule.exports = SolidityTypeInt;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/int.js\n// module id = 78\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\n/**\n * SolidityTypeUInt is a prootype that represents uint type\n * It matches:\n * uint\n * uint[]\n * uint[4]\n * uint[][]\n * uint[3][]\n * uint[][6][], ...\n * uint32\n * uint64[]\n * uint8[4]\n * uint256[][]\n * uint[3][]\n * uint64[][6][], ...\n */\nvar SolidityTypeUInt = function () {\n    this._inputFormatter = f.formatInputInt;\n    this._outputFormatter = f.formatOutputUInt;\n};\n\nSolidityTypeUInt.prototype = new SolidityType({});\nSolidityTypeUInt.prototype.constructor = SolidityTypeUInt;\n\nSolidityTypeUInt.prototype.isType = function (name) {\n    return !!name.match(/^uint([0-9]*)?(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeUInt.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nmodule.exports = SolidityTypeUInt;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/uint.js\n// module id = 79\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\nvar SolidityTypeDynamicBytes = function () {\n    this._inputFormatter = f.formatInputDynamicBytes;\n    this._outputFormatter = f.formatOutputDynamicBytes;\n};\n\nSolidityTypeDynamicBytes.prototype = new SolidityType({});\nSolidityTypeDynamicBytes.prototype.constructor = SolidityTypeDynamicBytes;\n\nSolidityTypeDynamicBytes.prototype.isType = function (name) {\n    return !!name.match(/^bytes(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeDynamicBytes.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nSolidityTypeDynamicBytes.prototype.isDynamicType = function () {\n    return true;\n};\n\nmodule.exports = SolidityTypeDynamicBytes;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/dynamicbytes.js\n// module id = 80\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\nvar SolidityTypeString = function () {\n    this._inputFormatter = f.formatInputString;\n    this._outputFormatter = f.formatOutputString;\n};\n\nSolidityTypeString.prototype = new SolidityType({});\nSolidityTypeString.prototype.constructor = SolidityTypeString;\n\nSolidityTypeString.prototype.isType = function (name) {\n    return !!name.match(/^string(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeString.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nSolidityTypeString.prototype.isDynamicType = function () {\n    return true;\n};\n\nmodule.exports = SolidityTypeString;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/string.js\n// module id = 81\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\n/**\n * SolidityTypeReal is a prootype that represents real type\n * It matches:\n * real\n * real[]\n * real[4]\n * real[][]\n * real[3][]\n * real[][6][], ...\n * real32\n * real64[]\n * real8[4]\n * real256[][]\n * real[3][]\n * real64[][6][], ...\n */\nvar SolidityTypeReal = function () {\n    this._inputFormatter = f.formatInputReal;\n    this._outputFormatter = f.formatOutputReal;\n};\n\nSolidityTypeReal.prototype = new SolidityType({});\nSolidityTypeReal.prototype.constructor = SolidityTypeReal;\n\nSolidityTypeReal.prototype.isType = function (name) {\n    return !!name.match(/real([0-9]*)?(\\[([0-9]*)\\])?/);\n};\n\nSolidityTypeReal.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nmodule.exports = SolidityTypeReal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/real.js\n// module id = 82\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\n/**\n * SolidityTypeUReal is a prootype that represents ureal type\n * It matches:\n * ureal\n * ureal[]\n * ureal[4]\n * ureal[][]\n * ureal[3][]\n * ureal[][6][], ...\n * ureal32\n * ureal64[]\n * ureal8[4]\n * ureal256[][]\n * ureal[3][]\n * ureal64[][6][], ...\n */\nvar SolidityTypeUReal = function () {\n    this._inputFormatter = f.formatInputReal;\n    this._outputFormatter = f.formatOutputUReal;\n};\n\nSolidityTypeUReal.prototype = new SolidityType({});\nSolidityTypeUReal.prototype.constructor = SolidityTypeUReal;\n\nSolidityTypeUReal.prototype.isType = function (name) {\n    return !!name.match(/^ureal([0-9]*)?(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeUReal.prototype.staticPartLength = function (name) {\n    return 32 * this.staticArrayLength(name);\n};\n\nmodule.exports = SolidityTypeUReal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/ureal.js\n// module id = 83\n// module chunks = 0","var f = require('./formatters');\nvar SolidityType = require('./type');\n\n/**\n * SolidityTypeBytes is a prootype that represents bytes type\n * It matches:\n * bytes\n * bytes[]\n * bytes[4]\n * bytes[][]\n * bytes[3][]\n * bytes[][6][], ...\n * bytes32\n * bytes64[]\n * bytes8[4]\n * bytes256[][]\n * bytes[3][]\n * bytes64[][6][], ...\n */\nvar SolidityTypeBytes = function () {\n    this._inputFormatter = f.formatInputBytes;\n    this._outputFormatter = f.formatOutputBytes;\n};\n\nSolidityTypeBytes.prototype = new SolidityType({});\nSolidityTypeBytes.prototype.constructor = SolidityTypeBytes;\n\nSolidityTypeBytes.prototype.isType = function (name) {\n    return !!name.match(/^bytes([0-9]{1,})(\\[([0-9]*)\\])*$/);\n};\n\nSolidityTypeBytes.prototype.staticPartLength = function (name) {\n    var matches = name.match(/^bytes([0-9]*)/);\n    var size = parseInt(matches[1]);\n    return size * this.staticArrayLength(name);\n};\n\nmodule.exports = SolidityTypeBytes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/solidity/bytes.js\n// module id = 84\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file event.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\n\nvar utils = require('../utils/utils');\nvar coder = require('../solidity/coder');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\nvar Filter = require('./filter');\nvar watches = require('./methods/watches');\n\n/**\n * This prototype should be used to create event filters\n */\nvar SolidityEvent = function (requestManager, json, address) {\n    this._requestManager = requestManager;\n    this._params = json.inputs;\n    this._name = utils.transformToFullName(json);\n    this._address = address;\n    this._anonymous = json.anonymous;\n};\n\n/**\n * Should be used to get filtered param types\n *\n * @method types\n * @param {Bool} decide if returned typed should be indexed\n * @return {Array} array of types\n */\nSolidityEvent.prototype.types = function (indexed) {\n    return this._params.filter(function (i) {\n        return i.indexed === indexed;\n    }).map(function (i) {\n        return i.type;\n    });\n};\n\n/**\n * Should be used to get event display name\n *\n * @method displayName\n * @return {String} event display name\n */\nSolidityEvent.prototype.displayName = function () {\n    return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get event type name\n *\n * @method typeName\n * @return {String} event type name\n */\nSolidityEvent.prototype.typeName = function () {\n    return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be used to get event signature\n *\n * @method signature\n * @return {String} event signature\n */\nSolidityEvent.prototype.signature = function () {\n    return sha3(this._name);\n};\n\n/**\n * Should be used to encode indexed params and options to one final object\n * \n * @method encode\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nSolidityEvent.prototype.encode = function (indexed, options) {\n    indexed = indexed || {};\n    options = options || {};\n    var result = {};\n\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n\n    result.topics = [];\n\n    result.address = this._address;\n    if (!this._anonymous) {\n        result.topics.push('0x' + this.signature());\n    }\n\n    var indexedTopics = this._params.filter(function (i) {\n        return i.indexed === true;\n    }).map(function (i) {\n        var value = indexed[i.name];\n        if (value === undefined || value === null) {\n            return null;\n        }\n        \n        if (utils.isArray(value)) {\n            return value.map(function (v) {\n                return '0x' + coder.encodeParam(i.type, v);\n            });\n        }\n        return '0x' + coder.encodeParam(i.type, value);\n    });\n\n    result.topics = result.topics.concat(indexedTopics);\n\n    return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method decode\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nSolidityEvent.prototype.decode = function (data) {\n \n    data.data = data.data || '';\n    data.topics = data.topics || [];\n\n    var argTopics = this._anonymous ? data.topics : data.topics.slice(1);\n    var indexedData = argTopics.map(function (topics) { return topics.slice(2); }).join(\"\");\n    var indexedParams = coder.decodeParams(this.types(true), indexedData); \n\n    var notIndexedData = data.data.slice(2);\n    var notIndexedParams = coder.decodeParams(this.types(false), notIndexedData);\n    \n    var result = formatters.outputLogFormatter(data);\n    result.event = this.displayName();\n    result.address = data.address;\n\n    result.args = this._params.reduce(function (acc, current) {\n        acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();\n        return acc;\n    }, {});\n\n    delete result.data;\n    delete result.topics;\n\n    return result;\n};\n\n/**\n * Should be used to create new filter object from event\n *\n * @method execute\n * @param {Object} indexed\n * @param {Object} options\n * @return {Object} filter object\n */\nSolidityEvent.prototype.execute = function (indexed, options, callback) {\n\n    if (utils.isFunction(arguments[arguments.length - 1])) {\n        callback = arguments[arguments.length - 1];\n        if(arguments.length === 2)\n            options = null;\n        if(arguments.length === 1) {\n            options = null;\n            indexed = {};\n        }\n    }\n    \n    var o = this.encode(indexed, options);\n    var formatter = this.decode.bind(this);\n    return new Filter(this._requestManager, o, watches.eth(), formatter, callback);\n};\n\n/**\n * Should be used to attach event to contract object\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityEvent.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    var displayName = this.displayName();\n    if (!contract[displayName]) {\n        contract[displayName] = execute;\n    }\n    contract[displayName][this.typeName()] = this.execute.bind(this, contract);\n};\n\nmodule.exports = SolidityEvent;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/event.js\n// module id = 85\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file filter.js\n * @authors:\n *   Jeffrey Wilcke <jeff@ethdev.com>\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n *   Gav Wood <g@ethdev.com>\n * @date 2014\n */\n\nvar formatters = require('./formatters');\nvar utils = require('../utils/utils');\n\n/**\n* Converts a given topic to a hex string, but also allows null values.\n*\n* @param {Mixed} value\n* @return {String}\n*/\nvar toTopic = function(value){\n\n    if(value === null || typeof value === 'undefined')\n        return null;\n\n    value = String(value);\n\n    if(value.indexOf('0x') === 0)\n        return value;\n    else\n        return utils.fromUtf8(value);\n};\n\n/// This method should be called on options object, to verify deprecated properties && lazy load dynamic ones\n/// @param should be string or object\n/// @returns options string or object\nvar getOptions = function (options) {\n\n    if (utils.isString(options)) {\n        return options;\n    }\n\n    options = options || {};\n\n    // make sure topics, get converted to hex\n    options.topics = options.topics || [];\n    options.topics = options.topics.map(function(topic){\n        return (utils.isArray(topic)) ? topic.map(toTopic) : toTopic(topic);\n    });\n\n    return {\n        topics: options.topics,\n        from: options.from,\n        to: options.to,\n        address: options.address,\n        fromBlock: formatters.inputBlockNumberFormatter(options.fromBlock),\n        toBlock: formatters.inputBlockNumberFormatter(options.toBlock)\n    };\n};\n\n/**\nAdds the callback and sets up the methods, to iterate over the results.\n\n@method getLogsAtStart\n@param {Object} self\n@param {funciton}\n*/\nvar getLogsAtStart = function(self, callback){\n    // call getFilterLogs for the first watch callback start\n    if (!utils.isString(self.options)) {\n        self.get(function (err, messages) {\n            // don't send all the responses to all the watches again... just to self one\n            if (err) {\n                callback(err);\n            }\n\n            if(utils.isArray(messages)) {\n                messages.forEach(function (message) {\n                    callback(null, message);\n                });\n            }\n        });\n    }\n};\n\n/**\nAdds the callback and sets up the methods, to iterate over the results.\n\n@method pollFilter\n@param {Object} self\n*/\nvar pollFilter = function(self) {\n\n    var onMessage = function (error, messages) {\n        if (error) {\n            return self.callbacks.forEach(function (callback) {\n                callback(error);\n            });\n        }\n\n        if(utils.isArray(messages)) {\n            messages.forEach(function (message) {\n                message = self.formatter ? self.formatter(message) : message;\n                self.callbacks.forEach(function (callback) {\n                    callback(null, message);\n                });\n            });\n        }\n    };\n\n    self.requestManager.startPolling({\n        method: self.implementation.poll.call,\n        params: [self.filterId],\n    }, self.filterId, onMessage, self.stopWatching.bind(self));\n\n};\n\nvar Filter = function (requestManager, options, methods, formatter, callback) {\n    var self = this;\n    var implementation = {};\n    methods.forEach(function (method) {\n        method.setRequestManager(requestManager);\n        method.attachToObject(implementation);\n    });\n    this.requestManager = requestManager;\n    this.options = getOptions(options);\n    this.implementation = implementation;\n    this.filterId = null;\n    this.callbacks = [];\n    this.getLogsCallbacks = [];\n    this.pollFilters = [];\n    this.formatter = formatter;\n    this.implementation.newFilter(this.options, function(error, id){\n        if(error) {\n            self.callbacks.forEach(function(cb){\n                cb(error);\n            });\n        } else {\n            self.filterId = id;\n\n            // check if there are get pending callbacks as a consequence\n            // of calling get() with filterId unassigned.\n            self.getLogsCallbacks.forEach(function (cb){\n                self.get(cb);\n            });\n            self.getLogsCallbacks = [];\n\n            // get filter logs for the already existing watch calls\n            self.callbacks.forEach(function(cb){\n                getLogsAtStart(self, cb);\n            });\n            if(self.callbacks.length > 0)\n                pollFilter(self);\n\n            // start to watch immediately\n            if(typeof callback === 'function') {\n                return self.watch(callback);\n            }\n        }\n    });\n\n    return this;\n};\n\nFilter.prototype.watch = function (callback) {\n    this.callbacks.push(callback);\n\n    if(this.filterId) {\n        getLogsAtStart(this, callback);\n        pollFilter(this);\n    }\n\n    return this;\n};\n\nFilter.prototype.stopWatching = function () {\n    this.requestManager.stopPolling(this.filterId);\n    // remove filter async\n    this.implementation.uninstallFilter(this.filterId, function(){});\n    this.callbacks = [];\n};\n\nFilter.prototype.get = function (callback) {\n    var self = this;\n    if (utils.isFunction(callback)) {\n        if (this.filterId === null) {\n            // If filterId is not set yet, call it back\n            // when newFilter() assigns it.\n            this.getLogsCallbacks.push(callback);\n        } else {\n            this.implementation.getLogs(this.filterId, function(err, res){\n                if (err) {\n                    callback(err);\n                } else {\n                    callback(null, res.map(function (log) {\n                        return self.formatter ? self.formatter(log) : log;\n                    }));\n                }\n            });\n        }\n    } else {\n        if (this.filterId === null) {\n            throw new Error('Filter ID Error: filter().get() can\\'t be chained synchronous, please provide a callback for the get() method.');\n        }\n        var logs = this.implementation.getLogs(this.filterId);\n        return logs.map(function (log) {\n            return self.formatter ? self.formatter(log) : log;\n        });\n    }\n\n    return this;\n};\n\nmodule.exports = Filter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/filter.js\n// module id = 86\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file watches.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Method = require('../method');\n\n/// @returns an array of objects describing web3.eth.filter api methods\nvar eth = function () {\n    var newFilterCall = function (args) {\n        var type = args[0];\n\n        switch(type) {\n            case 'latest':\n                args.shift();\n                this.params = 0;\n                return 'eth_newBlockFilter';\n            case 'pending':\n                args.shift();\n                this.params = 0;\n                return 'eth_newPendingTransactionFilter';\n            default:\n                return 'eth_newFilter';\n        }\n    };\n\n    var newFilter = new Method({\n        name: 'newFilter',\n        call: newFilterCall,\n        params: 1\n    });\n\n    var uninstallFilter = new Method({\n        name: 'uninstallFilter',\n        call: 'eth_uninstallFilter',\n        params: 1\n    });\n\n    var getLogs = new Method({\n        name: 'getLogs',\n        call: 'eth_getFilterLogs',\n        params: 1\n    });\n\n    var poll = new Method({\n        name: 'poll',\n        call: 'eth_getFilterChanges',\n        params: 1\n    });\n\n    return [\n        newFilter,\n        uninstallFilter,\n        getLogs,\n        poll\n    ];\n};\n\n/// @returns an array of objects describing web3.shh.watch api methods\nvar shh = function () {\n    var newFilter = new Method({\n        name: 'newFilter',\n        call: 'shh_newFilter',\n        params: 1\n    });\n\n    var uninstallFilter = new Method({\n        name: 'uninstallFilter',\n        call: 'shh_uninstallFilter',\n        params: 1\n    });\n\n    var getLogs = new Method({\n        name: 'getLogs',\n        call: 'shh_getMessages',\n        params: 1\n    });\n\n    var poll = new Method({\n        name: 'poll',\n        call: 'shh_getFilterChanges',\n        params: 1\n    });\n\n    return [\n        newFilter,\n        uninstallFilter,\n        getLogs,\n        poll\n    ];\n};\n\nmodule.exports = {\n    eth: eth,\n    shh: shh\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/methods/watches.js\n// module id = 87\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file function.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar coder = require('../solidity/coder');\nvar utils = require('../utils/utils');\nvar formatters = require('./formatters');\nvar sha3 = require('../utils/sha3');\n\n/**\n * This prototype should be used to call/sendTransaction to solidity functions\n */\nvar SolidityFunction = function (eth, json, address) {\n    this._eth = eth;\n    this._inputTypes = json.inputs.map(function (i) {\n        return i.type;\n    });\n    this._outputTypes = json.outputs.map(function (i) {\n        return i.type;\n    });\n    this._constant = json.constant;\n    this._name = utils.transformToFullName(json);\n    this._address = address;\n};\n\nSolidityFunction.prototype.extractCallback = function (args) {\n    if (utils.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\nSolidityFunction.prototype.extractDefaultBlock = function (args) {\n    if (args.length > this._inputTypes.length && !utils.isObject(args[args.length -1])) {\n        return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!\n    }\n};\n\n/**\n * Should be used to create payload from arguments\n *\n * @method toPayload\n * @param {Array} solidity function params\n * @param {Object} optional payload options\n */\nSolidityFunction.prototype.toPayload = function (args) {\n    var options = {};\n    if (args.length > this._inputTypes.length && utils.isObject(args[args.length -1])) {\n        options = args[args.length - 1];\n    }\n    options.to = this._address;\n    options.data = '0x' + this.signature() + coder.encodeParams(this._inputTypes, args);\n    return options;\n};\n\n/**\n * Should be used to get function signature\n *\n * @method signature\n * @return {String} function signature\n */\nSolidityFunction.prototype.signature = function () {\n    return sha3(this._name).slice(0, 8);\n};\n\n\nSolidityFunction.prototype.unpackOutput = function (output) {\n    if (!output) {\n        return;\n    }\n\n    output = output.length >= 2 ? output.slice(2) : output;\n    var result = coder.decodeParams(this._outputTypes, output);\n    return result.length === 1 ? result[0] : result;\n};\n\n/**\n * Calls a contract function.\n *\n * @method call\n * @param {...Object} Contract function arguments\n * @param {function} If the last argument is a function, the contract function\n *   call will be asynchronous, and the callback will be passed the\n *   error and result.\n * @return {String} output bytes\n */\nSolidityFunction.prototype.call = function () {\n    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n    var callback = this.extractCallback(args);\n    var defaultBlock = this.extractDefaultBlock(args);\n    var payload = this.toPayload(args);\n\n\n    if (!callback) {\n        var output = this._eth.call(payload, defaultBlock);\n        return this.unpackOutput(output);\n    } \n        \n    var self = this;\n    this._eth.call(payload, defaultBlock, function (error, output) {\n        callback(error, self.unpackOutput(output));\n    });\n};\n\n/**\n * Should be used to sendTransaction to solidity function\n *\n * @method sendTransaction\n */\nSolidityFunction.prototype.sendTransaction = function () {\n    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n\n    if (!callback) {\n        return this._eth.sendTransaction(payload);\n    }\n\n    this._eth.sendTransaction(payload, callback);\n};\n\n/**\n * Should be used to estimateGas of solidity function\n *\n * @method estimateGas\n */\nSolidityFunction.prototype.estimateGas = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n\n    if (!callback) {\n        return this._eth.estimateGas(payload);\n    }\n\n    this._eth.estimateGas(payload, callback);\n};\n\n/**\n * Return the encoded data of the call\n *\n * @method getData\n * @return {String} the encoded data\n */\nSolidityFunction.prototype.getData = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var payload = this.toPayload(args);\n\n    return payload.data;\n};\n\n/**\n * Should be used to get function display name\n *\n * @method displayName\n * @return {String} display name of the function\n */\nSolidityFunction.prototype.displayName = function () {\n    return utils.extractDisplayName(this._name);\n};\n\n/**\n * Should be used to get function type name\n *\n * @method typeName\n * @return {String} type name of the function\n */\nSolidityFunction.prototype.typeName = function () {\n    return utils.extractTypeName(this._name);\n};\n\n/**\n * Should be called to get rpc requests from solidity function\n *\n * @method request\n * @returns {Object}\n */\nSolidityFunction.prototype.request = function () {\n    var args = Array.prototype.slice.call(arguments);\n    var callback = this.extractCallback(args);\n    var payload = this.toPayload(args);\n    var format = this.unpackOutput.bind(this);\n    \n    return {\n        method: this._constant ? 'eth_call' : 'eth_sendTransaction',\n        callback: callback,\n        params: [payload], \n        format: format\n    };\n};\n\n/**\n * Should be called to execute function\n *\n * @method execute\n */\nSolidityFunction.prototype.execute = function () {\n    var transaction = !this._constant;\n\n    // send transaction\n    if (transaction) {\n        return this.sendTransaction.apply(this, Array.prototype.slice.call(arguments));\n    }\n\n    // call\n    return this.call.apply(this, Array.prototype.slice.call(arguments));\n};\n\n/**\n * Should be called to attach function to contract\n *\n * @method attachToContract\n * @param {Contract}\n */\nSolidityFunction.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    execute.request = this.request.bind(this);\n    execute.call = this.call.bind(this);\n    execute.sendTransaction = this.sendTransaction.bind(this);\n    execute.estimateGas = this.estimateGas.bind(this);\n    execute.getData = this.getData.bind(this);\n    var displayName = this.displayName();\n    if (!contract[displayName]) {\n        contract[displayName] = execute;\n    }\n    contract[displayName][this.typeName()] = execute; // circular!!!!\n};\n\nmodule.exports = SolidityFunction;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/function.js\n// module id = 88\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file allevents.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2014\n */\n\nvar sha3 = require('../utils/sha3');\nvar SolidityEvent = require('./event');\nvar formatters = require('./formatters');\nvar utils = require('../utils/utils');\nvar Filter = require('./filter');\nvar watches = require('./methods/watches');\n\nvar AllSolidityEvents = function (requestManager, json, address) {\n    this._requestManager = requestManager;\n    this._json = json;\n    this._address = address;\n};\n\nAllSolidityEvents.prototype.encode = function (options) {\n    options = options || {};\n    var result = {};\n\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n\n    result.address = this._address;\n\n    return result;\n};\n\nAllSolidityEvents.prototype.decode = function (data) {\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n\n    var eventTopic = data.topics[0].slice(2);\n    var match = this._json.filter(function (j) {\n        return eventTopic === sha3(utils.transformToFullName(j));\n    })[0];\n\n    if (!match) { // cannot find matching event?\n        console.warn('cannot find event for log');\n        return data;\n    }\n\n    var event = new SolidityEvent(this._requestManager, match, this._address);\n    return event.decode(data);\n};\n\nAllSolidityEvents.prototype.execute = function (options, callback) {\n\n    if (utils.isFunction(arguments[arguments.length - 1])) {\n        callback = arguments[arguments.length - 1];\n        if(arguments.length === 1)\n            options = null;\n    }\n\n    var o = this.encode(options);\n    var formatter = this.decode.bind(this);\n    return new Filter(this._requestManager, o, watches.eth(), formatter, callback);\n};\n\nAllSolidityEvents.prototype.attachToContract = function (contract) {\n    var execute = this.execute.bind(this);\n    contract.allEvents = execute;\n};\n\nmodule.exports = AllSolidityEvents;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/allevents.js\n// module id = 89\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file syncing.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\nvar formatters = require('./formatters');\nvar utils = require('../utils/utils');\n\nvar count = 1;\n\n/**\nAdds the callback and sets up the methods, to iterate over the results.\n\n@method pollSyncing\n@param {Object} self\n*/\nvar pollSyncing = function(self) {\n\n    var onMessage = function (error, sync) {\n        if (error) {\n            return self.callbacks.forEach(function (callback) {\n                callback(error);\n            });\n        }\n\n        if(utils.isObject(sync) && sync.startingBlock)\n            sync = formatters.outputSyncingFormatter(sync);\n\n        self.callbacks.forEach(function (callback) {\n            if (self.lastSyncState !== sync) {\n                \n                // call the callback with true first so the app can stop anything, before receiving the sync data\n                if(!self.lastSyncState && utils.isObject(sync))\n                    callback(null, true);\n                \n                // call on the next CPU cycle, so the actions of the sync stop can be processes first\n                setTimeout(function() {\n                    callback(null, sync);\n                }, 0);\n                \n                self.lastSyncState = sync;\n            }\n        });\n    };\n\n    self.requestManager.startPolling({\n        method: 'eth_syncing',\n        params: [],\n    }, self.pollId, onMessage, self.stopWatching.bind(self));\n\n};\n\nvar IsSyncing = function (requestManager, callback) {\n    this.requestManager = requestManager;\n    this.pollId = 'syncPoll_'+ count++;\n    this.callbacks = [];\n    this.addCallback(callback);\n    this.lastSyncState = false;\n    pollSyncing(this);\n\n    return this;\n};\n\nIsSyncing.prototype.addCallback = function (callback) {\n    if(callback)\n        this.callbacks.push(callback);\n    return this;\n};\n\nIsSyncing.prototype.stopWatching = function () {\n    this.requestManager.stopPolling(this.pollId);\n    this.callbacks = [];\n};\n\nmodule.exports = IsSyncing;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/syncing.js\n// module id = 90\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file namereg.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar globalRegistrarAbi = require('../contracts/GlobalRegistrar.json');\nvar icapRegistrarAbi= require('../contracts/ICAPRegistrar.json');\n\nvar globalNameregAddress = '0xc6d9d2cd449a754c494264e1809c50e34d64562b';\nvar icapNameregAddress = '0xa1a111bc074c9cfa781f0c38e63bd51c91b8af00';\n\nmodule.exports = {\n    global: {\n        abi: globalRegistrarAbi,\n        address: globalNameregAddress\n    },\n    icap: {\n        abi: icapRegistrarAbi,\n        address: icapNameregAddress\n    }\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/namereg.js\n// module id = 91\n// module chunks = 0","module.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"name\",\"outputs\":[{\"name\":\"o_name\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"content\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"reserve\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"subRegistrar\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_registrar\",\"type\":\"address\"}],\"name\":\"setSubRegistrar\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Registrar\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_a\",\"type\":\"address\"},{\"name\":\"_primary\",\"type\":\"bool\"}],\"name\":\"setAddress\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_content\",\"type\":\"bytes32\"}],\"name\":\"setContent\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"disown\",\"outputs\":[],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_winner\",\"type\":\"address\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_bidder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"PrimaryChanged\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/contracts/GlobalRegistrar.json\n// module id = 92\n// module chunks = 0","module.exports = [{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_refund\",\"type\":\"address\"}],\"name\":\"disown\",\"outputs\":[],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"addr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"reserve\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"},{\"name\":\"_a\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"bytes32\"}],\"name\":\"Changed\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/contracts/ICAPRegistrar.json\n// module id = 93\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file transfer.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Iban = require('./iban');\nvar exchangeAbi = require('../contracts/SmartExchange.json');\n\n/**\n * Should be used to make Iban transfer\n *\n * @method transfer\n * @param {String} from\n * @param {String} to iban\n * @param {Value} value to be tranfered\n * @param {Function} callback, callback\n */\nvar transfer = function (eth, from, to, value, callback) {\n    var iban = new Iban(to); \n    if (!iban.isValid()) {\n        throw new Error('invalid iban address');\n    }\n\n    if (iban.isDirect()) {\n        return transferToAddress(eth, from, iban.address(), value, callback);\n    }\n    \n    if (!callback) {\n        var address = eth.icapNamereg().addr(iban.institution());\n        return deposit(eth, from, address, value, iban.client());\n    }\n\n    eth.icapNamereg().addr(iban.institution(), function (err, address) {\n        return deposit(eth, from, address, value, iban.client(), callback);\n    });\n    \n};\n\n/**\n * Should be used to transfer funds to certain address\n *\n * @method transferToAddress\n * @param {String} from\n * @param {String} to\n * @param {Value} value to be tranfered\n * @param {Function} callback, callback\n */\nvar transferToAddress = function (eth, from, to, value, callback) {\n    return eth.sendTransaction({\n        address: to,\n        from: from,\n        value: value\n    }, callback);\n};\n\n/**\n * Should be used to deposit funds to generic Exchange contract (must implement deposit(bytes32) method!)\n *\n * @method deposit\n * @param {String} from\n * @param {String} to\n * @param {Value} value to be transfered\n * @param {String} client unique identifier\n * @param {Function} callback, callback\n */\nvar deposit = function (eth, from, to, value, client, callback) {\n    var abi = exchangeAbi;\n    return eth.contract(abi).at(to).deposit(client, {\n        from: from,\n        value: value\n    }, callback);\n};\n\nmodule.exports = transfer;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/transfer.js\n// module id = 94\n// module chunks = 0","module.exports = [{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"bytes32\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"bytes32\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"indirectId\",\"type\":\"bytes32\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"icapTransfer\",\"outputs\":[],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AnonymousDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"indirectId\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"IcapTransfer\",\"type\":\"event\"}]\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/contracts/SmartExchange.json\n// module id = 95\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file db.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Method = require('../method');\n\nvar DB = function (web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n    \n    methods().forEach(function(method) { \n        method.attachToObject(self);\n        method.setRequestManager(web3._requestManager);\n    });\n};\n\nvar methods = function () {\n    var putString = new Method({\n        name: 'putString',\n        call: 'db_putString',\n        params: 3\n    });\n\n    var getString = new Method({\n        name: 'getString',\n        call: 'db_getString',\n        params: 2\n    });\n\n    var putHex = new Method({\n        name: 'putHex',\n        call: 'db_putHex',\n        params: 3\n    });\n\n    var getHex = new Method({\n        name: 'getHex',\n        call: 'db_getHex',\n        params: 2\n    });\n\n    return [\n        putString, getString, putHex, getHex\n    ];\n};\n\nmodule.exports = DB;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/methods/db.js\n// module id = 96\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file shh.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Method = require('../method');\nvar formatters = require('../formatters');\nvar Filter = require('../filter');\nvar watches = require('./watches');\n\nvar Shh = function (web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) { \n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n};\n\nShh.prototype.filter = function (fil, callback) {\n    return new Filter(this._requestManager, fil, watches.shh(), formatters.outputPostFormatter, callback);\n};\n\nvar methods = function () { \n\n    var post = new Method({\n        name: 'post', \n        call: 'shh_post', \n        params: 1,\n        inputFormatter: [formatters.inputPostFormatter]\n    });\n\n    var newIdentity = new Method({\n        name: 'newIdentity',\n        call: 'shh_newIdentity',\n        params: 0\n    });\n\n    var hasIdentity = new Method({\n        name: 'hasIdentity',\n        call: 'shh_hasIdentity',\n        params: 1\n    });\n\n    var newGroup = new Method({\n        name: 'newGroup',\n        call: 'shh_newGroup',\n        params: 0\n    });\n\n    var addToGroup = new Method({\n        name: 'addToGroup',\n        call: 'shh_addToGroup',\n        params: 0\n    });\n\n    return [\n        post,\n        newIdentity,\n        hasIdentity,\n        newGroup,\n        addToGroup\n    ];\n};\n\nmodule.exports = Shh;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/methods/shh.js\n// module id = 97\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file eth.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar utils = require('../../utils/utils');\nvar Property = require('../property');\n\nvar Net = function (web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    properties().forEach(function(p) { \n        p.attachToObject(self);\n        p.setRequestManager(web3._requestManager);\n    });\n};\n\n/// @returns an array of objects describing web3.eth api properties\nvar properties = function () {\n    return [\n        new Property({\n            name: 'listening',\n            getter: 'net_listening'\n        }),\n        new Property({\n            name: 'peerCount',\n            getter: 'net_peerCount',\n            outputFormatter: utils.toDecimal\n        })\n    ];\n};\n\nmodule.exports = Net;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/methods/net.js\n// module id = 98\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file eth.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @author Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar Method = require('../method');\nvar Property = require('../property');\n\nfunction Personal(web3) {\n    this._requestManager = web3._requestManager;\n\n    var self = this;\n\n    methods().forEach(function(method) {\n        method.attachToObject(self);\n        method.setRequestManager(self._requestManager);\n    });\n\n    properties().forEach(function(p) {\n        p.attachToObject(self);\n        p.setRequestManager(self._requestManager);\n    });\n}\n\nvar methods = function () {\n    var newAccount = new Method({\n        name: 'newAccount',\n        call: 'personal_newAccount',\n        params: 1,\n        inputFormatter: [null]\n    });\n\n    var unlockAccount = new Method({\n        name: 'unlockAccount',\n        call: 'personal_unlockAccount',\n        params: 3,\n        inputFormatter: [null, null, null]\n    });\n\n    return [\n        newAccount,\n        unlockAccount\n    ];\n};\n\nvar properties = function () {\n    return [\n        new Property({\n            name: 'listAccounts',\n            getter: 'personal_listAccounts'\n        })\n    ];\n};\n\n\nmodule.exports = Personal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/methods/personal.js\n// module id = 99\n// module chunks = 0","\n\nvar Settings = function () {\n    this.defaultBlock = 'latest';\n    this.defaultAccount = undefined;\n};\n\nmodule.exports = Settings;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/settings.js\n// module id = 100\n// module chunks = 0","module.exports = {\"version\":\"0.15.3\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/version.json\n// module id = 101\n// module chunks = 0","var formatters = require('./formatters');\nvar utils = require('./../utils/utils');\nvar Method = require('./method');\nvar Property = require('./property');\n\n// TODO: refactor, so the input params are not altered.\n// it's necessary to make same 'extension' work with multiple providers\nvar extend = function (web3) {\n    /* jshint maxcomplexity:5 */\n    var ex = function (extension) {\n\n        var extendedObject;\n        if (extension.property) {\n            if (!web3[extension.property]) {\n                web3[extension.property] = {};\n            }\n            extendedObject = web3[extension.property];\n        } else {\n            extendedObject = web3;\n        }\n\n        if (extension.methods) {\n            extension.methods.forEach(function (method) {\n                method.attachToObject(extendedObject);\n                method.setRequestManager(web3._requestManager);\n            });\n        }\n\n        if (extension.properties) {\n            extension.properties.forEach(function (property) {\n                property.attachToObject(extendedObject);\n                property.setRequestManager(web3._requestManager);\n            });\n        }\n    };\n\n    ex.formatters = formatters; \n    ex.utils = utils;\n    ex.Method = Method;\n    ex.Property = Property;\n\n    return ex;\n};\n\n\n\nmodule.exports = extend;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/extend.js\n// module id = 102\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** \n * @file batch.js\n * @author Marek Kotewicz <marek@ethdev.com>\n * @date 2015\n */\n\nvar Jsonrpc = require('./jsonrpc');\nvar errors = require('./errors');\n\nvar Batch = function (web3) {\n    this.requestManager = web3._requestManager;\n    this.requests = [];\n};\n\n/**\n * Should be called to add create new request to batch request\n *\n * @method add\n * @param {Object} jsonrpc requet object\n */\nBatch.prototype.add = function (request) {\n    this.requests.push(request);\n};\n\n/**\n * Should be called to execute batch request\n *\n * @method execute\n */\nBatch.prototype.execute = function () {\n    var requests = this.requests;\n    this.requestManager.sendBatch(requests, function (err, results) {\n        results = results || [];\n        requests.map(function (request, index) {\n            return results[index] || {};\n        }).forEach(function (result, index) {\n            if (requests[index].callback) {\n\n                if (!Jsonrpc.getInstance().isValidResponse(result)) {\n                    return requests[index].callback(errors.InvalidResponse(result));\n                }\n\n                requests[index].callback(null, (requests[index].format ? requests[index].format(result.result) : result.result));\n            }\n        });\n    }); \n};\n\nmodule.exports = Batch;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/batch.js\n// module id = 103\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file httpprovider.js\n * @authors:\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar errors = require('./errors');\n\n// workaround to use httpprovider in different envs\nvar XMLHttpRequest; // jshint ignore: line\n\n// meteor server environment\nif (typeof Meteor !== 'undefined' && Meteor.isServer) { // jshint ignore: line\n    XMLHttpRequest = Npm.require('xmlhttprequest').XMLHttpRequest; // jshint ignore: line\n\n// browser\n} else if (typeof window !== 'undefined' && window.XMLHttpRequest) {\n    XMLHttpRequest = window.XMLHttpRequest; // jshint ignore: line\n\n// node\n} else {\n    XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest; // jshint ignore: line\n}\n\n/**\n * HttpProvider should be used to send rpc calls over http\n */\nvar HttpProvider = function (host) {\n    this.host = host || 'http://localhost:8545';\n};\n\n/**\n * Should be called to prepare new XMLHttpRequest\n *\n * @method prepareRequest\n * @param {Boolean} true if request should be async\n * @return {XMLHttpRequest} object\n */\nHttpProvider.prototype.prepareRequest = function (async) {\n    var request = new XMLHttpRequest();\n    request.open('POST', this.host, async);\n    request.setRequestHeader('Content-Type','application/json');\n    return request;\n};\n\n/**\n * Should be called to make sync request\n *\n * @method send\n * @param {Object} payload\n * @return {Object} result\n */\nHttpProvider.prototype.send = function (payload) {\n    var request = this.prepareRequest(false);\n\n    try {\n        request.send(JSON.stringify(payload));\n    } catch(error) {\n        throw errors.InvalidConnection(this.host);\n    }\n\n    var result = request.responseText;\n\n    try {\n        result = JSON.parse(result);\n    } catch(e) {\n        throw errors.InvalidResponse(request.responseText);                \n    }\n\n    return result;\n};\n\n/**\n * Should be used to make async request\n *\n * @method sendAsync\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\nHttpProvider.prototype.sendAsync = function (payload, callback) {\n    var request = this.prepareRequest(true); \n\n    request.onreadystatechange = function() {\n        if (request.readyState === 4) {\n            var result = request.responseText;\n            var error = null;\n\n            try {\n                result = JSON.parse(result);\n            } catch(e) {\n                error = errors.InvalidResponse(request.responseText);                \n            }\n\n            callback(error, result);\n        }\n    };\n    \n    try {\n        request.send(JSON.stringify(payload));\n    } catch(error) {\n        callback(errors.InvalidConnection(this.host));\n    }\n};\n\n/**\n * Synchronously tries to make Http request\n *\n * @method isConnected\n * @return {Boolean} returns true if request haven't failed. Otherwise false\n */\nHttpProvider.prototype.isConnected = function() {\n    try {\n        this.send({\n            id: 9999999999,\n            jsonrpc: '2.0',\n            method: 'net_listening',\n            params: []\n        });\n        return true;\n    } catch(e) {\n        return false;\n    }\n};\n\nmodule.exports = HttpProvider;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/httpprovider.js\n// module id = 104\n// module chunks = 0","'use strict';\n\n// go env doesn't have and need XMLHttpRequest\nif (typeof XMLHttpRequest === 'undefined') {\n    exports.XMLHttpRequest = {};\n} else {\n    exports.XMLHttpRequest = XMLHttpRequest; // jshint ignore:line\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/utils/browser-xhr.js\n// module id = 105\n// module chunks = 0","/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file ipcprovider.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n\n\"use strict\";\n\nvar utils = require('../utils/utils');\nvar errors = require('./errors');\n\n\nvar IpcProvider = function (path, net) {\n    var _this = this;\n    this.responseCallbacks = {};\n    this.path = path;\n    \n    this.connection = net.connect({path: this.path});\n\n    this.connection.on('error', function(e){\n        console.error('IPC Connection Error', e);\n        _this._timeout();\n    });\n\n    this.connection.on('end', function(){\n        _this._timeout();\n    }); \n\n\n    // LISTEN FOR CONNECTION RESPONSES\n    this.connection.on('data', function(data) {\n        /*jshint maxcomplexity: 6 */\n\n        _this._parseResponse(data.toString()).forEach(function(result){\n\n            var id = null;\n\n            // get the id which matches the returned id\n            if(utils.isArray(result)) {\n                result.forEach(function(load){\n                    if(_this.responseCallbacks[load.id])\n                        id = load.id;\n                });\n            } else {\n                id = result.id;\n            }\n\n            // fire the callback\n            if(_this.responseCallbacks[id]) {\n                _this.responseCallbacks[id](null, result);\n                delete _this.responseCallbacks[id];\n            }\n        });\n    });\n};\n\n/**\nWill parse the response and make an array out of it.\n\n@method _parseResponse\n@param {String} data\n*/\nIpcProvider.prototype._parseResponse = function(data) {\n    var _this = this,\n        returnValues = [];\n    \n    // DE-CHUNKER\n    var dechunkedData = data\n        .replace(/\\}[\\n\\r]?\\{/g,'}|--|{') // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g,'}]|--|[{') // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g,'}|--|[{') // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g,'}]|--|{') // }]{\n        .split('|--|');\n\n    dechunkedData.forEach(function(data){\n\n        // prepend the last chunk\n        if(_this.lastChunk)\n            data = _this.lastChunk + data;\n\n        var result = null;\n\n        try {\n            result = JSON.parse(data);\n\n        } catch(e) {\n\n            _this.lastChunk = data;\n\n            // start timeout to cancel all requests\n            clearTimeout(_this.lastChunkTimeout);\n            _this.lastChunkTimeout = setTimeout(function(){\n                _this._timeout();\n                throw errors.InvalidResponse(data);\n            }, 1000 * 15);\n\n            return;\n        }\n\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = null;\n\n        if(result)\n            returnValues.push(result);\n    });\n\n    return returnValues;\n};\n\n\n/**\nGet the adds a callback to the responseCallbacks object,\nwhich will be called if a response matching the response Id will arrive.\n\n@method _addResponseCallback\n*/\nIpcProvider.prototype._addResponseCallback = function(payload, callback) {\n    var id = payload.id || payload[0].id;\n    var method = payload.method || payload[0].method;\n\n    this.responseCallbacks[id] = callback;\n    this.responseCallbacks[id].method = method;\n};\n\n/**\nTimeout all requests when the end/error event is fired\n\n@method _timeout\n*/\nIpcProvider.prototype._timeout = function() {\n    for(var key in this.responseCallbacks) {\n        if(this.responseCallbacks.hasOwnProperty(key)){\n            this.responseCallbacks[key](errors.InvalidConnection('on IPC'));\n            delete this.responseCallbacks[key];\n        }\n    }\n};\n\n\n/**\nCheck if the current connection is still valid.\n\n@method isConnected\n*/\nIpcProvider.prototype.isConnected = function() {\n    var _this = this;\n\n    // try reconnect, when connection is gone\n    if(!_this.connection.writable)\n        _this.connection.connect({path: _this.path});\n\n    return !!this.connection.writable;\n};\n\nIpcProvider.prototype.send = function (payload) {\n\n    if(this.connection.writeSync) {\n        var result;\n\n        // try reconnect, when connection is gone\n        if(!this.connection.writable)\n            this.connection.connect({path: this.path});\n\n        var data = this.connection.writeSync(JSON.stringify(payload));\n\n        try {\n            result = JSON.parse(data);\n        } catch(e) {\n            throw errors.InvalidResponse(data);                \n        }\n\n        return result;\n\n    } else {\n        throw new Error('You tried to send \"'+ payload.method +'\" synchronously. Synchronous requests are not supported by the IPC provider.');\n    }\n};\n\nIpcProvider.prototype.sendAsync = function (payload, callback) {\n    // try reconnect, when connection is gone\n    if(!this.connection.writable)\n        this.connection.connect({path: this.path});\n\n\n    this.connection.write(JSON.stringify(payload));\n    this._addResponseCallback(payload, callback);\n};\n\nmodule.exports = IpcProvider;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3/lib/web3/ipcprovider.js\n// module id = 106\n// module chunks = 0","/* global angular, mist */\nangular.module('dappChess').config(function ($routeProvider, $provide) {\n  const pages = {\n    welcomePage: 'welcome',\n    initializeGamePage: 'initializeGame',\n    joinGamePage: 'joinGame',\n    playGamePage: 'playGame'\n  };\n\n  $provide.factory('navigation', function ($route) {\n    let navigation = pages;\n\n    navigation.isActivePage = function (page) {\n      if(typeof ($route.current) !== 'undefined') {\n        return page === $route.current.activePage;\n      }\n    };\n\n    navigation.isActiveGame = function (game) {\n      if(typeof ($route.current) !== 'undefined' &&\n              typeof ($route.current.params.id) !== 'undefined') {\n        return $route.current.activePage === navigation.playGamePage &&\n                game.gameId === $route.current.params.id;\n      }\n    };\n\n    navigation.goto = function(page, parameter) {\n      if(parameter) {\n        window.location = '#/' + page + '/' + parameter;\n      }\n      else {\n        window.location = '#/' + page;\n      }\n    };\n\n    return navigation;\n  });\n\n  $routeProvider\n    .when('/' + pages.welcomePage, {\n      templateUrl: pages.welcomePage + '.html',\n      controller: 'WelcomeCtrl',\n      activePage: pages.welcomePage\n    })\n    .when('/' + pages.initializeGamePage, {\n      templateUrl: pages.initializeGamePage + '.html',\n      controller: 'InitializeGameCtrl',\n      activePage: pages.initializeGamePage\n    })\n    .when('/' + pages.joinGamePage, {\n      templateUrl: pages.joinGamePage + '.html',\n      controller: 'JoinGameCtrl',\n      activePage: pages.joinGamePage\n    })\n    .when('/' + pages.playGamePage + '/:id', {\n      templateUrl: pages.playGamePage + '.html',\n      controller: 'PlayGameCtrl',\n      activePage: pages.playGamePage\n    })\n    .otherwise({redirectTo: '/' + pages.welcomePage});\n}).controller('NavigationCtrl', function (accounts, navigation, games, $scope) {\n  $scope.games = games.list;\n\n  $scope.navigation = navigation;\n\n  $scope.isMist = false;\n\n  console.log(typeof(mist) === 'undefined' ? 'No mist browser' : 'Mist browser');\n  console.log(games);\n  if(typeof(mist) !== 'undefined') {\n    $scope.isMist = true;\n\n    console.log('Clearing mist menu');\n    mist.menu.clear();\n\n    mist.menu.add(\n      'welcome', {\n        name: 'Welcome',\n        position: 1,\n        selected: navigation.isActivePage(navigation.welcomePage)\n      }, function() {navigation.goto(navigation.welcomePage);}\n    );\n    mist.menu.add(\n      'initializeGame', {\n        name: 'New game',\n        position: 2,\n        selected: navigation.isActivePage(navigation.initializeGamePage)\n      }, function() {navigation.goto(navigation.initializeGamePage);}\n    );\n    mist.menu.add(\n      'joinGame', {\n        name: 'Join game',\n        position: 3,\n        selected: navigation.isActivePage(navigation.joinGamePage)\n      }, function() {navigation.goto(navigation.joinGamePage);}\n    );\n\n    $scope.$watch('games', function(newGames, oldGames) {\n      console.log('games changed');\n\n      let oldGameIds = [];\n\n      for(let i in oldGames) {\n        oldGameIds.push(oldGames[i].gameId);\n      }\n\n      for(let i in newGames) {\n        if(accounts.availableAccounts.indexOf(newGames[i].self.accountId) !== -1 ||\n          (typeof(newGames[i].opponent) !== 'undefined' &&\n            accounts.availableAccounts.indexOf(newGames[i].opponent.accountId) !== -1\n          )\n        ) {\n\n          let oldGameIndex = oldGameIds.indexOf(newGames[i].gameId);\n\n          if (oldGameIndex !== -1) {\n            oldGameIds.splice(oldGameIndex, 1);\n          }\n\n\n          let menuName =\n            (typeof(newGames[i].opponent) !== 'undefined') ?\n              newGames[i].opponent.username : 'Open game';\n\n          console.log('Adding menu entry for game with id ' +\n            newGames[i].gameId + ' (' + menuName + ')');\n          // Since mist menu callbacks don't provide the clicked element, we need to\n          // create the callbacks in a loop; thus the JSHint error has to be suppressed\n          /*jshint -W083 */\n          mist.menu.update(\n            newGames[i].gameId, {\n              name: menuName,\n              position: i + 3,\n              selected: navigation.isActiveGame(newGames[i])\n            }, function () {\n              navigation.goto(navigation.playGamePage, newGames[i].gameId);\n            });\n          /*jshint +W083 */\n        }\n      }\n\n      for(let i in oldGameIds) {\n        console.log('Removing menu entry for game with id ' + oldGameIds[i]);\n        mist.menu.remove(oldGameIds[i]);\n      }\n    }, true);\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/navigation.js","/* global angular */\nimport {Chess} from '../../contract/Chess.sol';\nangular.module('dappChess').factory('gameStates', function () {\n  let gameStates = {\n    selfMoves: {},\n    opponentMoves: {},\n    lastMoveNumber: {},\n    lastMoveTime: {}\n  };\n\n  gameStates.getMoveNumberFromState = function(state) {\n    return state[8] * 128 + state[9];\n  };\n\n  gameStates.initializeGame = function(gameId) {\n    if(typeof(gameStates.selfMoves[gameId]) === 'undefined') {\n      gameStates.selfMoves[gameId] = [];\n    }\n    if(typeof(gameStates.opponentMoves[gameId]) === 'undefined') {\n      gameStates.opponentMoves[gameId] = [];\n    }\n    if(typeof(gameStates.lastMoveNumber[gameId]) === 'undefined') {\n      gameStates.lastMoveNumber[gameId] = 0;\n    }\n    if(typeof(gameStates.lastMoveTime[gameId]) === 'undefined') {\n      gameStates.lastMoveTime[gameId] = 0;\n    }\n  };\n\n  gameStates.addSelfMove = function(gameId, moveFrom, moveTo, newState) {\n\n    gameStates.initializeGame(gameId);\n\n    let moveNumber = gameStates.getMoveNumberFromState(newState);\n\n    // If we already stored this move, don't do anything\n    if (gameStates.lastMoveNumber[gameId] === moveNumber) {\n      return;\n    }\n    if(gameStates.lastMoveNumber[gameId] > moveNumber) {\n      throw 'Invalid move: The last store move number is higher';\n    }\n\n    gameStates.selfMoves[gameId].push({\n      moveFrom: moveFrom,\n      moveTo: moveTo,\n      newState: newState\n    });\n    gameStates.lastMoveNumber[gameId] = moveNumber;\n    gameStates.lastMoveTime[gameId] = (new Date()).getTime();\n\n    gameStates.updateLocalStorage();\n  };\n  gameStates.addOpponentMove = function(gameId, moveFrom, moveTo,\n                                        moveSignature, newState, newStateSignature) {\n    gameStates.initializeGame(gameId);\n\n    let moveNumber = gameStates.getMoveNumberFromState(newState);\n\n    // If we already stored this move, don't do anything\n    if(gameStates.lastMoveNumber[gameId] === moveNumber) {\n      return;\n    }\n    if(gameStates.lastMoveNumber[gameId] > moveNumber) {\n      throw 'Invalid move: The last store move number is higher';\n    }\n\n    gameStates.opponentMoves[gameId].push({\n      moveFrom: moveFrom,\n      moveTo: moveTo,\n      moveSignature: moveSignature,\n      newState: newState,\n      newStateSignature: newStateSignature\n    });\n    gameStates.lastMoveNumber[gameId] = moveNumber;\n    gameStates.lastMoveTime[gameId] = (new Date()).getTime();\n\n    gameStates.updateLocalStorage();\n  };\n\n  /**\n   * Delete a game from the local storage\n   * @param gameId\n     */\n  gameStates.delete = function(gameId) {\n    delete gameStates.selfMoves[gameId];\n    delete gameStates.opponentMoves[gameId];\n    delete gameStates.lastMoveNumber[gameId];\n    delete gameStates.lastMoveTime[gameId];\n\n    gameStates.updateLocalStorage();\n  };\n\n  gameStates.getSelfMoves = function(gameId) {\n    if(typeof(gameStates.selfMoves[gameId]) === 'undefined') {\n      return [];\n    }\n\n    return gameStates.selfMoves[gameId];\n  };\n  gameStates.getLastSelfMove = function(gameId) {\n    if(typeof(gameStates.selfMoves[gameId]) === 'undefined' ||\n       gameStates.selfMoves[gameId].length === 0) {\n      throw 'This game has no self moves yet';\n    }\n\n    return gameStates.selfMoves[gameId][gameStates.selfMoves[gameId].length - 1];\n  };\n  gameStates.getSelfMove = function(gameId, moveNumber) {\n    if(typeof(gameStates.selfMoves[gameId]) === 'undefined') {\n      throw 'This game has no moves yet';\n    }\n    if(gameStates.selfMoves[gameId].length === 0) {\n      throw 'This game has no self moves yet';\n    }\n\n    for(let currentMove of gameStates.selfMoves[gameId]) {\n      let currentMoveNumber = gameStates.getMoveNumberFromState(currentMove.newState);\n\n      if(currentMoveNumber === moveNumber) {\n        return currentMove;\n      }\n    }\n    throw 'Could not find moveNumber ' + moveNumber + ' for the game ' + gameId;\n  };\n\n  gameStates.getPreviousOpponentMove = function(gameId) {\n    if(typeof(gameStates.opponentMoves[gameId]) === 'undefined') {\n      throw 'This game has no moves yet';\n    }\n    if(gameStates.opponentMoves[gameId].length === 0) {\n      throw 'This game has no opponent moves yet';\n    }\n    if(gameStates.opponentMoves[gameId].length < 2) {\n      throw 'This game has no previous opponent move';\n    }\n\n    return gameStates.opponentMoves[gameId][gameStates.opponentMoves[gameId].length - 2];\n  };\n  gameStates.getLastOpponentMove = function(gameId) {\n    if(typeof(gameStates.opponentMoves[gameId]) === 'undefined') {\n      throw 'This game has no moves yet';\n    }\n    if(gameStates.opponentMoves[gameId].length === 0) {\n      throw 'This game has no opponent moves yet';\n    }\n\n    return gameStates.opponentMoves[gameId][gameStates.opponentMoves[gameId].length - 1];\n  };\n\n  /**\n   *\n   * @param gameId\n   * @return boolean\n     */\n  gameStates.isBlockchainStateNewer = function(gameId) {\n    let blockchainState = Chess.getCurrentGameState(gameId);\n\n    if(blockchainState) {\n      if(typeof(gameStates.lastMoveNumber[gameId]) === 'undefined') {\n        // No state in the local states, so return true\n        return true;\n      }\n\n      let blockchainMoveNumber = gameStates.getMoveNumberFromState(blockchainState);\n\n      return blockchainMoveNumber > gameStates.lastMoveNumber[gameId];\n    }\n    // No state in the blockchain, so return false\n    return false;\n  };\n\n  /**\n   * Get an array with all parameters needed to send them to the blockchain.\n   * @param gameId\n   * @return [opponentState, opponentStateSignature, moveSelfFrom, moveSelfTo]\n     */\n  gameStates.getLastMovePackage = function(gameId) {\n    if(typeof(gameStates.selfMoves[gameId]) === 'undefined') {\n      throw 'This game has no moves yet';\n    }\n    if(gameStates.selfMoves[gameId].length === 0) {\n      throw 'This game has no self moves yet';\n    }\n\n    let lastSelfMove = gameStates.getLastSelfMove(gameId);\n    let lastSelfMoveNumber = gameStates.getMoveNumberFromState(lastSelfMove.newState);\n\n    // There was only one move, and it was the self move\n    // => we do not have a state for this\n    if (gameStates.lastMoveNumber[gameId] === 1) {\n      throw 'No move package found for last self move.';\n    }\n\n    let opponentMove = gameStates.getLastOpponentMove(gameId);\n    let opponentMoveNumber = gameStates.getMoveNumberFromState(opponentMove.newState);\n\n    // We have to fetch the opponent move that was the last move before our own move\n    // If the opponents move was the last move, we need to check for the previous\n    // move that *should* be the move before our last move\n    if (opponentMoveNumber + 1 !== lastSelfMoveNumber) {\n      // Fetch the previous opponents move\n      opponentMove = gameStates.getPreviousOpponentMove(gameId);\n      opponentMoveNumber = gameStates.getMoveNumberFromState(opponentMove.newState);\n\n      // If this is not the move previous to our move, there was an error\n      // Thus: *Something* has to fetch the last move from the blockchain\n      if (opponentMoveNumber + 1 !== lastSelfMoveNumber) {\n        throw 'No move package found for last self move.';\n      }\n    }\n\n    return [\n      opponentMove.newState,\n      opponentMove.newStateSignature,\n      lastSelfMove.moveFrom,\n      lastSelfMove.moveTo\n    ];\n  };\n\n  /**\n   * Get last state from local storage\n   * @param gameId\n   * @returns state | false if not in local storage\n     */\n  gameStates.getLastLocalState = function (game) {\n    if (typeof gameStates.lastMoveNumber[game.gameId] === 'undefined') {\n      return false;\n    }\n\n    if (gameStates.selfMoves[game.gameId].length > 0) {\n      let lastSelfMove = gameStates.getLastSelfMove(game.gameId);\n      let lastSelfMoveNumber = gameStates.getMoveNumberFromState(lastSelfMove.newState);\n\n      if (lastSelfMoveNumber === gameStates.lastMoveNumber[game.gameId]) {\n        return lastSelfMove.newState;\n      }\n    }\n\n    if (gameStates.opponentMoves[game.gameId].length > 0) {\n      let lastOpponentMove = gameStates.getLastOpponentMove(game.gameId);\n      let lastOpponentMoveNumber = gameStates.getMoveNumberFromState(lastOpponentMove.newState);\n\n      if (lastOpponentMoveNumber === gameStates.lastMoveNumber[game.gameId]) {\n        return lastOpponentMove.newState;\n      }\n    }\n\n    throw 'Could not find last move in self or opponent moves';\n  };\n\n  gameStates.getLastBlockchainState = function(game) {\n    let blockchainGameState = Chess.getCurrentGameState(game.gameId,\n      {from: game.self.accountId,\n        gas: 10000000});\n\n    blockchainGameState = blockchainGameState.map(function(element) {\n      if(typeof(element) === 'object' && typeof(element.toNumber) === 'function') {\n        return element.toNumber();\n      }\n\n      return element;\n    });\n\n    return blockchainGameState;\n  };\n\n  gameStates.getLastMoveTime = function(game) {\n    return gameStates.lastMoveTime[game.gameId];\n  };\n\n  gameStates.getLastMoveNumber = function(game) {\n    return gameStates.lastMoveNumber[game.gameId];\n  };\n\n  gameStates.updateLocalStorage = function() {\n    window.localStorage.setItem('gameStates.selfMoves',\n      angular.toJson(gameStates.selfMoves));\n    window.localStorage.setItem('gameStates.opponentMoves',\n      angular.toJson(gameStates.opponentMoves));\n    window.localStorage.setItem('gameStates.lastMoveNumber',\n      angular.toJson(gameStates.lastMoveNumber));\n    window.localStorage.setItem('gameStates.lastMoveTime',\n      angular.toJson(gameStates.lastMoveTime));\n  };\n  gameStates.fetchFromLocalStorage = function() {\n    if(typeof(window.localStorage['gameStates.selfMoves']) !== 'undefined') {\n      try {\n        let movesInLocalStorage = JSON.parse(window.localStorage['gameStates.selfMoves']);\n        if(typeof(movesInLocalStorage) === 'object') {\n          gameStates.selfMoves = movesInLocalStorage;\n        }\n        else {\n          throw 'Invalid data format of selfMoves';\n        }\n      }\n      catch(e) {\n        console.log('Could not parse selfMoves from local storage', e);\n      }\n    }\n    if(typeof(window.localStorage['gameStates.opponentMoves']) !== 'undefined') {\n      try {\n        let movesInLocalStorage = JSON.parse(window.localStorage['gameStates.opponentMoves']);\n        if(typeof(movesInLocalStorage) === 'object') {\n          gameStates.opponentMoves = movesInLocalStorage;\n        }\n        else {\n          throw 'Invalid data format of opponentMoves';\n        }\n      }\n      catch(e) {\n        console.log('Could not parse opponentMoves from local storage', e);\n      }\n    }\n    if(typeof(window.localStorage['gameStates.lastMoveNumber']) !== 'undefined') {\n      try {\n        let lastMoveNumber = JSON.parse(window.localStorage['gameStates.lastMoveNumber']);\n        if(typeof(lastMoveNumber) === 'object') {\n          gameStates.lastMoveNumber = lastMoveNumber;\n        }\n        else {\n          throw 'Invalid data format of lastMoveNumber';\n        }\n      }\n      catch(e) {\n        console.log('Could not parse lastMoveNumber from local storage', e);\n      }\n    }\n    if(typeof(window.localStorage['gameStates.lastMoveTime']) !== 'undefined') {\n      try {\n        let lastMoveTime = JSON.parse(window.localStorage['gameStates.lastMoveTime']);\n        if(typeof(lastMoveTime) === 'object') {\n          gameStates.lastMoveTime = lastMoveTime;\n        }\n        else {\n          throw 'Invalid data format of lastMoveTime';\n        }\n      }\n      catch(e) {\n        console.log('Could not parse lastMoveTime from local storage', e);\n      }\n    }\n  };\n\n  gameStates.fetchFromLocalStorage();\n\n  return gameStates;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/gameStatesFactory.js","/* global angular */\nimport {web3, Chess} from '../../contract/Chess.sol';\nimport {generateFen, generateState, generateMapping, algebraicToIndex}\n  from './utils/fen-conversion.js';\nimport config from '../config.js';\nvar ChessJS = require('chess.js');\nvar shhFactory = require('web3-shh-dropin-for-proxy');\n\nconst proxyUri = config.proxyUri;\nconst shhTopic = config.appId;\nconst TIMEOUT_ACK = config.timeouts.ack;\n\nangular.module('dappChess').factory('games', function (crypto, navigation, gameStates,\n                                                       accounts, $rootScope, $route) {\n  // Only needed for fake Whisper proxy\n  let shh = shhFactory(proxyUri, function(shh) {\n    // Register all my accounts with proxy\n    for (let account of accounts.availableAccounts) {\n      shh.register(account);\n    }\n  });\n\n  const games = {\n    list: [],\n    openGames: [],\n    viewingGame: {id: 0}\n  };\n\n  games.getGame = function (id) {\n    return games.list.find(function (game) {\n      return game.gameId === id;\n    });\n  };\n\n  games.removeGame = function (gameId) {\n    for (let i in games.list) {\n      if (games.list[i].gameId === gameId) {\n        console.log('game removed', games.list.splice(i, 1));\n        break;\n      }\n    }\n\n    gameStates.delete(gameId);\n  };\n\n  /**\n   * Convert an array to a game object as seen in the contract with the given gameId.\n   * @param gameId of the game\n   * @param array containing the data\n   * @returns object as seen in the contract (contractGameObject)\n   */\n  games.parseContractGameArray = function (gameId, array) {\n    let playerWhite = Chess.getWhitePlayer(gameId);\n    return {\n      gameId: gameId,\n      player1: array[0],\n      player2: array[1],\n      player1Alias: array[2],\n      player2Alias: array[3],\n      nextPlayer: array[4],\n      winner: array[5],\n      ended: array[6],\n      pot: array[7],\n      player1WonEther: array[8],\n      player2WonEther: array[9],\n      turnTime: array[10],\n      timeoutStarted: array[11],\n      timeoutState: array[12],\n      playerWhite: playerWhite\n    };\n  };\n\n  /**\n   * Convert a game array to a game for the games list\n   * Structure of the game:\n   *  gameId: <string>,\n   *  {\n   *    self: {\n   *      username: <string>,\n   *      accountId: <string>,\n   *      color: <string>,\n   *      wonEther: <int>\n   *    },\n   *    opponent: {\n   *      username: <string>,\n   *      accountId: <string>,\n   *      color: <string>,\n   *      wonEther: <int>\n   *    }\n   *  },\n   *  ended: <boolean>,\n   *  pot: <number>,\n   *  turnTime: <number>,\n   *  timeoutStarted: <date>,\n   *  timeoutState: <{-2,-1,0,1,2}>\n   * @param contractGameObject\n   * @returns game\n     */\n  games.convertGameToObject = function (contractGameObject) {\n    let game = {\n      gameId: contractGameObject.gameId,\n      nextPlayer: contractGameObject.nextPlayer,\n      turnTime: contractGameObject.turnTime.toNumber(),\n      ended: contractGameObject.ended,\n      pot: web3.fromWei(contractGameObject.pot, 'ether').toDigits().toString()\n    };\n\n    if (typeof contractGameObject.timeoutState !== 'undefined') {\n      game.timeoutState = contractGameObject.timeoutState.toNumber();\n      game.timeoutStarted = contractGameObject.timeoutStarted.toNumber() || 0;\n    } else {\n      game.timeoutState = 0;\n      game.timeoutStarted = 0;\n    }\n\n    if (accounts.availableAccounts.indexOf(contractGameObject.player2) !== -1) {\n      game.self = {\n        username: contractGameObject.player2Alias,\n        accountId: contractGameObject.player2,\n        color: (contractGameObject.playerWhite === contractGameObject.player2 ? 'white' : 'black'),\n        wonEther: (contractGameObject.player2WonEther) ?\n          web3\n            .fromWei(contractGameObject.player2WonEther, 'ether')\n            .toDigits().toString() :\n          0\n      };\n      game.opponent = {\n        username: contractGameObject.player1Alias,\n        accountId: contractGameObject.player1,\n        color: (contractGameObject.playerWhite === contractGameObject.player1 ? 'white' : 'black'),\n        wonEther: (contractGameObject.player1WonEther) ?\n          web3\n            .fromWei(contractGameObject.player1WonEther, 'ether')\n            .toDigits().toString() :\n          0\n      };\n    } else {\n      game.self = {\n        username: contractGameObject.player1Alias,\n        accountId: contractGameObject.player1,\n        color: (contractGameObject.playerWhite === contractGameObject.player1 ? 'white' : 'black'),\n        wonEther: (contractGameObject.player1WonEther) ?\n          web3\n            .fromWei(contractGameObject.player1WonEther, 'ether')\n            .toDigits().toString() :\n          0\n      };\n      if (typeof contractGameObject.player2 !== 'undefined' &&\n        contractGameObject.player2 !== '0x0000000000000000000000000000000000000000') {\n        game.opponent = {\n          username: contractGameObject.player2Alias,\n          accountId: contractGameObject.player2,\n          color: (contractGameObject.playerWhite === contractGameObject.player2 ?\n            'white' :\n            'black'),\n          wonEther: (contractGameObject.player2WonEther) ?\n            web3\n              .fromWei(contractGameObject.player2WonEther, 'ether')\n              .toDigits().toString() :\n            0\n        };\n      }\n    }\n    if (typeof(contractGameObject.winner) !== 'undefined' &&\n      contractGameObject.winner !== '0x0000000000000000000000000000000000000000') {\n      if (game.self.accountId === contractGameObject.winner) {\n        game.winner = 'self';\n      }\n      else if (game.opponent.accountId === contractGameObject.winner) {\n        game.winner = 'opponent';\n      }\n    }\n\n    return game;\n  };\n\n  /**\n   * Add a game to the list, if there is no game with the same id.\n   * @param game A game in the format required for the game list\n   */\n  games.add = function (game) {\n    console.log('game add called', game);\n\n    for(let i in games.list) {\n      if (games.list[i].gameId === game.gameId) {\n        console.log('game with id ' + game.gameId + ' already exists');\n        return;\n      }\n    }\n    games.list.push(game);\n\n    // Initialize chess object\n    game.chess = new ChessJS();\n\n    if (gameStates.isBlockchainStateNewer(game.gameId)) {\n      game.state = gameStates.getLastBlockchainState(game);\n    } else {\n      game.state = gameStates.getLastLocalState(game);\n    }\n\n    game.chess.load(generateFen(game.state));\n    if (game.self.color[0] === game.chess.turn()) {\n      game.nextPlayer = game.self.accountId;\n    } else {\n      game.nextPlayer = game.opponent.accountId;\n    }\n\n    let lastMoveTime;\n    try {\n      // Try to find out time of last move\n      lastMoveTime = gameStates.getLastMoveTime(game);\n      if (!lastMoveTime) {\n        // get it from blockchain?\n      }\n    } catch (e) {\n    }\n    if (lastMoveTime) {\n      game.currentTimeout = new Date(lastMoveTime + game.turnTime * 60 * 1000);\n    }\n\n    // Add events for this game\n    games.listenForMoves(game, function (m) {\n      let [, state, stateSignature, fromIndex, toIndex, moveSignature] = m.payload;\n\n      // Apply move\n      let opponentChessMove = game.chess.move({\n        from: fromIndex,\n        to: toIndex,\n        promotion: 'q'\n      });\n\n      if (opponentChessMove !== null) {\n        game.state = state;\n        game.nextPlayer = game.self.accountId;\n        game.lastMove = opponentChessMove;\n        games.sendAck(game);\n        let toBackend = generateMapping().toBackend;\n        gameStates.addOpponentMove(\n          game.gameId, toBackend[fromIndex], toBackend[toIndex], moveSignature,\n          state, stateSignature\n        );\n\n        if (game.gameId !== games.viewingGame.id) {\n          // Player is currently in another game\n          $rootScope.$broadcast('message', game.opponent.username + ' made a move!',\n                                'message', 'playgame');\n        }\n        $rootScope.$apply();\n      } else {\n        console.log('Move is not valid, send last state and move to blockchain');\n        try {\n          games.sendLastStateOrMoveToBlockchain(game);\n          // TODO call Chess.claimTimeout ?\n        } catch (e) {\n          // TODO inform user?\n          console.log('Sending state + move to blockchain failed:', e);\n        }\n      }\n    });\n\n    console.log('added game with id ' + game.gameId);\n  };\n\n  /**\n   * Add a game to the list, if there is no game with the same id;\n   * otherwise update it\n   * @param game A game in the format required for the game list\n   */\n  games.update = function (game) {\n    let g = games.getGame(game.gameId);\n    if (typeof g !== 'undefined') {\n      jQuery.extend(g, game);\n      // update game view to new state\n      g.chess.load(generateFen(g.state));\n      if (g.self.color[0] === g.chess.turn()) {\n        g.nextPlayer = g.self.accountId;\n      } else {\n        g.nextPlayer = g.opponent.accountId;\n      }\n      // TODO update move timer, listeners, ...?\n    } else {\n      games.add(game);\n    }\n  };\n\n  games.showWinner = function(game) {\n    console.log('show winner', game);\n    // Only do this if we are part of this game\n    if(accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n      // Perform actions if game is won\n      if(game.winner === 'self') {\n        $rootScope.$broadcast('message',\n          'You have won the game against ' + game.opponent.username,\n          'message', 'playgame');\n      }\n      // Perform action if the winner was the opponent\n      else if(game.winner === 'opponent') {\n        $rootScope.$broadcast('message',\n          'You have lost the game against ' + game.opponent.username,\n          'message', 'playgame');\n      }\n      else {\n        $rootScope.$broadcast('message',\n          'Your game against ' + game.opponent.username + ' ended in a draw',\n          'message', 'playgame');\n      }\n    }\n    else {\n      console.log(game.self.accountId + ' not in account ids', accounts.availableAccounts);\n    }\n  };\n\n  games.claimWin = function (game) {\n    console.log('claimWin', game);\n    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n      if (game.timeoutState !== 0) {\n        $rootScope.$broadcast('message',\n          'Not able to claim win, while other claim is active in game with the id ' + game.gameId,\n          'error', 'claimwin');\n      } else {\n        $rootScope.$broadcast('message',\n          'Claiming win for your game with the id ' + game.gameId,\n          'message', 'claimwin');\n        try {\n          games.sendLastStateOrMoveToBlockchain(game);\n        } catch (e) {\n          console.log('sendLastStateOrMoveToBlockchain error', e);\n          $rootScope.$broadcast('message',\n                                'An error occurred while sending the game state to the blockchain',\n                                'error', 'claimwin');\n        }\n        try {\n          Chess.claimWin(game.gameId, {from: game.self.accountId,gas: 1000000000});\n        } catch (e) {\n          console.log('claimWin error', e);\n          $rootScope.$broadcast('message',\n                                'An error occurred while trying to claim win',\n                                'error', 'claimwin');\n        }\n      }\n    }\n  };\n\n  games.offerDraw = function (game) {\n    console.log('offerDraw', game);\n    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n      if (game.timeoutState !== 0) {\n        $rootScope.$broadcast('message',\n          'Not able to offer draw, while other claim is active in game with the id ' + game.gameId,\n          'error', 'offerdraw');\n      } else {\n        $rootScope.$broadcast('message',\n          'Offering draw for your game with the id ' + game.gameId,\n          'message', 'offerdraw');\n        try {\n          games.sendLastStateOrMoveToBlockchain(game);\n          Chess.offerDraw(game.gameId, {from: game.self.accountId,gas: 10000000});\n        } catch (e) {\n          console.log('offerDraw error', e);\n          $rootScope.$broadcast('message',\n            'Could not offer a draw',\n            'error', 'offerdraw');\n        }\n      }\n    }\n  };\n\n  games.claimTimeout = function (game) {\n    console.log('claimTimeout', game);\n    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n      if (game.timeoutState !== 0) {\n        $rootScope.$broadcast('message',\n          'Not able to claim timeout while other claim is active in game with the id ' +\n          game.gameId,\n          'error', 'claimtimeout');\n      } else {\n        $rootScope.$broadcast('message',\n          'Claim timeout for your game with the id ' + game.gameId,\n          'message', 'claimtimeout');\n        try {\n          games.sendLastStateOrMoveToBlockchain(game);\n          Chess.claimTimeout(game.gameId, {from: game.self.accountId,gas: 10000000});\n        } catch (e) {\n          console.log('claimTimeout error', e);\n          $rootScope.$broadcast('message', 'Could not claim timeout',\n                                'error', 'claimtimeout');\n        }\n      }\n    }\n  };\n\n  games.confirmGameEnded = function (game) {\n    console.log('confirmGameEnded', game);\n    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n      if (game.timeoutState === 0) {\n        $rootScope.$broadcast('message',\n          'Not able to comfirm game ended, while no claim is active ' +\n            'in game with the id ' + game.gameId,\n          'error', 'confirmgameended');\n      } else {\n        $rootScope.$broadcast('message',\n          'Sending confirmation to end your game with the id ' + game.gameId,\n          'message', 'confirmgameended');\n        try {\n          Chess.confirmGameEnded(game.gameId, {from: game.self.accountId,gas: 10000000});\n        } catch (e) {\n          console.log('confirmGameEnded error', e);\n          $rootScope.$broadcast('message',\n            'Could not end the game',\n            'error', 'confirmgameended');\n        }\n      }\n    }\n  };\n\n  games.claimTimeoutEnded = function (game) {\n    console.log('claimTimeoutEnded', game);\n    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n      if (game.timeoutState === 0) {\n        $rootScope.$broadcast('message',\n          'Not able to claim timeout, while no claim is active ' +\n            'in game with the id ' + game.gameId,\n          'error', 'claimtimeoutended');\n      } else {\n        $rootScope.$broadcast('message',\n          'Claiming timeout for your game with the id ' + game.gameId,\n          'message', 'claimtimeoutended');\n        try {\n          Chess.claimTimeoutEnded(game.gameId, {from: game.self.accountId,gas: 10000000});\n        } catch (e) {\n          console.log('claimTimeoutEnded error', e);\n          $rootScope.$broadcast('message',\n            'Could not claim timeout',\n            'error', 'claimtimeoutended');\n        }\n      }\n    }\n  };\n\n  games.claimEther = function (game) {\n    console.log('claim ether', game);\n    // Only do this if we are part of this game\n    if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n      // When the player has won ether, claim this\n      if (game.self.wonEther > 0) {\n        if (game.opponent) {\n          $rootScope.$broadcast('message',\n            'Claiming your won ether in the game against ' + game.opponent.username,\n            'message', 'claimpot');\n        }\n        else {\n          $rootScope.$broadcast('message',\n            'Reclaiming your ether in your game with the id ' + game.gameId,\n            'message', 'claimpot');\n        }\n\n        try {\n          console.log('Trying to claim ether for game ', game);\n          Chess.withdraw(game.gameId, {from: game.self.accountId,gas: 1000000000});\n          $rootScope.$broadcast('message',\n            'Your ether with the amount of ' +\n            game.self.wonEther +\n            ' has been added to your account',\n            'success', 'claimpot');\n\n          game.self.wonEther = 0;\n          game.pot = 0;\n        }\n        catch (e) {\n          $rootScope.$broadcast('message',\n            'Could not claim your ether',\n            'error', 'claimpot');\n        }\n      }\n      else {\n        console.log('no ether to claim for self: ', game.self);\n      }\n    }\n    else {\n      console.log(game.self.accountId + ' not in account ids', accounts.availableAccounts);\n    }\n  };\n\n  /* Send move and resulting new state to second player */\n  games.sendMove = function (game, fromIndex, toIndex) {\n    // update game information\n    gameStates.addSelfMove(game.gameId,\n                           algebraicToIndex(fromIndex),\n                           algebraicToIndex(toIndex),\n                           game.state);\n    game.nextPlayer = game.opponent.accountId;\n    console.log('sendMove move number', gameStates.getMoveNumberFromState(game.state));\n\n    // if there is a timeout running against us, send the move to blockchain\n    if (game.timeoutState !== 0 && game.timeoutState !== -2) {\n      games.sendLastStateOrMoveToBlockchain(game);\n      return;\n    }\n    let identity = game.self.accountId;\n    let payload = [\n      'MOVE', game.state, crypto.sign(identity, game.gameId, game.state),\n      fromIndex, toIndex, crypto.sign(identity, game.gameId, [fromIndex, toIndex])\n    ];\n    game.lastSentHash = crypto.solSha3(payload);\n    shh.post({\n      'from': identity,\n      'to': game.opponent.accountId,\n      'topic': [shhTopic, game.gameId],\n      'payload': payload\n    });\n    console.log('Sent move no', game.state[8] * 128 + game.state[9],\n                'from', fromIndex, 'to', toIndex);\n\n    // Wait for ACK\n    if (typeof game.ackTimeout !== 'undefined') {\n      clearTimeout(game.ackTimeout);\n    }\n    game.ackTimeout = setTimeout(() => {\n      if (game.lastAckHash !== game.lastSentHash) {\n        console.log('Opponent did not ACK, sending last state and move to blockchain');\n        // If not ACKed, send my last move to blockchain\n        try {\n          games.sendLastStateOrMoveToBlockchain(game);\n          console.log('after t/o ACK sendLastStateOrMoveToBlockchain');\n          // then send claimTimeout\n          Chess.claimTimeout(game.gameId, { from: game.self.accountId,gas: 10000000 });\n\n          game.moveTimeout = setTimeout(() => {\n            let [fromIndex, toIndex] = games.getValidMove(game);\n            try {\n              Chess.claimTimeoutEndedWithMove(game.gameId, fromIndex, toIndex,\n                                              { from: game.self.accountId,\n                                              gas: 10000000 });\n            } catch (e) {\n              console.error('Could not claimTimeoutEndedWithMove', e);\n            }\n          }, game.turnTime * 60 * 1000);\n          game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n        } catch (e) {\n          console.log('Could not send state and move to blockchain', e);\n        }\n      }\n    }, TIMEOUT_ACK);\n\n    // Wait for next move\n    if (typeof game.moveTimeout !== 'undefined') {\n      clearTimeout(game.moveTimeout);\n    }\n    game.moveTimeout = setTimeout(() => {\n      console.log('Opponent did not send move, sending' +\n                  'last state and move to blockchain');\n      // If opponent did not move, send my last state and move to blockchain\n      try {\n        games.sendLastStateOrMoveToBlockchain(game);\n        // then send claimTimeout\n        Chess.claimTimeout(game.gameId, { from: game.self.accountId,gas: 10000000 });\n\n        game.moveTimeout = setTimeout(() => {\n          let [fromIndex, toIndex] = games.getValidMove(game);\n          try {\n            Chess.claimTimeoutEndedWithMove(game.gameId, fromIndex, toIndex,\n                                            { from: game.self.accountId ,gas: 10000000});\n          } catch (e) {\n            console.error('Could not claimTimeoutEndedWithMove', e);\n          }\n        }, game.turnTime * 60 * 1000 + 10000); // half game time plus 10 seconds extra\n        game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n      } catch (e) {\n        console.log('Could not send state and move to blockchain', e);\n      }\n    }, game.turnTime * 60 * 1000); // half game time\n    game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n    $rootScope.$apply();\n  };\n\n  /**\n   * Returns a random valid move, throws if no valid moves are possible\n   *\n   * @param game\n   * @returns {*[from index in 0x88, to index in 0x88]}\n   */\n  games.getValidMove = function (game) {\n    console.log('get valid move for', game);\n    let move = game.chess.moves()[0];\n    move = game.chess.move(move);\n    game.chess.undo();\n    let toBackend = generateMapping.toBackend;\n    return [toBackend[move.from], toBackend[move.to]];\n  };\n\n  games.sendLastStateOrMoveToBlockchain = function (game) {\n    let state, stateSignature, fromIndex, toIndex;\n    try {\n      [state, stateSignature, fromIndex, toIndex] = gameStates.getLastMovePackage(game.gameId);\n      console.log('getLastMovePackage', state, stateSignature, fromIndex, toIndex,\n        gameStates.getMoveNumberFromState(state));\n    } catch (e) {\n      console.log('getLastMovePackage failed');\n      // last state + move not present, move base on blockchain state\n      let blockchainMoveNumber = gameStates.getMoveNumberFromState(\n        gameStates.getLastBlockchainState(game)\n      );\n      console.log('lastBlockchainState Number',\n        gameStates.getMoveNumberFromState(gameStates.getLastBlockchainState(game)));\n      let lastSelfMove;\n      try {\n        lastSelfMove = gameStates.getLastSelfMove(game.gameId);\n      } catch (e) {\n        if (blockchainMoveNumber === 0) {\n          // blockchain has no move, we have no move... fine\n          console.log('state = 0 --> no move ... fine');\n          return;\n        }\n      }\n      let lastSelfMoveNumber = gameStates.getMoveNumberFromState(lastSelfMove.newState);\n      console.log('lastSelfMove Number', lastSelfMoveNumber);\n      if (blockchainMoveNumber === lastSelfMoveNumber) {\n        return;\n      } else if (blockchainMoveNumber + 1 === lastSelfMoveNumber) {\n        Chess.move(game.gameId, lastSelfMove.moveFrom, lastSelfMove.moveTo,\n                   { from: game.self.accountId,\n                    gas: 10000000});\n      } else {\n        // should not happen\n        throw Error('Blockchain state and local move do not match.');\n      }\n      return;\n    }\n    console.log('getLastMovePackage success... sending move',\n                state, fromIndex, toIndex, stateSignature);\n    Chess.moveFromState(game.gameId, state, fromIndex, toIndex, stateSignature,\n                        { from: game.self.accountId,gas: 10000000 });\n  };\n\n  /* Send acknowledgment of last received move */\n  games.sendAck = function(game) {\n    console.log('Acknowledge reception of', game.lastReceivedHash);\n    shh.post({\n      'from': game.self.accountId,\n      'to': game.opponent.accountId,\n      'topic': [shhTopic, game.gameId],\n      'payload': ['ACK', game.lastReceivedHash]\n    });\n  };\n\n  /* Receive move and resulting new state from opponent */\n  /* callback({[state, stateSignature, fromIndex, toIndex, moveSignature], from}) */\n  games.listenForMoves = function(game, callback) {\n    let moveEvents = shh.watch({\n      'topic': [shhTopic, game.gameId],\n      'to': game.self.accountId\n    });\n    moveEvents.arrived(function(m) {\n      console.log('moveEvents.arrived', m);\n      if (m.payload[0] === 'ACK') {\n        let hash = m.payload[1];\n        game.lastAckHash = hash;\n        console.log('Received acknowledgment of', hash);\n      }\n      if (m.payload[0] === 'MOVE') {\n        let [, state, stateSignature, fromIndex, toIndex, moveSignature] = m.payload;\n        if (!crypto.verify(game.opponent.accountId, game.gameId, stateSignature, state) ||\n            !crypto.verify(game.opponent.accountId, game.gameId, moveSignature,\n              [fromIndex, toIndex])) {\n          console.log('Could not verify opponent\\'s move signature, sending last ' +\n                      'valid state and move to blockchain');\n          // TODO Send my last known state and move to the blockchain\n\n        } else {\n          game.lastReceivedHash = crypto.solSha3(m.payload);\n          game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n          callback(m);\n        }\n      }\n    });\n\n    return {\n      stopListening: () => {\n        moveEvents.remove();\n      }\n    };\n  };\n\n  games.eventGameInitialized = function (err, data) {\n    console.log('eventGameInitialized', err, data);\n    if (err) {\n      console.log('error occured', err);\n      /*$rootScope.$broadcast('message',\n       'Your game could not be created, the following error occured: ' + err,\n       'error', 'startgame');*/\n    } else {\n      let game = games.convertGameToObject(data.args);\n      games.add(game);\n      games.openGames.push(game.gameId);\n\n      if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n        $rootScope.$broadcast('message',\n          'Your game has successfully been created and has the id ' + game.gameId,\n          'success', 'startgame');\n      }\n\n      $rootScope.$apply();\n    }\n  };\n\n  games.eventGameJoined = function (err, data) {\n    console.log('eventGameJoined', err, data);\n    if (err) {\n      console.log('error occured', err);\n      /*$rootScope.$broadcast('message',\n       'It was not possible to join the game, the following error occured: ' + err,\n       'error', 'joingame');*/\n    } else {\n      let gameId = data.args.gameId;\n      let p1accountId = data.args.player1;\n      let p1username = data.args.player1Alias;\n      let p1color = (data.args.playerWhite === data.args.player1 ? 'white' : 'black');\n      let p2accountId = data.args.player2;\n      let p2username = data.args.player2Alias;\n      let p2color = (data.args.playerWhite === data.args.player2 ? 'white' : 'black');\n\n      let game = games.getGame(gameId);\n      if (typeof game === 'undefined') {\n        game = games.convertGameToObject(data.args);\n        games.add(game);\n      } else {\n        // remove game from openGames\n        let gameIndex = games.openGames.indexOf(gameId);\n        games.openGames.splice(gameIndex, 1);\n        if (accounts.availableAccounts.indexOf(p2accountId) !== -1) {\n          game.self = {\n            username: p2username,\n            accountId: p2accountId,\n            color: p2color\n          };\n          game.opponent = {\n            username: p1username,\n            accountId: p1accountId,\n            color: p1color\n          };\n        } else {\n          game.self = {\n            username: p1username,\n            accountId: p1accountId,\n            color: p1color\n          };\n          game.opponent = {\n            username: p2username,\n            accountId: p2accountId,\n            color: p2color\n          };\n        }\n        game.pot = web3.fromWei(data.args.pot, 'ether').toDigits().toString();\n        game.player1WonEther = 0;\n        game.player2WonEther = 0;\n      }\n\n      if (accounts.availableAccounts.indexOf(game.self.accountId) !== -1) {\n        $rootScope.$broadcast('message', 'Your game against ' +\n          game.opponent.username.replace(/<(?:.|\\n)*?>/gm, '') +\n          ' has started',\n          'success', 'joingame');\n\n        if($route.current.activePage === navigation.joinGamePage) {\n          navigation.goto(navigation.playGamePage, gameId);\n        }\n        else {\n          $rootScope.$apply();\n        }\n      }\n    }\n  };\n\n  games.eventGameStateChanged = function (err, data) {\n    console.log('eventGameStateChanged', err, data);\n    let game = games.getGame(data.args.gameId);\n    if (typeof game !== 'undefined') {\n      game.state = data.args.state;\n      games.update(game);\n    }\n  };\n\n  games.eventMove = function (err, data) {\n    console.log('eventMove', err, data);\n    let game = games.getGame(data.args.gameId);\n    if (typeof game !== 'undefined') {\n      // Apply move\n      let toFrontend = generateMapping().toFrontend;\n      let opponentChessMove = game.chess.move({\n        from: toFrontend[data.args.fromIndex],\n        to: toFrontend[data.args.toIndex],\n        promotion: 'q'\n      });\n\n      game.state = generateState(game.chess.fen());\n      game.nextPlayer = (data.args.player === game.self.accountId ?\n                          game.opponent.accountId : game.self.accountId);\n      game.lastMove = opponentChessMove;\n      game.timeoutState = 0;\n\n      $rootScope.$apply();\n    }\n  };\n\n  games.eventGameEnded = function (err, data) {\n    console.log('eventGameEnded', err, data);\n    if (err) {\n      console.log('error occured', err);\n      /* $rootScope.$broadcast('message',\n       'The surrender could not be saved, the following error occurred: ' + err,\n       'error', 'playgame');*/\n    } else {\n      // Update game in games list\n      let gameInContract = Chess.games(data.args.gameId);\n\n      if (gameInContract) {\n        for (let i in games.list) {\n          if (games.list[i].gameId === data.args.gameId) {\n            let game = games.convertGameToObject(\n              games.parseContractGameArray(data.args.gameId, gameInContract)\n            );\n            console.log('updated game after close', game);\n            games.update(game);\n\n            // Show the winner of the game\n            games.showWinner(game);\n\n            // Claim the ether automatically\n            games.claimEther(game);\n\n            $rootScope.$apply();\n          }\n        }\n      }\n    }\n  };\n\n  games.eventGameClosed = function(err, data) {\n    console.log('eventGameClosed', err, data);\n    if (err) {\n      console.log('error occured', err);\n      /*$rootScope.$broadcast('message',\n       'The surrender could not be saved, the following error occurred: ' + err,\n       'error', 'playgame');*/\n    } else {\n      // Update game in games list\n      let gameInContract = Chess.games(data.args.gameId);\n\n      if(gameInContract) {\n        for(let i in games.list) {\n          if (games.list[i].gameId === data.args.gameId) {\n            let game = games.convertGameToObject(\n              games.parseContractGameArray(data.args.gameId, gameInContract\n            ));\n            games.update(game);\n\n            // If the player closed his own game\n            if (accounts.availableAccounts.indexOf(data.args.player) !== -1) {\n              navigation.goto(navigation.welcomePage);\n\n              $rootScope.$broadcast('message',\n                'Your game with the id ' + data.args.gameId + ' was closed',\n                'success', 'playgame');\n\n              // If the game did not have an opponent: Claim the ether from this game\n              if (typeof(game.opponent) === 'undefined') {\n                games.claimEther(game);\n              }\n\n              games.removeGame(data.args.gameId);\n\n              $rootScope.$apply();\n            }\n            else {\n              let openGameIndex = games.openGames.indexOf(game.gameId);\n\n              // If this was an open game of another player\n              if (openGameIndex !== -1) {\n                games.removeGame(data.args.gameId);\n                games.openGames.splice(openGameIndex, 1);\n\n                $rootScope.$apply();\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  games.eventGameTimeoutStarted = function (err, data) {\n    console.log('eventGameTimeoutStarted', err, data);\n    if (err) {\n      console.error('error occured', err);\n      return;\n    }\n    let game = games.getGame(data.args.gameId);\n    if (typeof game === 'undefined') {\n      return;\n    }\n    game.timeoutStarted = data.args.timeoutStarted.toNumber();\n    game.timeoutState = data.args.timeoutState.toNumber();\n\n    if (gameStates.isBlockchainStateNewer(game.gameId)) {\n      console.log('blockchain state newer, update');\n      game.state = gameStates.getLastBlockchainState(game);\n      games.update(game);\n      // TODO update chessboard !\n    }\n\n    /*\n     * -2 draw offered by nextPlayer\n     * -1 draw offered by waiting player\n     * 0 nothing\n     * 1 checkmate\n     * 2 timeout\n     */\n    console.log('eventGameTimeoutStarted for', game);\n    if ((game.timeoutState === -1 && game.nextPlayer === game.self.accountId) ||\n        (game.timeoutState === -2 && game.nextPlayer === game.opponent.accountId)) {\n      $rootScope.$broadcast('message',\n        'Player ' + game.opponent.username + ' wants to offer a draw',\n        'message', 'playgame-' + game.gameId);\n    } else if (game.timeoutState === 1 && game.nextPlayer === game.self.accountId) {\n      $rootScope.$broadcast('message',\n        'Player ' + game.opponent.username + ' claims that he won the game',\n        'message', 'playgame-' + game.gameId);\n    } else if (game.timeoutState === 2 && game.nextPlayer === game.self.accountId) {\n      $rootScope.$broadcast('message',\n        'Player ' + game.opponent.username + ' claims that he won the game due to a timeout',\n        'message', 'playgame-' + game.gameId);\n    }\n\n    $rootScope.$apply();\n\n    // Check own state to confirm or decline\n    if (data.args.timeoutState !== 0 && (\n        (game.chess.turn() === 'w' && game.self.color === 'white') ||\n        (game.chess.turn() === 'b' && game.self.color === 'black'))) {\n      if ( // confirm if [1, 2] (claimWin, claimTimeout) and we are checkmate\n          ([1, 2].indexOf(data.args.timeoutState) !== -1 && game.chess.in_checkmate()) || // jshint ignore:line\n          // or confirm if -1 (offerDraw) and stalemate of draw\n          (data.args.timeoutState === -1 && (game.chess.in_stalemate() || game.chess.in_draw())) // jshint ignore:line\n        ) {\n        try {\n          Chess.confirmGameEnded(game.gameId, {from: game.self.accountId,gas: 10000000});\n        } catch (e) {\n          $rootScope.$broadcast('message',\n            'Could not confirm your game against ' + game.opponent.username + ' ended',\n            'error', 'playgame-' + game.gameId);\n          console.log('error while trying to confirm the game ended after draw', e);\n        }\n      } else { // no valid endgame\n        try {\n          games.sendLastStateOrMoveToBlockchain(game);\n        } catch (e) {\n          // no move found that user made before. user has to make a move\n          $rootScope.$broadcast('message',\n            game.opponent.username + ' has started a timeout. ' +\n            'You have to move withing the next ' + game.turnTime + ' minutes ' + 'to decline.',\n            'error', 'playgame-' + game.gameId);\n          // Set countdown. We cannot know when the opponent moves, so just start it from now\n          game.currentTimeout = new Date(new Date().getTime() + game.turnTime * 60 * 1000);\n          console.log(game.opponent.username + ' has started a timeout. You have to move withing ' +\n                      'the next ' + game.turnTime + ' minutes ' + 'to decline.');\n        }\n      }\n    } else if (\n      data.args.timeoutState === -2 && // -2 = offerDraw by turning player\n      // confirm if in stalemate or draw\n      (game.chess.in_stalemate() || game.chess.in_draw()) && ( // jshint ignore:line\n        (game.chess.turn() === 'w' && game.self.color === 'black') ||\n        (game.chess.turn() === 'b' && game.self.color === 'white')\n      )\n    ) { // opponent (currently turning player) offers draw\n      try {\n        Chess.confirmGameEnded(game.gameId, {from: game.self.accountId,gas: 10000000});\n      } catch (e) {\n        $rootScope.$broadcast('message',\n          'Could not confirm your game against ' + game.opponent.username + ' ended',\n          'error', 'playgame-' + game.gameId);\n        console.error('error while trying to confirm the game ended after draw', e);\n      }\n    }\n    $rootScope.$apply();\n  };\n\n  // Fetch games of player\n  for (let accountId of accounts.availableAccounts) {\n    for (let currentGameId of Chess.getGamesOfPlayer(accountId)) {\n      // Check if the game already exists in the games list\n      let game = games.getGame(currentGameId);\n      if (typeof game === 'undefined') {\n        games.add(\n          games.convertGameToObject(\n            games.parseContractGameArray(currentGameId, Chess.games(currentGameId))\n        ));\n      }\n    }\n  }\n\n  // Fetch open games\n  for (let openGameId of Chess.getOpenGameIds()) {\n    // Check if the game already exists in the games list\n    let game = games.getGame(openGameId);\n    if (typeof game === 'undefined') {\n      games.add(\n        games.convertGameToObject(\n          games.parseContractGameArray(openGameId, Chess.games(openGameId))\n        ));\n    }\n    if(games.openGames.indexOf(openGameId) === -1) {\n      games.openGames.push(openGameId);\n    }\n    if(games.openGames.indexOf(openGameId) === -1) {\n      games.openGames.push(openGameId);\n    }\n  }\n\n\n  // Event listeners\n  Chess.GameInitialized({}, games.eventGameInitialized);\n  Chess.GameJoined({}, games.eventGameJoined);\n  Chess.GameStateChanged({}, games.eventGameStateChanged);\n  Chess.Move({}, games.eventMove);\n  Chess.GameEnded({}, games.eventGameEnded);\n  Chess.GameClosed({}, games.eventGameClosed);\n  Chess.GameTimeoutStarted({}, games.eventGameTimeoutStarted);\n\n  return games;\n}).filter('ownGames', function (accounts) {\n  return function (games) {\n    return games.filter(function (game) {\n      return accounts.availableAccounts.indexOf(game.self.accountId) !== -1;\n    });\n  };\n}).filter('othersOpenGames', function (accounts) {\n  return function (games, openGames) {\n    if (typeof games !== 'undefined') {\n      return games.filter(function (game) {\n        return accounts.availableAccounts.indexOf(game.self.accountId) === -1;\n      }).filter(function(game) {\n        return openGames.indexOf(game.gameId) !== -1;\n      });\n    }\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/gamesFactory.js","function generatePieceMapping(){\n  return {\n\n    // for 0x88 to fen\n    '-6': 'k',\n    '-5': 'q',\n    '-4': 'r',\n    '-3': 'b',\n    '-2': 'n',\n    '-1': 'p',\n    '1': 'P',\n    '2': 'N',\n    '3': 'B',\n    '4': 'R',\n    '5': 'Q',\n    '6': 'K',\n\n    // for fen to 0x88\n    'k': -6,\n    'q': -5,\n    'r': -4,\n    'b': -3,\n    'n': -2,\n    'p': -1,\n    'P': 1,\n    'N': 2,\n    'B': 3,\n    'R': 4,\n    'Q': 5,\n    'K': 6\n\n  };\n}\n\nexport function generateMapping () {\n  let x = 0, y = 8;\n  let toBackend = {};\n  let toFrontend = {};\n  let alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\n  for (let i = 0; i < 128; i++) {\n    toBackend[alphabet[x] + y] = i;\n    toFrontend[i] = alphabet[x] + y;\n\n    x++;\n    if (x === 8) {\n      x = 0;\n      y--;\n      i += 8;\n    }\n\n  }\n\n  return {'toBackend': toBackend, 'toFrontend': toFrontend};\n}\n\n/**\n * Convert Standard Algebraic Notation to 0x88 index\n * @param string: SAN string (e.g. 'a3')\n * @return number: Index in 0x88 board\n */\nexport function algebraicToIndex(string) {\n  let alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  return (8-parseInt(string[1]))*16 + alphabet.indexOf(string[0]);\n}\n\nexport function generateState(fen) {\n  let fenComponents = fen.split(' ');\n  let board = fenComponents[0],\n      activeColor = fenComponents[1],\n      castling = fenComponents[2],\n      enPassant = fenComponents[3],\n      // halfMoveClock = fenComponents[4],\n      fullMoveCounter = fenComponents[5];\n\n  // set board to 0x88\n  let state = [];\n  let counter = 0;\n  let toState = generatePieceMapping();\n  let whiteKing, blackKing;\n  for (let i = 0; i < board.length; i++) {\n    if (isNaN(Number(board[i]))) {\n      if (board[i] === '/') {\n        for (let k = 0; k < 8; k++) {\n          state.push((0));\n          counter++;\n        }\n      } else {\n        state.push((toState[board[i]]));\n        if (board[i] === 'k') {\n          blackKing = counter;\n        }\n        if (board[i] === 'K') {\n          whiteKing = counter;\n        }\n        counter++;\n      }\n    } else {\n      for (let j = 0; j < Number(board[i]); j++) {\n        state.push((0));\n        counter++;\n      }\n    }\n  }\n  // fill rest of shadow field\n  for (let j = 0; j < 8; j++) {\n    state.push((0));\n  }\n\n  // fullmove\n  let halfMoveCounter = 2 * fullMoveCounter + (activeColor === 'w' ? -2 : -1);\n  state[8] = (parseInt(halfMoveCounter / 128));\n  state[9] = (parseInt(halfMoveCounter % 128));\n\n  // set king position\n  state[11] = (blackKing);\n  state[123] = (whiteKing);\n\n  // set color\n  if (activeColor === 'w') {\n    state[56] = (1);\n  } else {\n    state[56] = (-1);\n  }\n\n  // init for castling\n  state[78] = (-1);\n  state[79] = (-1);\n  state[62] = (-1);\n  state[63] = (-1);\n\n  // change state if castling is possible\n  for (var k = 0; k < castling.length; k++) {\n    // white right - kleine rochade für weiß\n    if (castling[k] === 'K') {\n      state[79] = 0;\n    }\n    // white left - große rochade für weiß\n    else if (castling[k] === 'Q') {\n      state[78] = 0;\n    }\n    // black right - kleine rochade für schwarz\n    else if (castling[k] === 'k') {\n      state[63] = 0;\n    }\n    // black left - große rochade für schwarz\n    else if (castling[k] === 'q') {\n      state[62] = 0;\n    }\n  }\n\n  // set enpassant\n  let mapping = generateMapping();\n  state[61] = mapping.toBackend[enPassant];\n  if (typeof state[61] === 'undefined') {\n    state[61] = 0;\n  }\n  state[77] = mapping.toBackend[enPassant];\n  if (typeof state[77] === 'undefined') {\n    state[77] = 0;\n  }\n\n  return state;\n}\n\nexport function generateFen(state) {\n  let skip = 0, fen = '', zero = 0, toPiece = generatePieceMapping();\n\n  for (var i = 0; i < state.length; i++) {\n    // field is empty\n    if (state[i] === 0) {\n      zero += 1;\n    }\n    // field contains a piece\n    else {\n\n      // before concatinate piece to fen, check if zeros exist\n      if (zero > 0) {\n        fen += zero;\n        zero = 0;\n      }\n      fen += toPiece[state[i]];\n    }\n\n    skip++;\n\n    // shadow board\n    if (skip === 8) {\n\n      // concatinate rest to fen if exists\n      if (zero > 0) {\n        fen += zero;\n        zero = 0;\n      }\n\n      // concatinate '/'\n      if (i < 118) {\n        fen += '/';\n      }\n\n      // skip shadow board and reset skip\n      i += 8;\n      skip = 0;\n    }\n  }\n\n  // set current player\n  if (state[56] === 1) {\n    // white\n    fen += ' w ';\n  } else {\n    // black\n    fen += ' b ';\n  }\n\n  // set Rochade\n  if (state[79] === 0 || state[78] === 0 ||\n    state[62] === 0 || state[63] === 0) {\n    if (state[79] === 0) {\n      fen += 'K';\n    }\n    if (state[78] === 0) {\n      fen += 'Q';\n    }\n    if (state[62] === 0) {\n      fen += 'k';\n    }\n    if (state[63] === 0) {\n      fen += 'q';\n    }\n  } else {\n    fen += '-';\n  }\n\n  // set En passant\n  if (state[61] > 0 || state[77] > 0) {\n    let position = generateMapping();\n    if (state[61] > 0) {\n      fen += ' ' + position.toFrontend[state[61]];\n    }\n    else if (state[77] > 0) {\n      fen += ' ' + position.toFrontend[state[77]];\n    }\n  } else {\n    fen += ' -';\n  }\n\n  // set clock for halfmoves since last capture or pawn advance\n  // not implemented, so always 0\n  fen += ' 0 ';\n\n  // set fullmove number\n  let halfMoveCounter = 128 * state[8] + state[9];\n  fen += Math.ceil((halfMoveCounter + 1) / 2);\n\n  return fen;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/utils/fen-conversion.js","export default {\n  'appId': 'dappChess_server',\n  'proxyUri': 'https://dappchessserver.sdhacson.repl.co',\n  'timeouts': {\n    'ack': 10000\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/config.js","/*\n * Copyright (c) 2020, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2018, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\nvar Chess = function(fen) {\n  var BLACK = 'b'\n  var WHITE = 'w'\n\n  var EMPTY = -1\n\n  var PAWN = 'p'\n  var KNIGHT = 'n'\n  var BISHOP = 'b'\n  var ROOK = 'r'\n  var QUEEN = 'q'\n  var KING = 'k'\n\n  var SYMBOLS = 'pnbrqkPNBRQK'\n\n  var DEFAULT_POSITION =\n    'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*']\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  }\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14, 18, 33, 31, 14],\n    b: [-17, -15, 17, 15],\n    r: [-16, 1, 16, -1],\n    q: [-17, -16, -15, 1, 17, 16, 15, -1],\n    k: [-17, -16, -15, 1, 17, 16, 15, -1]\n  }\n\n  // prettier-ignore\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  // prettier-ignore\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 }\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  }\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  }\n\n  var RANK_1 = 7\n  var RANK_2 = 6\n  var RANK_3 = 5\n  var RANK_4 = 4\n  var RANK_5 = 3\n  var RANK_6 = 2\n  var RANK_7 = 1\n  var RANK_8 = 0\n\n  // prettier-ignore\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [\n      { square: SQUARES.a1, flag: BITS.QSIDE_CASTLE },\n      { square: SQUARES.h1, flag: BITS.KSIDE_CASTLE }\n    ],\n    b: [\n      { square: SQUARES.a8, flag: BITS.QSIDE_CASTLE },\n      { square: SQUARES.h8, flag: BITS.KSIDE_CASTLE }\n    ]\n  }\n\n  var board = new Array(128)\n  var kings = { w: EMPTY, b: EMPTY }\n  var turn = WHITE\n  var castling = { w: 0, b: 0 }\n  var ep_square = EMPTY\n  var half_moves = 0\n  var move_number = 1\n  var history = []\n  var header = {}\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION)\n  } else {\n    load(fen)\n  }\n\n  function clear(keep_headers) {\n    if (typeof keep_headers === 'undefined') {\n      keep_headers = false\n    }\n\n    board = new Array(128)\n    kings = { w: EMPTY, b: EMPTY }\n    turn = WHITE\n    castling = { w: 0, b: 0 }\n    ep_square = EMPTY\n    half_moves = 0\n    move_number = 1\n    history = []\n    if (!keep_headers) header = {}\n    update_setup(generate_fen())\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION)\n  }\n\n  function load(fen, keep_headers) {\n    if (typeof keep_headers === 'undefined') {\n      keep_headers = false\n    }\n\n    var tokens = fen.split(/\\s+/)\n    var position = tokens[0]\n    var square = 0\n\n    if (!validate_fen(fen).valid) {\n      return false\n    }\n\n    clear(keep_headers)\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i)\n\n      if (piece === '/') {\n        square += 8\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10)\n      } else {\n        var color = piece < 'a' ? WHITE : BLACK\n        put({ type: piece.toLowerCase(), color: color }, algebraic(square))\n        square++\n      }\n    }\n\n    turn = tokens[1]\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE\n    }\n\n    ep_square = tokens[3] === '-' ? EMPTY : SQUARES[tokens[3]]\n    half_moves = parseInt(tokens[4], 10)\n    move_number = parseInt(tokens[5], 10)\n\n    update_setup(generate_fen())\n\n    return true\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n      0: 'No errors.',\n      1: 'FEN string must contain six space-delimited fields.',\n      2: '6th field (move number) must be a positive integer.',\n      3: '5th field (half move counter) must be a non-negative integer.',\n      4: '4th field (en-passant square) is invalid.',\n      5: '3rd field (castling availability) is invalid.',\n      6: '2nd field (side to move) is invalid.',\n      7: \"1st field (piece positions) does not contain 8 '/'-delimited rows.\",\n      8: '1st field (piece positions) is invalid [consecutive numbers].',\n      9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square'\n    }\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/)\n    if (tokens.length !== 6) {\n      return { valid: false, error_number: 1, error: errors[1] }\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || parseInt(tokens[5], 10) <= 0) {\n      return { valid: false, error_number: 2, error: errors[2] }\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || parseInt(tokens[4], 10) < 0) {\n      return { valid: false, error_number: 3, error: errors[3] }\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return { valid: false, error_number: 4, error: errors[4] }\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if (!/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return { valid: false, error_number: 5, error: errors[5] }\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return { valid: false, error_number: 6, error: errors[6] }\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/')\n    if (rows.length !== 8) {\n      return { valid: false, error_number: 7, error: errors[7] }\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0\n      var previous_was_number = false\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return { valid: false, error_number: 8, error: errors[8] }\n          }\n          sum_fields += parseInt(rows[i][k], 10)\n          previous_was_number = true\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return { valid: false, error_number: 9, error: errors[9] }\n          }\n          sum_fields += 1\n          previous_was_number = false\n        }\n      }\n      if (sum_fields !== 8) {\n        return { valid: false, error_number: 10, error: errors[10] }\n      }\n    }\n\n    if (\n      (tokens[3][1] == '3' && tokens[1] == 'w') ||\n      (tokens[3][1] == '6' && tokens[1] == 'b')\n    ) {\n      return { valid: false, error_number: 11, error: errors[11] }\n    }\n\n    /* everything's okay! */\n    return { valid: true, error_number: 0, error: errors[0] }\n  }\n\n  function generate_fen() {\n    var empty = 0\n    var fen = ''\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++\n      } else {\n        if (empty > 0) {\n          fen += empty\n          empty = 0\n        }\n        var color = board[i].color\n        var piece = board[i].type\n\n        fen += color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/'\n        }\n\n        empty = 0\n        i += 8\n      }\n    }\n\n    var cflags = ''\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) {\n      cflags += 'K'\n    }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) {\n      cflags += 'Q'\n    }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) {\n      cflags += 'k'\n    }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) {\n      cflags += 'q'\n    }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-'\n    var epflags = ep_square === EMPTY ? '-' : algebraic(ep_square)\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ')\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' && typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1]\n      }\n    }\n    return header\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1'\n      header['FEN'] = fen\n    } else {\n      delete header['SetUp']\n      delete header['FEN']\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]]\n    return piece ? { type: piece.type, color: piece.color } : null\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false\n    }\n\n    var sq = SQUARES[square]\n\n    /* don't let the user place more than one king */\n    if (\n      piece.type == KING &&\n      !(kings[piece.color] == EMPTY || kings[piece.color] == sq)\n    ) {\n      return false\n    }\n\n    board[sq] = { type: piece.type, color: piece.color }\n    if (piece.type === KING) {\n      kings[piece.color] = sq\n    }\n\n    update_setup(generate_fen())\n\n    return true\n  }\n\n  function remove(square) {\n    var piece = get(square)\n    board[SQUARES[square]] = null\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY\n    }\n\n    update_setup(generate_fen())\n\n    return piece\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    }\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION\n      move.promotion = promotion\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type\n    } else if (flags & BITS.EP_CAPTURE) {\n      move.captured = PAWN\n    }\n    return move\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (\n        board[from].type === PAWN &&\n        (rank(to) === RANK_8 || rank(to) === RANK_1)\n      ) {\n        var pieces = [QUEEN, ROOK, BISHOP, KNIGHT]\n        for (var i = 0, len = pieces.length; i < len; i++) {\n          moves.push(build_move(board, from, to, flags, pieces[i]))\n        }\n      } else {\n        moves.push(build_move(board, from, to, flags))\n      }\n    }\n\n    var moves = []\n    var us = turn\n    var them = swap_color(us)\n    var second_rank = { b: RANK_7, w: RANK_2 }\n\n    var first_sq = SQUARES.a8\n    var last_sq = SQUARES.h1\n    var single_square = false\n\n    /* do we want legal moves? */\n    var legal =\n      typeof options !== 'undefined' && 'legal' in options\n        ? options.legal\n        : true\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square]\n        single_square = true\n      } else {\n        /* invalid square */\n        return []\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      var piece = board[i]\n      if (piece == null || piece.color !== us) {\n        continue\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0]\n        if (board[square] == null) {\n          add_move(board, moves, i, square, BITS.NORMAL)\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1]\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN)\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j]\n          if (square & 0x88) continue\n\n          if (board[square] != null && board[square].color === them) {\n            add_move(board, moves, i, square, BITS.CAPTURE)\n          } else if (square === ep_square) {\n            add_move(board, moves, i, ep_square, BITS.EP_CAPTURE)\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j]\n          var square = i\n\n          while (true) {\n            square += offset\n            if (square & 0x88) break\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL)\n            } else {\n              if (board[square].color === us) break\n              add_move(board, moves, i, square, BITS.CAPTURE)\n              break\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if (!single_square || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us]\n        var castling_to = castling_from + 2\n\n        if (\n          board[castling_from + 1] == null &&\n          board[castling_to] == null &&\n          !attacked(them, kings[us]) &&\n          !attacked(them, castling_from + 1) &&\n          !attacked(them, castling_to)\n        ) {\n          add_move(board, moves, kings[us], castling_to, BITS.KSIDE_CASTLE)\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us]\n        var castling_to = castling_from - 2\n\n        if (\n          board[castling_from - 1] == null &&\n          board[castling_from - 2] == null &&\n          board[castling_from - 3] == null &&\n          !attacked(them, kings[us]) &&\n          !attacked(them, castling_from - 1) &&\n          !attacked(them, castling_to)\n        ) {\n          add_move(board, moves, kings[us], castling_to, BITS.QSIDE_CASTLE)\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = []\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i])\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i])\n      }\n      undo_move()\n    }\n\n    return legal_moves\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n    var output = ''\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O'\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O'\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy)\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0]\n        }\n        output += 'x'\n      }\n\n      output += algebraic(move.to)\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase()\n      }\n    }\n\n    make_move(move)\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#'\n      } else {\n        output += '+'\n      }\n    }\n    undo_move()\n\n    return output\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/, '').replace(/[+#]?[?!]*$/, '')\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue\n\n      var piece = board[i]\n      var difference = i - square\n      var index = difference + 119\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true\n          } else {\n            if (piece.color === BLACK) return true\n          }\n          continue\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true\n\n        var offset = RAYS[index]\n        var j = i + offset\n\n        var blocked = false\n        while (j !== square) {\n          if (board[j] != null) {\n            blocked = true\n            break\n          }\n          j += offset\n        }\n\n        if (!blocked) return true\n      }\n    }\n\n    return false\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color])\n  }\n\n  function in_check() {\n    return king_attacked(turn)\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0\n  }\n\n  function insufficient_material() {\n    var pieces = {}\n    var bishops = []\n    var num_pieces = 0\n    var sq_color = 0\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2\n      if (i & 0x88) {\n        i += 7\n        continue\n      }\n\n      var piece = board[i]\n      if (piece) {\n        pieces[piece.type] = piece.type in pieces ? pieces[piece.type] + 1 : 1\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color)\n        }\n        num_pieces++\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) {\n      return true\n    } else if (\n      /* k vs. kn .... or .... k vs. kb */\n      num_pieces === 3 &&\n      (pieces[BISHOP] === 1 || pieces[KNIGHT] === 1)\n    ) {\n      return true\n    } else if (num_pieces === pieces[BISHOP] + 2) {\n      /* kb vs. kb where any number of bishops are all on the same color */\n      var sum = 0\n      var len = bishops.length\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i]\n      }\n      if (sum === 0 || sum === len) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = []\n    var positions = {}\n    var repetition = false\n\n    while (true) {\n      var move = undo_move()\n      if (!move) break\n      moves.push(move)\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen()\n        .split(' ')\n        .slice(0, 4)\n        .join(' ')\n\n      /* has the position occurred three or move times */\n      positions[fen] = fen in positions ? positions[fen] + 1 : 1\n      if (positions[fen] >= 3) {\n        repetition = true\n      }\n\n      if (!moves.length) {\n        break\n      }\n      make_move(moves.pop())\n    }\n\n    return repetition\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: { b: kings.b, w: kings.w },\n      turn: turn,\n      castling: { b: castling.b, w: castling.w },\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    })\n  }\n\n  function make_move(move) {\n    var us = turn\n    var them = swap_color(us)\n    push(move)\n\n    board[move.to] = board[move.from]\n    board[move.from] = null\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null\n      } else {\n        board[move.to + 16] = null\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = { type: move.promotion, color: us }\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1\n        var castling_from = move.to + 1\n        board[castling_to] = board[castling_from]\n        board[castling_from] = null\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1\n        var castling_from = move.to - 2\n        board[castling_to] = board[castling_from]\n        board[castling_from] = null\n      }\n\n      /* turn off castling */\n      castling[us] = ''\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (\n          move.from === ROOKS[us][i].square &&\n          castling[us] & ROOKS[us][i].flag\n        ) {\n          castling[us] ^= ROOKS[us][i].flag\n          break\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (\n          move.to === ROOKS[them][i].square &&\n          castling[them] & ROOKS[them][i].flag\n        ) {\n          castling[them] ^= ROOKS[them][i].flag\n          break\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16\n      } else {\n        ep_square = move.to + 16\n      }\n    } else {\n      ep_square = EMPTY\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0\n    } else {\n      half_moves++\n    }\n\n    if (turn === BLACK) {\n      move_number++\n    }\n    turn = swap_color(turn)\n  }\n\n  function undo_move() {\n    var old = history.pop()\n    if (old == null) {\n      return null\n    }\n\n    var move = old.move\n    kings = old.kings\n    turn = old.turn\n    castling = old.castling\n    ep_square = old.ep_square\n    half_moves = old.half_moves\n    move_number = old.move_number\n\n    var us = turn\n    var them = swap_color(turn)\n\n    board[move.from] = board[move.to]\n    board[move.from].type = move.piece // to undo any promotions\n    board[move.to] = null\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = { type: move.captured, color: them }\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index\n      if (us === BLACK) {\n        index = move.to - 16\n      } else {\n        index = move.to + 16\n      }\n      board[index] = { type: PAWN, color: them }\n    }\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1\n        castling_from = move.to - 1\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2\n        castling_from = move.to + 1\n      }\n\n      board[castling_to] = board[castling_from]\n      board[castling_from] = null\n    }\n\n    return move\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({ legal: !sloppy })\n\n    var from = move.from\n    var to = move.to\n    var piece = move.piece\n\n    var ambiguities = 0\n    var same_rank = 0\n    var same_file = 0\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from\n      var ambig_to = moves[i].to\n      var ambig_piece = moves[i].piece\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from)\n      } else if (same_file > 0) {\n        /* if the moving piece rests on the same file, use the rank symbol as the\n         * disambiguator\n         */\n        return algebraic(from).charAt(1)\n      } else {\n        /* else use the file symbol */\n        return algebraic(from).charAt(0)\n      }\n    }\n\n    return ''\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n'\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |'\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . '\n      } else {\n        var piece = board[i].type\n        var color = board[i].color\n        var symbol = color === WHITE ? piece.toUpperCase() : piece.toLowerCase()\n        s += ' ' + symbol + ' '\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n'\n        i += 8\n      }\n    }\n    s += '   +------------------------+\\n'\n    s += '     a  b  c  d  e  f  g  h\\n'\n\n    return s\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move)\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(\n        /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/\n      )\n      if (matches) {\n        var piece = matches[1]\n        var from = matches[2]\n        var to = matches[3]\n        var promotion = matches[4]\n      }\n    }\n\n    var moves = generate_moves()\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if (\n        clean_move === stripped_san(move_to_san(moves[i])) ||\n        (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))\n      ) {\n        return moves[i]\n      } else {\n        if (\n          matches &&\n          (!piece || piece.toLowerCase() == moves[i].piece) &&\n          SQUARES[from] == moves[i].from &&\n          SQUARES[to] == moves[i].to &&\n          (!promotion || promotion.toLowerCase() == moves[i].promotion)\n        ) {\n          return moves[i]\n        }\n      }\n    }\n\n    return null\n  }\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4\n  }\n\n  function file(i) {\n    return i & 15\n  }\n\n  function algebraic(i) {\n    var f = file(i),\n      r = rank(i)\n    return 'abcdefgh'.substring(f, f + 1) + '87654321'.substring(r, r + 1)\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move)\n    move.san = move_to_san(move, false)\n    move.to = algebraic(move.to)\n    move.from = algebraic(move.from)\n\n    var flags = ''\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag]\n      }\n    }\n    move.flags = flags\n\n    return move\n  }\n\n  function clone(obj) {\n    var dupe = obj instanceof Array ? [] : {}\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property])\n      } else {\n        dupe[property] = obj[property]\n      }\n    }\n\n    return dupe\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '')\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({ legal: false })\n    var nodes = 0\n    var color = turn\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i])\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1)\n          nodes += child_nodes\n        } else {\n          nodes++\n        }\n      }\n      undo_move()\n    }\n\n    return nodes\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n      /* from the ECMA-262 spec (section 12.6.4):\n       * \"The mechanics of enumerating the properties ... is\n       * implementation dependent\"\n       * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n       * ordered correctly\n       */\n      var keys = []\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n        if (i & 0x88) {\n          i += 7\n          continue\n        }\n        keys.push(algebraic(i))\n      }\n      return keys\n    })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen)\n    },\n\n    reset: function() {\n      return reset()\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options)\n      var moves = []\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (\n          typeof options !== 'undefined' &&\n          'verbose' in options &&\n          options.verbose\n        ) {\n          moves.push(make_pretty(ugly_moves[i]))\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false))\n        }\n      }\n\n      return moves\n    },\n\n    in_check: function() {\n      return in_check()\n    },\n\n    in_checkmate: function() {\n      return in_checkmate()\n    },\n\n    in_stalemate: function() {\n      return in_stalemate()\n    },\n\n    in_draw: function() {\n      return (\n        half_moves >= 100 ||\n        in_stalemate() ||\n        insufficient_material() ||\n        in_threefold_repetition()\n      )\n    },\n\n    insufficient_material: function() {\n      return insufficient_material()\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition()\n    },\n\n    game_over: function() {\n      return (\n        half_moves >= 100 ||\n        in_checkmate() ||\n        in_stalemate() ||\n        insufficient_material() ||\n        in_threefold_repetition()\n      )\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen)\n    },\n\n    fen: function() {\n      return generate_fen()\n    },\n\n    board: function() {\n      var output = [],\n        row = []\n\n      for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n        if (board[i] == null) {\n          row.push(null)\n        } else {\n          row.push({ type: board[i].type, color: board[i].color })\n        }\n        if ((i + 1) & 0x88) {\n          output.push(row)\n          row = []\n          i += 8\n        }\n      }\n\n      return output\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline =\n        typeof options === 'object' && typeof options.newline_char === 'string'\n          ? options.newline_char\n          : '\\n'\n      var max_width =\n        typeof options === 'object' && typeof options.max_width === 'number'\n          ? options.max_width\n          : 0\n      var result = []\n      var header_exists = false\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \"' + header[i] + '\"]' + newline)\n        header_exists = true\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline)\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = []\n      while (history.length > 0) {\n        reversed_history.push(undo_move())\n      }\n\n      var moves = []\n      var move_string = ''\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop()\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...'\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string)\n          }\n          move_string = move_number + '.'\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false)\n        make_move(move)\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(move_string)\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result)\n      }\n\n      /* history should be back to what is was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ')\n      }\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0\n      for (var i = 0; i < moves.length; i++) {\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop()\n          }\n\n          result.push(newline)\n          current_width = 0\n        } else if (i !== 0) {\n          result.push(' ')\n          current_width++\n        }\n        result.push(moves[i])\n        current_width += moves[i].length\n      }\n\n      return result.join('')\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy =\n        typeof options !== 'undefined' && 'sloppy' in options\n          ? options.sloppy\n          : false\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\')\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true\n        }\n        return false\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char =\n          typeof options === 'object' &&\n          typeof options.newline_char === 'string'\n            ? options.newline_char\n            : '\\r?\\n'\n        var header_obj = {}\n        var headers = header.split(new RegExp(mask(newline_char)))\n        var key = ''\n        var value = ''\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1')\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1')\n          if (trim(key).length > 0) {\n            header_obj[key] = value\n          }\n        }\n\n        return header_obj\n      }\n\n      var newline_char =\n        typeof options === 'object' && typeof options.newline_char === 'string'\n          ? options.newline_char\n          : '\\r?\\n'\n\n      // RegExp to split header. Takes advantage of the fact that header and movetext\n      // will always have a blank line between them (ie, two newline_char's).\n      // With default newline_char, will equal: /^(\\[((?:\\r?\\n)|.)*\\])(?:\\r?\\n){2}/\n      var header_regex = new RegExp(\n        '^(\\\\[((?:' +\n          mask(newline_char) +\n          ')|.)*\\\\])' +\n          '(?:' +\n          mask(newline_char) +\n          '){2}'\n      )\n\n      // If no header given, begin with moves.\n      var header_string = header_regex.test(pgn)\n        ? header_regex.exec(pgn)[1]\n        : ''\n\n      // Put the board in the starting position\n      reset()\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options)\n      for (var key in headers) {\n        set_header([key, headers[key]])\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n       * [FEN position] */\n      if (headers['SetUp'] === '1') {\n        if (!('FEN' in headers && load(headers['FEN'], true))) {\n          // second argument to load: don't clear the headers\n          return false\n        }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn\n        .replace(header_string, '')\n        .replace(new RegExp(mask(newline_char), 'g'), ' ')\n\n      /* delete comments */\n      ms = ms.replace(/(\\{[^}]+\\})+?/g, '')\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '')\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '')\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '')\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '')\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/))\n\n      /* delete empty entries */\n      moves = moves\n        .join(',')\n        .replace(/,,+/g, ',')\n        .split(',')\n      var move = ''\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        move = move_from_san(moves[half_move], sloppy)\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false\n        } else {\n          make_move(move)\n        }\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1]\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move])\n        }\n      } else {\n        move = move_from_san(move, sloppy)\n        if (move == null) {\n          return false\n        } else {\n          make_move(move)\n        }\n      }\n      return true\n    },\n\n    header: function() {\n      return set_header(arguments)\n    },\n\n    ascii: function() {\n      return ascii()\n    },\n\n    turn: function() {\n      return turn\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy =\n        typeof options !== 'undefined' && 'sloppy' in options\n          ? options.sloppy\n          : false\n\n      var move_obj = null\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy)\n      } else if (typeof move === 'object') {\n        var moves = generate_moves()\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (\n            move.from === algebraic(moves[i].from) &&\n            move.to === algebraic(moves[i].to) &&\n            (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)\n          ) {\n            move_obj = moves[i]\n            break\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj)\n\n      make_move(move_obj)\n\n      return pretty_move\n    },\n\n    undo: function() {\n      var move = undo_move()\n      return move ? make_pretty(move) : null\n    },\n\n    clear: function() {\n      return clear()\n    },\n\n    put: function(piece, square) {\n      return put(piece, square)\n    },\n\n    get: function(square) {\n      return get(square)\n    },\n\n    remove: function(square) {\n      return remove(square)\n    },\n\n    perft: function(depth) {\n      return perft(depth)\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square]\n        return (rank(sq_0x88) + file(sq_0x88)) % 2 === 0 ? 'light' : 'dark'\n      }\n\n      return null\n    },\n\n    history: function(options) {\n      var reversed_history = []\n      var move_history = []\n      var verbose =\n        typeof options !== 'undefined' &&\n        'verbose' in options &&\n        options.verbose\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move())\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop()\n        if (verbose) {\n          move_history.push(make_pretty(move))\n        } else {\n          move_history.push(move_to_san(move))\n        }\n        make_move(move)\n      }\n\n      return move_history\n    }\n  }\n}\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined')\n  define(function() {\n    return Chess\n  })\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chess.js/chess.js\n// module id = 112\n// module chunks = 0","var io = require('socket.io-client');\r\nvar uuid = require(\"uuid\");\r\n\r\nvar shhFactory = function(uri, next) {\r\n  var instance = {\r\n    watchers: {},\r\n\r\n    connect: function(uri) {\r\n      this.socket = io.connect(uri);\r\n    },\r\n\r\n    newIdentity: function() {\r\n      this.identity = '0x' + uuid.v4().replace(/\\-/g, '').substr(0,20);\r\n      this.socket.emit('register', {address: this.identity});\r\n      return this.identity;\r\n    },\r\n\r\n    register: function(identity) {\r\n      this.socket.emit('register', {address: identity});\r\n    },\r\n\r\n    post: function(options) {\r\n      if (typeof options.topic != 'undefined') {\r\n        options.topic = options.topic.join('');\r\n      }\r\n      this.socket.emit('send', options);\r\n    },\r\n\r\n    watch: function(options) {\r\n      var topic = '';\r\n      if (typeof options.topic != 'undefined') {\r\n        topic = options.topic.join('');\r\n      }\r\n      var ev = {\r\n        arrived: function(fun){\r\n          if (typeof instance.watchers[this.topic] == 'undefined') {\r\n            instance.watchers[this.topic] = [fun];\r\n          } else {\r\n            instance.watchers[this.topic].push(fun);\r\n          }  \r\n        },\r\n        remove: function() {\r\n          if (typeof instance.watchers[this.topic] != 'undefined') {\r\n            delete instance.watchers[this.topic];\r\n          }\r\n        }\r\n      };\r\n      ev.topic = topic;\r\n      return ev;\r\n    },\r\n\r\n    arrivedTopic: function(topic, data) {\r\n      if (typeof this.watchers[topic] == 'undefined') {\r\n        // Message for not-watched topic.\r\n        return;\r\n      }\r\n      this.watchers[topic].forEach(function(watcher) {\r\n        watcher(data);\r\n      });\r\n    }\r\n  };\r\n  instance.connect(uri);\r\n  instance.socket.on('connect', function() {\r\n    if (typeof next == 'function') {\r\n      next(instance);\r\n    }\r\n  });\r\n  instance.socket.on('receive', function(data) {\r\n    instance.arrivedTopic(data.topic, data);\r\n  });\r\n  return instance;\r\n};\r\n\r\nmodule.exports = shhFactory;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3-shh-dropin-for-proxy/shh.js\n// module id = 113\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  } else if (opts && 'object' === typeof opts.query) {\n    opts.query = encodeQueryString(opts.query);\n  }\n  return io.socket(parsed.path, opts);\n}\n/**\n *  Helper method to parse query objects to string.\n * @param {object} query\n * @returns {string}\n */\nfunction encodeQueryString (obj) {\n  var str = [];\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  }\n  return str.join('&');\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/index.js\n// module id = 114\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/url.js\n// module id = 115\n// module chunks = 0","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseuri/index.js\n// module id = 116\n// module chunks = 0","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    return exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (typeof process !== 'undefined' && 'env' in process) {\n    return process.env.DEBUG;\n  }\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/debug/browser.js\n// module id = 117\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 118\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug.debug = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting\n    args = exports.formatArgs.apply(self, args);\n\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/debug/debug.js\n// module id = 119\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/ms/index.js\n// module id = 120\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    p = tryParse(p, str.substr(i));\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(p, str) {\n  try {\n    p.data = json.parse(str);\n  } catch(e){\n    return error();\n  }\n  return p; \n};\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/index.js\n// module id = 121\n// module chunks = 0","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/~/debug/browser.js\n// module id = 122\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/~/debug/debug.js\n// module id = 123\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/~/ms/index.js\n// module id = 124\n// module chunks = 0","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json3/lib/json3.js\n// module id = 125\n// module chunks = 0","module.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 126\n// module chunks = 0","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/~/component-emitter/index.js\n// module id = 127\n// module chunks = 0","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/binary.js\n// module id = 128\n// module chunks = 0","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 129\n// module chunks = 0","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/socket.io-parser/is-buffer.js\n// module id = 130\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/manager.js\n// module id = 131\n// module chunks = 0","\nmodule.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/index.js\n// module id = 132\n// module chunks = 0","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/index.js\n// module id = 133\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders,\n    forceNode: this.forceNode,\n    localAddress: this.localAddress\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/socket.js\n// module id = 134\n// module chunks = 0","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/index.js\n// module id = 135\n// module chunks = 0","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/xmlhttprequest.js\n// module id = 136\n// module chunks = 0","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-cors/index.js\n// module id = 137\n// module chunks = 0","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-xhr.js\n// module id = 138\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling.js\n// module id = 139\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transport.js\n// module id = 140\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('wtf-8');\n\nvar base64encoder;\nif (global && global.ArrayBuffer) {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data == 'string') {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data);\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/browser.js\n// module id = 141\n// module chunks = 0","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/keys.js\n// module id = 142\n// module chunks = 0","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-binary/index.js\n// module id = 143\n// module chunks = 0","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/arraybuffer.slice/index.js\n// module id = 144\n// module chunks = 0","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/after/index.js\n// module id = 145\n// module chunks = 0","/*! https://mths.be/wtf8 v1.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction wtf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte.\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read the first byte.\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid WTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction wtf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar wtf8 = {\n\t\t'version': '1.0.0',\n\t\t'encode': wtf8encode,\n\t\t'decode': wtf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn wtf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = wtf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in wtf8) {\n\t\t\t\thasOwnProperty.call(wtf8, key) && (freeExports[key] = wtf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.wtf8 = wtf8;\n\t}\n\n}(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/wtf-8/wtf-8.js\n// module id = 146\n// module chunks = 0","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/base64-arraybuffer/lib/base64-arraybuffer.js\n// module id = 147\n// module chunks = 0","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/blob/index.js\n// module id = 148\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/component-emitter/index.js\n// module id = 149\n// module chunks = 0","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseqs/index.js\n// module id = 150\n// module chunks = 0","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-inherit/index.js\n// module id = 151\n// module chunks = 0","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/yeast/index.js\n// module id = 152\n// module chunks = 0","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    return exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (typeof process !== 'undefined' && 'env' in process) {\n    return process.env.DEBUG;\n  }\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/debug/browser.js\n// module id = 153\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug.debug = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting\n    args = exports.formatArgs.apply(self, args);\n\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/[\\\\^$+?.()|[\\]{}]/g, '\\\\$&').replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/debug/debug.js\n// module id = 154\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/ms/index.js\n// module id = 155\n// module chunks = 0","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-jsonp.js\n// module id = 156\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = void (0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/websocket.js\n// module id = 157\n// module chunks = 0","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/indexof/index.js\n// module id = 159\n// module chunks = 0","/**\r\n * JSON parse.\r\n *\r\n * @see Based on jQuery#parseJSON (MIT) and JSON2\r\n * @api private\r\n */\r\n\r\nvar rvalidchars = /^[\\],:{}\\s]*$/;\r\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\r\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\r\nvar rtrimLeft = /^\\s+/;\r\nvar rtrimRight = /\\s+$/;\r\n\r\nmodule.exports = function parsejson(data) {\r\n  if ('string' != typeof data || !data) {\r\n    return null;\r\n  }\r\n\r\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\r\n\r\n  // Attempt to parse using the native JSON parser first\r\n  if (global.JSON && JSON.parse) {\r\n    return JSON.parse(data);\r\n  }\r\n\r\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\r\n      .replace(rvalidtokens, ']')\r\n      .replace(rvalidbraces, ''))) {\r\n    return (new Function('return ' + data))();\r\n  }\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parsejson/index.js\n// module id = 160\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      this.packet({type: parser.CONNECT, query: this.query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/socket.js\n// module id = 161\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/~/component-emitter/index.js\n// module id = 162\n// module chunks = 0","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-array/index.js\n// module id = 163\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-client/lib/on.js\n// module id = 164\n// module chunks = 0","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-bind/index.js\n// module id = 165\n// module chunks = 0","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backo2/index.js\n// module id = 166\n// module chunks = 0","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3-shh-dropin-for-proxy/~/uuid/uuid.js\n// module id = 167\n// module chunks = 0","\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/web3-shh-dropin-for-proxy/~/uuid/rng-browser.js\n// module id = 168\n// module chunks = 0","/* global angular */\nimport {web3, Auth} from '../../contract/Auth.sol';\nangular.module('dappChess').factory('crypto', function () {\n  /*\n   * Usage:\n   * let text = 'My super text to be signed';\n   * let signature = crypto.sign(web3.eth.accounts[0], gameId, text);\n   * let valid = crypto.verify(web3.eth.accounts[0], gameId, signature, text);\n   */\n\n  let crypto = {};\n\n  function leftPad (nr, n, str) {\n    return Array(n - String(nr).length + 1).join(str || '0') + nr;\n  }\n\n  function solSha3 (...args) {\n    args = args.map(arg => {\n      if (typeof arg === 'string') {\n        if (arg.substring(0, 2) === '0x') {\n          return arg.slice(2);\n        } else {\n          return web3.toHex(arg).slice(2);\n        }\n      }\n\n      if (typeof arg === 'number') {\n        if (arg < 0) {\n          return leftPad((arg >>> 0).toString(16), 64, 'F');\n        }\n        return leftPad((arg).toString(16), 64, 0);\n      } else {\n        return '';\n      }\n    });\n\n    args = args.join('');\n\n    return '0x' + web3.sha3(args, { encoding: 'hex' });\n  }\n  crypto.solSha3 = solSha3;\n\n  /**\n   * Calculates the signature of the given data.\n   * @param{string} account to be used for signing\n   * @param{string/number/array} data to be signed\n   * @returns{string} the signature of the given data\n   */\n  crypto.sign = function (account, gameId, data=[]) {\n    if (!Array.isArray(data)) data = [data];\n    let hash = solSha3(...data, gameId);\n    return web3.eth.sign(account, hash);\n  };\n\n  /**\n   * Verifies the signature of the given data.\n   * @param{string} account of the signature\n   * @param{string} signature of the data\n   * @param{string/number/array} data that was signed\n   * @returns{boolean} true, iff the signature matches the account and data\n     */\n  crypto.verify = function (account, gameId, signature, data=[]) {\n    if (!Array.isArray(data)) data = [data];\n    let msgHash = solSha3(...data, gameId);\n    let r = signature.slice(0, 66);\n    let s = '0x' + signature.slice(66, 130);\n    let v = '0x' + signature.slice(130, 132);\n    console.log('crypto calling web3.toDecimal', v);\n    v = web3.toDecimal(v);\n\n    return Auth.verify(account, msgHash, v, r, s);\n  };\n\n  crypto.test = function () {\n    const defaultBoard = [-4,-2,-3,-5,-6,-3,-2,-4,0,0,0,4,0,0,0,0,\n                          -1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,\n                          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n                          0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,\n                          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n                          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n                          1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,\n                          4,2,3,5,6,3,2,4,0,0,0,116,0,0,0,0];\n\n    let text = 'My super text to be signed';\n    let gameId = 0x529ae4d1feee4c1b4ae8194856bfec24ae7589bd2e31604d52a9019262b8d38e;\n\n    let signature = crypto.sign(web3.eth.accounts[0], gameId, text);\n    let valid = crypto.verify(web3.eth.accounts[0], gameId, signature, text);\n    console.log('testing crypto.sign & crypo.verify: text \\t\\t\\t==>', valid);\n\n    signature = crypto.sign(web3.eth.accounts[0], gameId, defaultBoard);\n    valid = crypto.verify(web3.eth.accounts[0], gameId, signature, defaultBoard);\n    console.log('testing crypto.sign & crypo.verify: defaultBoard \\t==>', valid);\n\n    signature = crypto.sign(web3.eth.accounts[0], gameId, text);\n    valid = Auth.verifySig(web3.eth.accounts[0], solSha3(text, gameId), signature);\n    console.log('testing crypto.sign & Auth.verifySig: text \\t\\t\\t==>', valid);\n\n    signature = crypto.sign(web3.eth.accounts[0], gameId, defaultBoard);\n    valid = Auth.verifySig(web3.eth.accounts[0], solSha3(...defaultBoard, gameId), signature);\n    console.log('testing crypto.sign & Auth.verifySig: defaultBoard \\t==>', valid);\n  };\n\n  //crypto.test();\n\n  return crypto;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/cryptoFactory.js","/**\r\n * Web3 Helper\r\n * Returns initialized web3 instance\r\n *\r\n * @author: U-Zyn Chua <chua@uzyn.com>\r\n */\r\nvar Web3 = require('web3');\r\nvar web3;\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n web3 = new Web3(window.web3.currentProvider);\r\n} else {\r\n web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n}\r\n\nmodule.exports = {\n\"Auth\": web3.eth.contract([{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"v\",\"type\":\"uint8\"},{\"name\":\"r\",\"type\":\"bytes32\"},{\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"verifySig\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"type\":\"function\"}]).at(\"0x9c4c1ef3f9c4abf6d44e8640c99a6292b6908633\"),\nweb3: web3\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./contract/Auth.sol\n// module id = 170\n// module chunks = 0","/* global angular */\nangular.module('dappChess').controller('WelcomeCtrl', function () {\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/welcome.js","/* global angular */\nconst MESSAGE_TIMEOUTS = {message: 7000, success: 6000, error: 14000};\n\nangular.module('dappChess').controller('MessagesCtrl', function ($scope, $timeout) {\n  $scope.messages = [];\n\n  $scope.$on('message', function(event, message, type = message, topic = null) {\n    let id = Math.random();\n\n    if(topic) {\n      $scope.messages = $scope.messages.filter(function(message) {\n        if(topic === message.topic) {\n          return false;\n        }\n        return true;\n      });\n    }\n    if(type === 'success' || type === 'error' || type === 'message') {\n      $timeout(function() {\n        $scope.messages = $scope.messages.filter(function(message) {\n          if(id === message.id) {\n            return false;\n          }\n          return true;\n        });\n      }, MESSAGE_TIMEOUTS[type]);\n    }\n\n    $scope.messages.push({\n      id: id,\n      message: message,\n      type: type,\n      topic: topic\n    });\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/messages.js","/* global angular */\nimport {web3, Chess} from '../../contract/Chess.sol';\nangular.module('dappChess').controller('InitializeGameCtrl',\n  function ($rootScope, $scope, accounts) {\n    $scope.startcolor = 'white';\n    $scope.username = null;\n    $scope.turntime = 10;\n    $scope.etherbet = 0;\n\n    $scope.accounts = accounts;\n\n    function initializeGame() {\n      $rootScope.$broadcast('message', 'Your game is being created, please wait a moment...',\n                            'loading', 'startgame');\n\n      try {\n        console.log('Trying to initialize game', $scope.username,\n          {\n            from: accounts.selectedAccount,\n            value: web3.toWei($scope.etherbet / 2, 'ether')\n          });\n        Chess.initGame($scope.username, $scope.startcolor === 'white', $scope.turntime,\n         {\n           from: accounts.selectedAccount,\n           gas: 10000000,\n           value: web3.toWei($scope.etherbet / 2, 'ether')\n         });\n      }\n      catch(e) {\n        console.log('Error on initialize game', e);\n        $rootScope.$broadcast('message', 'Could not initialize the game', 'loading', 'startgame');\n      }\n    }\n\n    $scope.initializeGame = function (form) {\n      if(form.$valid) {\n        initializeGame();\n      }\n    };\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/initializeGame.js","/* global angular */\nimport {web3, Chess} from '../../contract/Chess.sol';\nangular.module('dappChess').controller('JoinGameCtrl',\n  function ($rootScope, $scope, games, accounts) {\n    $scope.username = null;\n    $scope.gameId = null;\n    $scope.games = games.list;\n    $scope.openGames = games.openGames;\n    $scope.etherbet = 0;\n\n    $scope.accounts = accounts;\n\n    $scope.setSelectedGame = function($event, game) {\n      $scope.gameId = game.gameId;\n      $scope.etherbet = game.pot;\n\n      $event.preventDefault();\n    };\n    $scope.isSelectedGame = function(game) {\n      return $scope.gameId === game.gameId;\n    };\n\n    function joinGame() {\n      $rootScope.$broadcast('message', 'Trying to join the game, please wait a moment.....',\n                            'loading', 'joingame');\n      try {\n        console.log('Trying to join game', $scope.gameId, $scope.username,\n          {\n            from: accounts.selectedAccount,\n            value: web3.toWei($scope.etherbet.replace(',', '.'), 'ether')\n          });\n        Chess.joinGame($scope.gameId, $scope.username,\n          {\n            from: accounts.selectedAccount,\n            gas: 10000000,\n            value: web3.toWei($scope.etherbet.replace(',', '.'), 'ether')\n          });\n      }\n      catch(e) {\n        console.log('Error joining the game', e);\n        $rootScope.$broadcast('message', 'Could not join the game', 'loading', 'joingame');\n      }\n    }\n\n    $scope.joinGame = function (form) {\n      if(form.$valid) {\n        joinGame();\n      }\n    };\n\n\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/joinGame.js","/* global angular, Chessboard, ChessUtils */\nimport {Chess as SoliChess} from '../../contract/Chess.sol';\nimport {generateState, generateFen, generateMapping} from './utils/fen-conversion.js';\n\nvar module = angular.module('dappChess');\nmodule.controller('PlayGameCtrl',\n  function (games, gameStates, $route, navigation, $scope, $rootScope, $timeout) {\n    // init chess validation\n    var board, lastFrom, lastTo, chessMove;\n\n    $scope.gamePgn = '';\n    $scope.gameStatus = '';\n\n    function lightItUp () {\n      var xWhite = 0, yWhite = 8;\n      var xBlack=7, yBlack=1;\n      var alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n      var playerWhite = {};\n      var playerBlack = {};\n\n      for ( var i=0 ; i < 64; i++){\n        playerWhite[alphabet[xWhite] + yWhite] = i;\n        playerBlack[alphabet[xBlack] + yBlack] = i;\n\n        xWhite++;\n        xBlack--;\n        if (xWhite===8 && xBlack) {\n          yWhite--;\n          yBlack++;\n          xWhite = 0;\n          xBlack = 7;\n        }\n      }\n\n      return {'playerWhite': playerWhite, 'playerBlack': playerBlack};\n    }\n\n    function checkOpenGame(gameId) {\n      return games.openGames.indexOf(gameId) !== -1;\n    }\n\n    // Update game information to user\n    function updateGameInfo(status) {\n      $scope.gameStatus = status;\n      $scope.gamePgn = $scope.game.chess.pgn();\n      // Clean up Setup line\n      $scope.gamePgn = $scope.gamePgn.replace(/\\[SetUp \"1\"\\]\\n\\[FEN \"(.*?)\"\\]/, '$1');\n    }\n\n    // player clicked on chess piece\n    function pieceSelected(notationSquare) {\n      var i,\n        movesNotation,\n        movesPosition = [];\n\n      movesNotation = $scope.game.chess.moves({square: notationSquare, verbose: true});\n      for (i = 0; i < movesNotation.length; i++) {\n        movesPosition.push(ChessUtils.convertNotationSquareToIndex(movesNotation[i].to));\n      }\n      return movesPosition;\n    }\n\n\n    function updateBoardState(game, chessMove = null) {\n      console.log('updateBoardState', game, chessMove);\n      let chess = game.chess;\n\n      if (chessMove) {\n        // If we know which move it was, show it on board\n        console.log('Updating chess board with move');\n        board.move(chessMove.from + '-' + chessMove.to);\n\n        let highlights = lightItUp();\n        var fromW = highlights.playerWhite[chessMove.from];\n        var toW = highlights.playerWhite[chessMove.to];\n        var fromB = highlights.playerBlack[chessMove.from];\n        var toB = highlights.playerBlack[chessMove.to];\n\n        if (lastFrom !== null){\n          $('#board-' + game.gameId + '_chess_square_' + lastFrom)\n            .removeClass('chess_square_moved');\n          $('#board-' + game.gameId + '_chess_square_' + lastTo)\n            .removeClass('chess_square_moved');\n        }\n\n        if (game.self.color === 'white') {\n          $('#board-'+  game.gameId + '_chess_square_' + fromW).addClass('chess_square_moved');\n          $('#board-'+  game.gameId + '_chess_square_' + toW).addClass('chess_square_moved');\n          lastFrom = fromW;\n          lastTo = toW;\n\n        } else {\n          $('#board-'+  game.gameId + '_chess_square_' + fromB).addClass('chess_square_moved');\n          $('#board-'+  game.gameId + '_chess_square_' + toB).addClass('chess_square_moved');\n          lastFrom = fromB;\n          lastTo = toB;\n        }\n      } else {\n        // no known move to show, just update board\n        console.log('Updating chess board with state');\n        board.position(game.chess.fen().split(' ')[0]);\n        if (lastFrom !== null) {\n          $('#board-' + game.gameId + '_chess_square_' + lastFrom)\n            .removeClass('chess_square_moved');\n          $('#board-' + game.gameId + '_chess_square_' + lastTo)\n            .removeClass('chess_square_moved');\n        }\n      }\n\n      let nextPlayer, status,\n        userColor = (game.self.color === 'white') ? 'w' :  'b';\n      // define next player\n      if (userColor === chess.turn()) {\n        nextPlayer = 'You';\n        status = 'It\\'s your turn.';\n        board.enableUserInput(true);\n      } else {\n        nextPlayer = game.opponent.username;\n        status = 'It\\'s ' + nextPlayer + '\\'s turn.';\n        board.enableUserInput(false);\n      }\n\n      /*\n       Situation: - Black/White makes a move. White/Black is in turn now.\n       - Black/White checks checkmate, draw and stalemate conditions\n       - If one of these conditions is true Black/White informs blockchain\n       about the situation.\n       - Note: only the player before will inform blockchain\n       */\n      if (chess.in_checkmate() === true) { // jshint ignore:line\n        status = 'CHECKMATE! ' + nextPlayer + ' lost.';\n        if (chess.turn() === 'b' && game.self.color === 'white') {\n          games.claimWin(game);\n        }\n        if (chess.turn() === 'w' && game.self.color === 'black') {\n          games.claimWin(game);\n        }\n\n      }\n      // draw?\n      else if (chess.in_draw() === true) { // jshint ignore:line\n        status = 'DRAW!';\n        if (chess.turn() === 'b' && game.self.color === 'white') {\n          games.offerDraw(game);\n        }\n        if (chess.turn() === 'w' && game.self.color === 'black') {\n          games.offerDraw(game);\n        }\n      }\n\n      // stalemate?\n      else if (chess.in_stalemate() === true) { // jshint ignore:line\n        status = 'STALEMATE!';\n        if (chess.turn() === 'b' && game.self.color === 'white') {\n          games.offerDraw(game);\n        }\n        if (chess.turn() === 'w' && game.self.color === 'black') {\n          games.offerDraw(game);\n        }\n      }\n\n      // plaver in check?\n      else if (chess.in_check() === true) { // jshint ignore:line\n        status = 'CHECK! ' + status;\n      }\n      updateGameInfo(status);\n    }\n\n    function pieceMoveOffChain(move) {\n      let game = $scope.getGame();\n      console.log('pieceMoveOffChain move number before',\n        gameStates.getMoveNumberFromState(game.state));\n      console.log('old fen', game.chess.fen());\n      // move piece from ... to\n      chessMove = game.chess.move({\n        from: move.from,\n        to: move.to,\n        promotion: 'q'\n      });\n\n      let fen = game.chess.fen();\n      console.log('new fen', fen);\n\n      if (chessMove !== null) {\n        // Submit move off-chain\n        game.state = generateState(fen);\n        console.log('pieceMoveOffChain move number after',\n          gameStates.getMoveNumberFromState(game.state));\n\n        updateBoardState(game, move);\n        // be sure to call sendMove after game updated!\n        games.sendMove(game, move.from, move.to);\n        $scope.$apply();\n      } else {\n        // Invalid move\n      }\n\n      return game.chess.fen();\n    }\n\n    function initChessboard(game) {\n      board = new Chessboard('board-' + game.gameId, {\n          position: game.chess.fen(),\n          eventHandlers: {\n            onPieceSelected: pieceSelected,\n            onMove: pieceMoveOffChain\n          }\n        }\n      );\n\n      // set board orientation and disable black player to click\n      if (game.self.color === 'black') {\n        board.setOrientation(ChessUtils.ORIENTATION.black);\n      }\n\n      // Update game information\n      if (game.ended) {\n        updateGameInfo('Game ended.');\n        board.enableUserInput(false);\n      } else {\n        if (game.chess.turn() === game.self.color[0]) {\n          updateGameInfo('It\\'s your turn.');\n          board.enableUserInput(true);\n        } else {\n          updateGameInfo('It\\'s your opponent\\'s turn.');\n          board.enableUserInput(false);\n        }\n      }\n    }\n\n    $scope.getGameId = function() {\n      return $route.current.params.id;\n    };\n\n    $scope.isOpenGame = function() {\n      let gameId = $scope.getGameId();\n\n      if (gameId) {\n        return checkOpenGame(gameId);\n      }\n\n      return false;\n    };\n\n    $scope.getGame = function() {\n      let gameId = $scope.getGameId();\n\n      if(gameId) {\n        return games.getGame(gameId);\n      }\n\n      return false;\n    };\n\n    $scope.Resign = function() {\n      $rootScope.$broadcast('message', 'Submitting your Resign, please wait...',\n        'loading', 'playgame');\n      try {\n        SoliChess.Resign($scope.getGameId(), \n          {from: $scope.getGame().self.accountId,\n            gas: 10000000});\n      }\n      catch(e) {\n        $rootScope.$broadcast('message', 'Could not submit your Resign',\n          'error', 'playgame-' + $scope.getGameId());\n      }\n    };\n\n    $scope.gameIsWon = function() {\n      let game = $scope.getGame();\n      if(game) {\n        return typeof(game.winner) !== 'undefined' && game.winner === 'self';\n      }\n\n      return false;\n    };\n\n    $scope.gameIsLost = function() {\n      let game = $scope.getGame();\n      if(game) {\n        return typeof(game.winner) !== 'undefined' && game.winner === 'opponent';\n      }\n\n      return false;\n    };\n\n    $scope.gameIsDraw = function () {\n      let game = $scope.getGame();\n      if(game) {\n        return game.ended && (typeof(game.winner) === 'undefined' ||\n          (game.winner !== 'self' && game.winner !== 'opponent'));\n      }\n\n      return false;\n    };\n\n    $scope.gameIsActive = function () {\n      let game = $scope.getGame();\n\n      if (game) {\n        return !game.ended;\n      }\n\n      return false;\n    };\n\n    $scope.gameCanClaimWin = function () {\n      let game = $scope.getGame();\n      if (game && game.chess) {\n        return game.timeoutState === 0 &&\n          game.nextPlayer !== game.self.accountId &&\n          typeof game.nextPlayer !== 'undefined' &&\n          game.chess.in_check() && // jshint ignore:line\n          !game.ended;\n      }\n      return false;\n    };\n\n    $scope.gameCanOfferDraw = function () {\n      let game = $scope.getGame();\n      if (game) {\n        let timeoutDatePlus2TurnTime =\n          new Date(game.timeoutStarted * 1000 + 2 * game.turnTime * 60000);\n        return (game.timeoutState === 0 ||\n          (game.timeoutState === 2 && timeoutDatePlus2TurnTime < new Date())) &&\n          !game.ended;\n      }\n    };\n\n    $scope.gameCanClaimTimeout = function () {\n      let game = $scope.getGame();\n      if (game) {\n        return game.timeoutState === 0 &&\n          game.nextPlayer !== game.self.accountId &&\n          typeof game.nextPlayer !== 'undefined' &&\n          !game.ended;\n      }\n    };\n\n    $scope.gameCanConfirmDraw = function () {\n      let game = $scope.getGame();\n      if (game) {\n        return (\n            (game.timeoutState === -1 && game.nextPlayer === game.self.accountId) ||\n            (game.timeoutState === -2 && game.nextPlayer !== game.self.accountId &&\n              typeof game.nextPlayer !== 'undefined')\n          ) && !game.ended;\n      }\n    };\n\n    $scope.gameCanConfirmLoose = function () {\n      let game = $scope.getGame();\n      if (game) {\n        return (game.timeoutState === 1 || game.timeoutState === 2) &&\n          game.nextPlayer === game.self.accountId &&\n          !game.ended;\n      }\n    };\n\n    $scope.gameCanClaimTimeoutEnded = function () {\n      let game = $scope.getGame();\n      if (game && game.timeoutState !== 0) {\n        let timeoutDatePlusTurnTime = new Date(game.timeoutStarted * 1000 + game.turnTime * 60000);\n        // TODO show button dynamically, i think now it is only shown after reload when time greater\n        // 10 minutes\n        return game.timeoutState !== 0 &&\n            game.nextPlayer !== game.self.accountId &&\n            timeoutDatePlusTurnTime < new Date() &&\n            !game.ended;\n      }\n    };\n\n    $scope.claimWin = function () {\n      games.claimWin($scope.getGame());\n    };\n\n    $scope.offerDraw = function () {\n      games.offerDraw($scope.getGame());\n    };\n\n    $scope.claimTimeout = function () {\n      games.claimTimeout($scope.getGame());\n    };\n\n    $scope.confirmGameEnded = function () {\n      games.confirmGameEnded($scope.getGame());\n    };\n\n    $scope.claimTimeoutEnded = function () {\n      games.claimTimeoutEnded($scope.getGame());\n    };\n\n    $scope.gameHasClaimableEther = function () {\n      let game = $scope.getGame();\n\n      if (game) {\n        return game.self.wonEther > 0;\n      }\n\n      return false;\n    };\n\n    $scope.claimEther = function () {\n      games.claimEther($scope.getGame());\n    };\n\n    $scope.closeGame = function () {\n      SoliChess.closePlayerGame($scope.getGameId(), \n        {from: $scope.getGame().self.accountId,\n          gas: 10000000});\n      $rootScope.$broadcast('message', 'Closing your game, please wait...',\n        'loading', 'playgame');\n    };\n\n    $scope.game = $scope.getGame();\n\n    // Keep track of currently viewing game\n    games.viewingGame.id = $scope.game.gameId;\n    $scope.$on('$destroy', function(){\n        games.viewingGame.id = 0;\n    });\n\n    // Initialize chessboard\n    if (!$scope.isOpenGame()) {\n      if ($scope.game) {\n        $timeout(() => {\n          initChessboard($scope.game);\n          updateBoardState($scope.game);\n          // $scope.$watch('game.lastMove', function(checkMove) {\n          //   updateBoardState($scope.game, checkMove);\n          // });\n          $scope.$watch('game.state', function () {\n            console.log('$watch game.state');\n            let g = $scope.game;\n            try {\n              let toFrontend = generateMapping().toFrontend;\n\n              if (g.chess.turn() === g.self.color[0]) {\n                let lastOpponentMove = gameStates.getLastOpponentMove(g.gameId);\n                if (generateFen(lastOpponentMove.newState) === generateFen(g.state)) {\n                  console.log('$watch send', {\n                    from: toFrontend[lastOpponentMove.moveFrom],\n                    to: toFrontend[lastOpponentMove.moveTo]\n                  }, lastOpponentMove);\n                  updateBoardState(g, {\n                    from: toFrontend[lastOpponentMove.moveFrom],\n                    to: toFrontend[lastOpponentMove.moveTo]\n                  });\n                  return;\n                }\n              }/* else {\n                let lastSelfMove = gameStates.getLastSelfMove(g.gameId);\n                if (generateFen(lastSelfMove.newState) === generateFen(g.state)) {\n                  updateBoardState(g, {\n                    from: toFrontend[lastSelfMove.moveFrom],\n                    to: toFrontend[lastSelfMove.moveTo]\n                  });\n                  return;\n                }\n              }*/\n            } catch (e) {\n              console.log('$watch throw', e);\n            }\n            console.log('$watch update without move');\n            updateBoardState($scope.game);\n          });\n        });\n      } else {\n        navigation.goto(navigation.welcomePage);\n        $rootScope.$broadcast('message', 'No game with the specified id exists',\n                              'error', 'playgame');\n      }\n    }\n  }\n);\n\nmodule.directive('countdown', ['$interval', function($interval){\n  return {\n    scope: { 'to': '=countdown' },\n    template: '{{timeLeft}}',\n    link: function(scope){\n      scope.timeLeft = '';\n\n      function update() {\n        var diff = scope.to.getTime() - new Date().getTime();\n        if (diff > 0) {\n          var minutes = ('00' + Math.floor(diff/60000)).substr(-2);\n          var seconds = ('00' + Math.floor((diff%60000)/1000)).substr(-2);\n          scope.timeLeft = minutes + ':' + seconds + ' left';\n        } else {\n          scope.timeLeft = 'Time\\'s up!';\n        }\n      }\n\n      var interval;\n      function init() {\n        if (typeof scope.to === 'undefined' || !scope.to) {\n          if (typeof interval !== 'undefined') {\n            interval.cancel();\n            scope.timeLeft = '';\n          }\n          return;\n        }\n        interval = $interval(update, 1000);\n      }\n\n      scope.$watch('to', function() {\n          init();\n      });\n      init();\n    }\n  };\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/javascript/playGame.js"],"sourceRoot":""}